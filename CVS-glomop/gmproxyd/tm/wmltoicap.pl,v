head	1.3;
access;
symbols
	current:1.3;
locks; strict;
comment	@# @;


1.3
date	96.08.23.19.37.34;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	96.07.26.20.33.12;	author fox;	state dead;
branches;
next	1.1;

1.1
date	96.07.26.20.32.23;	author fox;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Did a complete merge with the source tree from Wink, and got refinement and
Kerberos authentication working again.  Many, many little subtle changes.
The refinement path was changed to "./gmtmpXXX/I1" from an absolute path
name, which broke some regexps.  Fixing that helped, as well as calling
the determine_htype function with a filename instead of undef.
@
text
@#
#  wmltoicap - for now it just strips tags....  $Id: wmltoicap.pl,v 1.1 96/08/19 14:40:36 glomop Exp $
#
package doc::wmltoicap;

sub convert {
    my ($ch, $client, $prefs) = @@_;
    my $bin = "/staff/glomop/bin/WMLParser";

    my $filename = &util::dump($ch->data);

    open(WMLPARSER, "$bin $filename |") or return;
    my $newdata = '';
    $newdata .= $_ while $_ = <WMLPARSER>;

    close WMLPARSER;

    $ch->data($newdata);
    $ch->anno("ICAP plaintext");
    $ch->mime_type("text/icap");
    return 1;
}
 
1;
@


1.2
log
@these files are Wink-specific, so i removed them from the repository.
wink can manage them in their local repository if they want.
@
text
@d1 3
d7 2
a8 1
    my ($chunk, $client, $prefs) = @@_;
d10 1
a10 2
    my $data;
    # somehow make $data contain the target format
d12 10
a21 8
    my $newchunk = new chunk ("text/icap",
                              undef,
                              $chunk->doc_id,
                              $chunk->chunk_idx,
                              $data,
                              undef,
                              undef,
                              "ICAP version of text item");
d24 1
@


1.1
log
@WebPage can now actually parse web pages, sort of.... html_parser was
moved (perhaps unwisely?) to gmproxyd main directory.
@
text
@@

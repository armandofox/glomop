head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 iang:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     97.11.11.19.48.55;  author iang;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.11.11.19.48.55;  author iang;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef _PLSYS_H
#define _PLSYS_H

#include <PLBase.h>
#include <PLString.h>

/**********************************************************************/
/* Macros (at least one)                                              */
/**********************************************************************/
#define EVER ;;
#define fatalMessage(m) _fatalMessage(__FILE__, __LINE__, m)

class PSystem : private PBaseObj
{
  public:
    static void init(char*);
    static void _fatalMessage(const char*, UInt, const char *msg)
       __attribute__ ((noreturn));
    static inline int objectCount() { return PBaseObj::objCount_; }
    static PString versionString();
    static inline Boolean initialized() { return(initialized_); }

  private:
    virtual inline forbidInstantiation() = 0;

  private:
    static  Boolean initialized_;
};

#define PCLInit() (\
{\
  if (PSystem::objectCount() == -1)\
    __main();\
  PSystem::init(___PCL_VERSION___);\
})

extern "C" void __main(void);

#endif /* _PLSYS_H */
@


1.1.1.1
log
@Pilot Class Library
@
text
@@

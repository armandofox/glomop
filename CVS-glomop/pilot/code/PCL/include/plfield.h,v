head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 iang:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     97.11.11.19.48.55;  author iang;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.11.11.19.48.55;  author iang;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef _PLFIELD_H
#define _PLFIELD_H

#include <PLSys.h>
#include <PLBase.h>
#include <PLString.h>
#include <PLUI.h>

class PField : public PControl
{
  friend class PFieldPSclEvtHandler;

  public:
    PField(PForm * parent, Word id,
           const Word scrollbarId,
           const PString& text = (char *) 0, Boolean keep = false);
    PField(PForm * parent, Word id,
           const PString& text = (char *) 0, Boolean keep = false);
    virtual ~PField();
    PString text();
    PField& text(const PString& s, Boolean keep = false);
    Handle  handle();
    PField& handle(Handle h, Boolean keep = true);
    PField& attachScrollbar(const Word id);
    PField& scroll(enum directions, short count = 0);
    Word    allocated();
    inline FieldPtr fieldPtr() { return((FieldPtr) objPtr()); }
  /* From PControl */
  public:
    virtual PField& refresh();

  protected:
    virtual void loadInit();

  private:
    PField(const PField&);
    PField& operator =(const PField&);
    virtual void unloadExit();
    PField& setScrollbar();

  private: /* should be public */
    virtual Boolean usable() { return true; }
    virtual Boolean enabled() { return true; }
    virtual Boolean visible() { return true; }

  private:
    Handle text_;
    Boolean ownHandle_ : 1;
    Boolean keep_ : 1;
    PForm* parent_;
    VoidPtr scl_;
    VoidPtr sclHandler_;
};

#endif /* _PLFIELD_H */

@


1.1.1.1
log
@Pilot Class Library
@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 iang:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     97.11.11.19.48.54;  author iang;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.11.11.19.48.54;  author iang;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef _PLAPPL_H_
#define _PLAPPL_H_

#include <PLSys.h>
#include <PLBase.h>
#include <PLString.h>
#include <PLEvt.h>
#include <PLUI.h>

/*--------------------------------------------------------------------*/
/* Application                                                        */
/*--------------------------------------------------------------------*/
class PApplication : private PEvtLoop, public PForm
{
  public:
    PApplication(const DWord applId,
                 const Word initialFormId,
                 const PEvtSysCallback defaultHandler = 0,
                 const SDWord timeout = evtWaitForever,
                 const Boolean appFirst = false);
    PApplication(const DWord applId,
                 const Word initialFormId,
                 const SDWord timeout,
                 const Boolean appFirst = false);
    PApplication& run();
    static inline DWord   appId() { return(id_.appId_); }
    static inline PString appIdString() { return(PString(id_.appIds_)); }

  private:
    PApplication& init(const DWord appId);
  private:
    static union
    {
      DWord appId_;
      char  appIds_[5];
    } id_;
};

#endif /* _PLAPPL_H */
@


1.1.1.1
log
@Pilot Class Library
@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 iang:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     97.11.11.19.48.54;  author iang;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.11.11.19.48.54;  author iang;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<HTML>
<HEAD>
<TITLE>PList Class</TITLE>
<BASE TARGET="contents">
</HEAD>

<BODY BGCOLOR=#FFFFFF>

<A NAME="DESC"></A>
<H1>PList</H1>
<P>
<BR>
This class represents a listbox.

<A NAME="SYNOP"><H2>Synopsis</H2></A>
<CODE>#include &lt;PLList.h&gt;</CODE>
<P>

<A NAME="DERIV"><H2>Derivation</H2></A>
<DL>
<LI><A HREF="pl_ctli.html">PControl</A><BR>
   <DL>
   <LI>PList<BR>
   </DL>
</DL>
<P>
<P>
<A NAME="CONSTR"><H2>Constructors</H2></A>
<PRE>
    PList(PForm* parent, Word resId)
</PRE>
Constructs a listbox from the resource <CODE>resId</CODE> and adds
it as a child to <CODE>parent</CODE>
<P>
<A NAME="PUBLICF"><H2>Public functions</H2></A>
<PRE>
    int ind();
</PRE>
Returns the index of the selected item or -1 if none selected. Indexing
starts at 0.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PList& ind(int n);
</PRE>
Selects the n-th item. -1 deselect all. Item count starts at 0.
<P>
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PString text();
</PRE>
returns the selected item as <A HREF="pl_stri.html">PString</A>.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PList& add(const PString& s)
</PRE>
Adds the string as the last item in the listbox.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PList& ins(const PString& s, int before)
</PRE>
Inserts the string before the specified index.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PList& remove(int idx);
</PRE>
Deletes the item at the specified index.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PList& removeAll(int idx);
</PRE>
Deletes all items.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    int count();
</PRE>
Returns the number of items currently in the listbox.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PList& scroll(enum directions dir, short lines = 0)
</PRE>
Scrolls the listbox. <CODE>dir</CODE> can be either <CODE>up</CODE> or 
<CODE>down</CODE>. If <CODE>lines</CODE> is omitted, the list scrolls
the number of visible lines.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    PList& setTop(int idx)
</PRE>
Set the specified item a the topmost item in the listbox if possible.
<P>
<HR align="center" size="3" width="90%">
<PRE>
    ListPtr listPtr();
</PRE>
Returns the <CODE>ListPtr</CODE> if the parent form is already shown,
otherwise it returns 0. This can be used to access PalmOS APIs that are not
implemented yet.<BR>
<STRONG><U>NEVER</U></STRONG> use the <CODE>LstSetListChoices</CODE> API,
as this is handled internally by <CODE>PList</CODE> objects!!!
<P>
<HR align="center" size="3" width="90%">
See <A HREF="pl_ctli.html">PControl</A> for inherited public functions.
</BODY>
</HTML>

@


1.1.1.1
log
@Pilot Class Library
@
text
@@

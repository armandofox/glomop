head	1.6;
access;
symbols
	start:1.1.1.1
	soda445:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	97.07.03.17.55.53;	author iang;	state Exp;
branches;
next	1.5;

1.5
date	97.07.02.08.03.51;	author iang;	state Exp;
branches;
next	1.4;

1.4
date	97.06.30.00.46.47;	author iang;	state Exp;
branches;
next	1.3;

1.3
date	97.06.14.00.09.08;	author iang;	state Exp;
branches;
next	1.2;

1.2
date	97.06.12.00.05.16;	author iang;	state Exp;
branches;
next	1.1;

1.1
date	97.05.13.22.33.31;	author iang;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.05.13.22.33.31;	author iang;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Moved FrmGotoForm(MainForm) into StartApplication()
@
text
@/* Main code for template
   See the README file for copyright/licensing terms */

#include <Pilot.h>

#include "templateRsc.h"

static Boolean MainFormHandleEvent (EventPtr e)
{
    Boolean handled = false;
    FormPtr frm;
    
    switch (e->eType) {
    case frmOpenEvent:
	frm = FrmGetActiveForm();
	FrmDrawForm(frm);
	handled = true;
	break;

    case menuEvent:
	MenuEraseStatus(NULL);

	switch(e->data.menu.itemID) {
	}

    	handled = true;
	break;

    case ctlSelectEvent:
	switch(e->data.ctlSelect.controlID) {
	}
	break;

    default:
        break;
    }
    return handled;
}

static Boolean ApplicationHandleEvent(EventPtr e)
{
    FormPtr frm;
    Word    formId;
    Boolean handled = false;

    if (e->eType == frmLoadEvent) {
	formId = e->data.frmLoad.formID;
	frm = FrmInitForm(formId);
	FrmSetActiveForm(frm);

	switch(formId) {
	case MainForm:
	    FrmSetEventHandler(frm, MainFormHandleEvent);
	    break;
	}
	handled = true;
    }

    return handled;
}

/* Get preferences, open (or create) app database */
static Word StartApplication(void)
{
    FrmGotoForm(MainForm);
    return 0;
}

/* Save preferences, close forms, close app database */
static void StopApplication(void)
{
    FrmSaveAllForms();
    FrmCloseAllForms();
}

/* The main event loop */
static void EventLoop(void)
{
    Word err;
    EventType e;

    do {
	EvtGetEvent(&e, evtWaitForever);
	if (! SysHandleEvent (&e))
	    if (! MenuHandleEvent (NULL, &e, &err))
		if (! ApplicationHandleEvent (&e))
		    FrmDispatchEvent (&e);
    } while (e.eType != appStopEvent);
}

/* Main entry point; it is unlikely you will need to change this except to
   handle other launch command codes */
DWord PilotMain(Word cmd, Ptr cmdPBP, Word launchFlags)
{
    Word err;

    if (cmd == sysAppLaunchCmdNormalLaunch) {

	err = StartApplication();
	if (err) return err;

	EventLoop();
	StopApplication();

    } else {
	return sysErrParamErr;
    }

    return 0;
}
@


1.5
log
@change ctlEnter to ctlSelect
@
text
@d65 1
a101 1
	FrmGotoForm(MainForm);
@


1.4
log
@.
@
text
@d30 1
a30 1
	switch(e->data.ctlEnter.controlID) {
@


1.3
log
@Added templateRsc.h indirection
@
text
@a3 2
#pragma pack(2)

a7 30
#ifdef DEBUG
extern long data_start, bss_start;
static void StartDebug(void)
{
 extern void start ();
 DWord romVersion;
 FtrGet(sysFtrCreator, sysFtrNumROMVersion, &romVersion);
 if (romVersion >= 0x02000000) {
    (*(char*)257) = 1; /* Turn on debugging */
 }

 asm("
        lea data_start(%%a4),%%a1
        move.l %%a1,%%d2
        lea bss_start(%%a4),%%a1
        move.l %%a1,%%d1
        lea start(%%pc),%%a0
        move.l %%a0,%%d0
        sub.l #start, %%d0
        move.l #0x12BEEF34, %%d3
        trap #8
        move.l #0, %%d3
        move.l #0, %%d0
        move.l #0, %%d1
        move.l #0, %%d2
 " : : : "d0", "d1", "d2", "d3", "a1", "a0");

}
#endif

a97 3
#ifdef DEBUG
	StartDebug();
#endif
@


1.2
log
@*** empty log message ***
@
text
@d8 1
a8 1
#define MainForm 1000
@


1.1
log
@Initial revision
@
text
@d10 30
d130 3
@


1.1.1.1
log
@Pilot programs
@
text
@@

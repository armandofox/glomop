head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 iang:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     97.11.11.19.53.02;  author iang;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.11.11.19.53.02;  author iang;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#include <Pilot.h>

static struct LibRef *libref = 0;

extern void GLibClose(struct LibRef *);

void GLib_CrRN(void)
{
    asm ("
.global RAND_bytes
RAND_bytes: move.l #1,%%d0; braw dispatch
.global RAND_cleanup
RAND_cleanup: move.l #2,%%d0; braw dispatch
.global RAND_file_name
RAND_file_name: move.l #3,%%d0; braw dispatch
.global RAND_load_db
RAND_load_db: move.l #4,%%d0; braw dispatch
.global RAND_load_file
RAND_load_file: move.l #5,%%d0; braw dispatch
.global RAND_seed
RAND_seed: move.l #6,%%d0; braw dispatch
.global RAND_write_file
RAND_write_file: move.l #7,%%d0; braw dispatch

libname:
    .asciz \"RAND Library\"
    .even

dispatch:
    lea libname(%%pc),%%a1
    move.l %%a1,%%d2
    move.l %%a4,%%d1
    move.l %%d1,%%d1
    jbeq noglobals
    lea libref(%%a4),%%a1
noglobals:
    move.l %0,%%d1
    braw GLibDispatch
    " : : "i" ('CrRN') );
}

register void *reg_a4 asm("%a4");

void GLib_CrRN_clean(Word cmd, Ptr PBP, Word flags)
{
    if (reg_a4 && libref) {
	GLibClose(libref);
	libref = 0;
    }
}

asm("
.section ehook
.long GLib_CrRN_clean
");
@


1.1.1.1
log
@pilotSSLeay-2.0
@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  start:1.1.1.1 iang:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     97.06.11.23.03.20;  author iang;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.06.11.23.03.20;  author iang;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@diff -urN -x Makefile -x include SSLeay-0.6.6-orig/Configure SSLeay-0.6.6/Configure
--- SSLeay-0.6.6-orig/Configure	Sun Jan 12 21:40:28 1997
+++ SSLeay-0.6.6/Configure	Fri Jun  6 06:31:20 1997
@@@@ -61,6 +61,9 @@@@
 "gcc",		"gcc:-O3::BN_LLONG::",
 "cc",		"cc:-O -DNOPROTO -DNOCONST::::",
 
+# For the Pilot
+"palmos", "m68k-palmos-coff-gcc:-O5 -g -fno-builtin::SIXTEEN_BITS::",
+
 # My solaris setups
 "solaris-x86-gcc","gcc:-O3 -fomit-frame-pointer -m486 -Wall -DL_ENDIAN:\
 	-lsocket -lnsl:BN_LLONG MD2_CHAR RC4_INDEX $x86_gcc_des:asm/x86-sol.o:asm/dx86-sol.o",
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/Makefile.ssl SSLeay-0.6.6/Makefile.ssl
--- SSLeay-0.6.6-orig/Makefile.ssl	Mon Jan 13 12:30:13 1997
+++ SSLeay-0.6.6/Makefile.ssl	Fri Jun  6 06:31:20 1997
@@@@ -50,8 +50,8 @@@@
 #	CRYPTO_malloc/CRYPTO_free/CRYPTO_realloc which can be setup to
 #	call application defined callbacks via CRYPTO_set_mem_functions()
 
-CC= cc
-CFLAG= -O -DNOPROTO
+CC= m68k-palmos-coff-gcc
+CFLAG= -O5 -g -fno-builtin
 PEX_LIBS= -L. -L.. -L../.. -L../../..
 EX_LIBS= 
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/Makefile.ssl SSLeay-0.6.6/crypto/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/Makefile.ssl	Mon Jan 13 12:30:22 1997
+++ SSLeay-0.6.6/crypto/Makefile.ssl	Fri Jun  6 06:31:20 1997
@@@@ -26,11 +26,11 @@@@
 LIBS=
 
 SDIRS=	md sha \
-	des rc4 rc2 idea bf \
-	bn rsa dsa dh \
-	buffer stack lhash rand error objects \
-	evp pem x509 \
-	asn1 conf txt_db pkcs7
+	des rc4 rc2 idea bf rand \
+	bn rsa dh
+#	dsa buffer stack lhash rand error objects \
+#	evp pem x509 \
+#	asn1 conf txt_db pkcs7
 
 #	meth
 
@@@@ -50,7 +50,7 @@@@
 top:
 	@@(cd ..; $(MAKE) DIRS=$(DIR) all)
 
-all: date.h llib subdirs
+all: subdirs
 
 date.h: ../Makefile.ssl ../VERSION
 	echo "#define DATE	\"`date`\"" >date.h
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bf/Makefile.ssl SSLeay-0.6.6/crypto/bf/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/bf/Makefile.ssl	Mon Jan 13 12:30:26 1997
+++ SSLeay-0.6.6/crypto/bf/Makefile.ssl	Fri Jun  6 06:31:20 1997
@@@@ -18,7 +18,7 @@@@
 TEST=bftest.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/libbf.a
 LIBSRC=bf_ecb.c bf_skey.c bf_cbc.c bf_cfb64.c bf_ofb64.c 
 LIBOBJ=bf_ecb.o bf_skey.o bf_cbc.o bf_cfb64.o bf_ofb64.o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bf/bf_pi.h SSLeay-0.6.6/crypto/bf/bf_pi.h
--- SSLeay-0.6.6-orig/crypto/bf/bf_pi.h	Mon Jan 13 03:08:31 1997
+++ SSLeay-0.6.6/crypto/bf/bf_pi.h	Fri Jun  6 06:31:20 1997
@@@@ -56,7 +56,7 @@@@
  * [including the GNU Public Licence.]
  */
 
-static BF_KEY bf_init= {
+static const BF_KEY bf_init= {
 	{
 	0x243f6a88L, 0x85a308d3L, 0x13198a2eL, 0x03707344L,
 	0xa4093822L, 0x299f31d0L, 0x082efa98L, 0xec4e6c89L,
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bf/bf_skey.c SSLeay-0.6.6/crypto/bf/bf_skey.c
--- SSLeay-0.6.6-orig/crypto/bf/bf_skey.c	Mon Jan 13 03:08:31 1997
+++ SSLeay-0.6.6/crypto/bf/bf_skey.c	Fri Jun  6 06:31:20 1997
@@@@ -58,6 +58,7 @@@@
 
 #include <stdio.h>
 #include <string.h>
+#include "cryptlib.h"
 #include "blowfish.h"
 #include "bf_locl.h"
 #include "bf_pi.h"
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/Makefile.ssl SSLeay-0.6.6/crypto/bn/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/bn/Makefile.ssl	Mon Jan 13 12:30:26 1997
+++ SSLeay-0.6.6/crypto/bn/Makefile.ssl	Fri Jun  6 06:31:20 1997
@@@@ -21,7 +21,7 @@@@
 TEST=bntest.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/libbn.a
 LIBSRC=	bn_add.c bn_div.c bn_exp.c bn_lib.c bn_mod.c bn_mul.c \
 	bn_print.c bn_rand.c bn_shift.c bn_sub.c bn_word.c \
 	bn_gcd.c bn_prime.c $(ERRC).c bn_sqr.c bn_mulw.c bn_recp.c bn_mont.c
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn.h SSLeay-0.6.6/crypto/bn/bn.h
--- SSLeay-0.6.6-orig/crypto/bn/bn.h	Mon Jan 13 12:30:13 1997
+++ SSLeay-0.6.6/crypto/bn/bn.h	Fri Jun  6 06:31:20 1997
@@@@ -85,8 +85,8 @@@@
  * EIGHT_BIT but I don't care since I've only used this mode
  * for debuging the bignum libraries */
 #undef SIXTY_FOUR_BIT
-#define THIRTY_TWO_BIT
-#undef SIXTEEN_BIT
+#undef THIRTY_TWO_BIT
+#define SIXTEEN_BIT
 #undef EIGHT_BIT
 
 /* assuming long is 64bit - this is the DEC Alpha
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn.org SSLeay-0.6.6/crypto/bn/bn.org
--- SSLeay-0.6.6-orig/crypto/bn/bn.org	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn.org	Fri Jun  6 06:31:20 1997
@@@@ -226,6 +226,13 @@@@
 #define bn_expand(n,b) ((((b)/BN_BITS2) <= (n)->max)?(n):bn_expand2((n),(b)))
 
 extern BIGNUM *BN_value_one;
+#ifdef __palmos__
+#ifndef NOPROTO
+BIGNUM *BN_value_one_get(void);
+#else
+BIGNUM *BN_value_one_get();
+#endif
+#endif
 
 #ifndef NOPROTO
 char *	BN_options(void);
@@@@ -250,6 +257,8 @@@@
 BN_ULONG BN_mod_word(BIGNUM *a, unsigned long w);
 int	BN_add_word(BIGNUM *a, unsigned long w);
 int	BN_set_word(BIGNUM *a, unsigned long w);
+unsigned long BN_get_word(BIGNUM *a);
+BN_ULONG BN_div_word(BIGNUM *a, unsigned long w);
 int	BN_cmp(BIGNUM *a, BIGNUM *b);
 void	BN_free(BIGNUM *a);
 int	BN_is_bit_set(BIGNUM *a, int n);
@@@@ -265,6 +274,7 @@@@
 	BIGNUM *i, int nb, BN_CTX *ctx);
 int	BN_mod_mul(BIGNUM *ret, BIGNUM *a, BIGNUM *b, BIGNUM *m,
 	BN_CTX *ctx);
+#ifndef __palmos__
 #ifndef WIN16
 int	BN_print_fp(FILE *fp, BIGNUM *a);
 #endif
@@@@ -273,6 +283,7 @@@@
 #else
 int	BN_print(char *fp, BIGNUM *a);
 #endif
+#endif
 int	BN_reciprocal(BIGNUM *r, BIGNUM *m, BN_CTX *ctx);
 int	BN_rshift(BIGNUM *r, BIGNUM *a, int n);
 int	BN_rshift1(BIGNUM *r, BIGNUM *a);
@@@@ -283,13 +294,16 @@@@
 int	BN_set_bit(BIGNUM *a, int n);
 int	BN_clear_bit(BIGNUM *a, int n);
 char *	BN_bn2ascii(BIGNUM *a);
+int	BN_ascii2bn(BIGNUM **bn, char *a);
 int	BN_gcd(BIGNUM *r,BIGNUM *in_a,BIGNUM *in_b,BN_CTX *ctx);
 BIGNUM *BN_mod_inverse(BIGNUM *a, BIGNUM *n,BN_CTX *ctx);
 BIGNUM *BN_generate_prime(int bits,int strong,BIGNUM *add,
 		BIGNUM *rem,void (*callback)(int,int));
 int	BN_is_prime(BIGNUM *p,int nchecks,void (*callback)(int,int),
 		BN_CTX *ctx);
+#ifndef __palmos__
 void	ERR_load_BN_strings(void );
+#endif
 
 BN_ULONG bn_mul_add_word(BN_ULONG *rp, BN_ULONG *ap, int num, BN_ULONG w);
 BN_ULONG bn_mul_word(BN_ULONG *rp, BN_ULONG *ap, int num, BN_ULONG w);
@@@@ -327,6 +341,8 @@@@
 BN_ULONG BN_mod_word();
 int	BN_add_word();
 int	BN_set_word();
+unsigned long BN_get_word();
+BN_ULONG BN_div_word();
 int	BN_cmp();
 void	BN_free();
 int	BN_is_bit_set();
@@@@ -339,10 +355,12 @@@@
 int	BN_mask_bits();
 int	BN_mod_mul_reciprocal();
 int	BN_mod_mul();
+#ifndef __palmos__
 #ifndef WIN16
 int	BN_print_fp();
 #endif
 int	BN_print();
+#endif
 int	BN_reciprocal();
 int	BN_rshift();
 int	BN_rshift1();
@@@@ -353,11 +371,14 @@@@
 int	BN_set_bit();
 int	BN_clear_bit();
 char *	BN_bn2ascii();
+int	BN_ascii2bn();
 int	BN_gcd();
 BIGNUM *BN_mod_inverse();
 BIGNUM *BN_generate_prime();
 int	BN_is_prime();
+#ifndef __palmos__
 void	ERR_load_BN_strings();
+#endif
 
 BN_ULONG bn_mul_add_word();
 BN_ULONG bn_mul_word();
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_div.c SSLeay-0.6.6/crypto/bn/bn_div.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_div.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_div.c	Fri Jun  6 06:31:20 1997
@@@@ -75,7 +75,11 @@@@
 
 	if (BN_is_zero(d))
 		{
+#ifndef __palmos__
 		BNerr(BN_F_BN_DIV,BN_R_DIV_BY_ZERO);
+#else
+		ErrFatalDisplayIf(1,"Division by zero");
+#endif
 		return(0);
 		}
 
@@@@ -135,7 +139,11 @@@@
 
 	if (BN_is_zero(num))
 		{
+#ifndef __palmos__
 		BNerr(BN_F_BN_DIV,BN_R_DIV_BY_ZERO);
+#else
+		ErrFatalDisplayIf(1,"Division by zero");
+#endif
 		return(0);
 		}
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_err.c SSLeay-0.6.6/crypto/bn/bn_err.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_err.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_err.c	Fri Jun  6 06:31:20 1997
@@@@ -45,6 +45,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #include <stdio.h>
 #include "err.h"
 #include "bn.h"
@@@@ -82,3 +83,4 @@@@
 		ERR_load_strings(ERR_LIB_BN,BN_str_reasons);
 		}
 	}
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_gcd.c SSLeay-0.6.6/crypto/bn/bn_gcd.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_gcd.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_gcd.c	Fri Jun  6 06:31:20 1997
@@@@ -191,7 +191,11 @@@@
 		{ if (!BN_mod(R,Y,n,ctx)) goto err; }
 	else
 		{
+#ifndef __palmos__
 		BNerr(BN_F_BN_MOD_INVERSE,BN_R_NO_INVERSE);
+#else
+		ErrFatalDisplayIf(1,"No inverse");
+#endif
 		goto err;
 		}
 	ret=R;
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_lib.c SSLeay-0.6.6/crypto/bn/bn_lib.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_lib.c	Mon Jan 13 10:03:16 1997
+++ SSLeay-0.6.6/crypto/bn/bn_lib.c	Fri Jun  6 06:31:20 1997
@@@@ -59,12 +59,53 @@@@
 #include <stdio.h>
 #include "cryptlib.h"
 #include "bn.h"
+#ifdef __palmos__
+#define sprintf StrPrintF
+#endif
 
 char *BN_version="Big Number part of SSLeay 0.6.6 14-Jan-1997";
 
 static BN_ULONG data_one=1L;
 static BIGNUM const_one={&data_one,1,1,0};
 BIGNUM *BN_value_one= &const_one;
+#ifdef __palmos__
+/* We can't export global data, so we use these access functions */
+BIGNUM *BN_value_one_get(void) { return BN_value_one; }
+#endif
+
+#ifdef __palmos__
+/* PalmOS doesn't provide a good equivalent to realloc, so we roll our own. */
+static void *PalmOS_realloc(void *ptr, unsigned long size)
+{
+    Err err;
+    unsigned long oldsize, copysize;
+    void *newptr;
+
+    /* Remember the special cases */
+    if (!size) {
+	MemPtrFree(ptr);
+	return NULL;
+    }
+    if (!ptr) {
+	return MemPtrNew(size);
+    }
+
+    /* First try a simple Resize.  This will only work if the ptr doesn't
+       have to move. */
+    err = MemPtrResize(ptr, size);
+    if (!err) return ptr;
+
+    /* Darn.  Let's play a game. */
+    oldsize = MemPtrSize(ptr);
+    copysize = (oldsize < size) ? oldsize : size;
+    newptr = MemPtrNew(size);
+    if (!newptr) return newptr;  /* Note that ptr is still valid */
+
+    MemMove(newptr, ptr, copysize);
+    MemPtrFree(ptr);
+    return newptr;
+}
+#endif
 
 char *BN_options()
 	{
@@@@ -161,10 +202,14 @@@@
 	i=(a->top-1)*BN_BITS2;
 	if (l == 0)
 		{
+#ifndef __palmos__
 #ifndef WIN16
 		fprintf(stderr,"BAD TOP VALUE\n");
 #endif
 		abort();
+#else
+		ErrFatalDisplayIf(1,"BAD TOP VALUE");
+#endif
 		}
 	return(i+BN_num_bits_word(l));
 	}
@@@@ -207,7 +252,11 @@@@
 	memset(p,0,(ret->max+1)*sizeof(p[0]));
 	return(ret);
 err:
+#ifndef __palmos__
 	BNerr(BN_F_BN_NEW,ERR_R_MALLOC_FAILURE);
+#else
+	ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 	return(NULL);
 	}
 
@@@@ -234,7 +283,11 @@@@
 		BN_free(ret->bn[j]);
 	Free(ret);
 err2:
+#ifndef __palmos__
 	BNerr(BN_F_BN_CTX_NEW,ERR_R_MALLOC_FAILURE);
+#else
+	ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 	return(NULL);
 	}
 
@@@@ -261,7 +314,11 @@@@
 		p=b->d=(BN_ULONG *)Realloc(b->d,sizeof(BN_ULONG)*(n+1));
 		if (p == NULL)
 			{
+#ifndef __palmos__
 			BNerr(BN_F_BN_EXPAND2,ERR_R_MALLOC_FAILURE);
+#else
+			ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 			return(NULL);
 			}
 		memset(&(p[b->max]),0,((n+1)-b->max)*sizeof(BN_ULONG));
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_mulw.c SSLeay-0.6.6/crypto/bn/bn_mulw.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_mulw.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_mulw.c	Fri Jun  6 06:31:20 1997
@@@@ -243,10 +243,14 @@@@
 	i=BN_num_bits_word(d);
 	if ((i != BN_BITS2) && (h > (BN_ULONG)1<<i))
 		{
+#ifdef __palmos__
+		ErrFatalDisplayIf(1,"Division would overflow");
+#else
 #ifndef WIN16
 		fprintf(stderr,"Division would overflow (%d)\n",i);
 #endif
 		abort();
+#endif
 		}
 	i=BN_BITS2-i;
 	if (h >= d) h-=d;
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_prime.c SSLeay-0.6.6/crypto/bn/bn_prime.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_prime.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_prime.c	Fri Jun  6 06:31:20 1997
@@@@ -57,7 +57,9 @@@@
  */
 
 #include <stdio.h>
+#ifndef __palmos__
 #include <time.h>
+#endif
 #include "cryptlib.h"
 #include "bn.h"
 #include "rand.h"
@@@@ -261,10 +263,20 @@@@
 int bits;
 	{
 	int i;
+#ifndef __palmos__
 	MS_STATIC BN_ULONG mods[NUMPRIMES];
+#else
+	BN_ULONG *mods;
+#endif
 	BN_ULONG delta;
 
 	if (!BN_rand(rnd,bits,1,1)) return(0);
+#ifdef __palmos__
+	mods = Malloc(NUMPRIMES*sizeof(BN_ULONG));
+	if (!mods) {
+	    ErrFatalDisplayIf(1,"Malloc failure");
+	}
+#endif
 	/* we now have a random number 'rand' to test. */
 	for (i=1; i<NUMPRIMES; i++)
 		mods[i]=BN_mod_word(rnd,(BN_ULONG)primes[i]);
@@@@ -281,6 +293,9 @@@@
 			goto loop;
 			}
 		}
+#ifdef __palmos__
+	Free(mods);
+#endif
 	if (!BN_add_word(rnd,delta)) return(0);
 	return(1);
 	}
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_prime.h SSLeay-0.6.6/crypto/bn/bn_prime.h
--- SSLeay-0.6.6-orig/crypto/bn/bn_prime.h	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_prime.h	Fri Jun  6 06:31:20 1997
@@@@ -61,7 +61,7 @@@@
 #else
 #define NUMPRIMES 54
 #endif
-static unsigned int primes[NUMPRIMES]=
+static const unsigned int primes[NUMPRIMES]=
 	{
 	   2,   3,   5,   7,  11,  13,  17,  19,
 	  23,  29,  31,  37,  41,  43,  47,  53,
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_print.c SSLeay-0.6.6/crypto/bn/bn_print.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_print.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_print.c	Fri Jun  6 06:31:20 1997
@@@@ -57,7 +57,11 @@@@
  */
 
 #include <stdio.h>
+#ifndef __palmos__
 #include <ctype.h>
+#else
+#define NO_BIO
+#endif
 #include "cryptlib.h"
 #include "buffer.h"
 #include "bn.h"
@@@@ -75,7 +79,11 @@@@
 	buf=(char *)Malloc(a->top*BN_BYTES*2+2);
 	if (buf == NULL)
 		{
+#ifndef __palmos__
 		BNerr(BN_F_BN_BN2ASCII,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		goto err;
 		}
 	p=buf;
@@@@ -113,8 +121,14 @@@@
 
 	if (*a == '-') { neg=1; a++; }
 
+#ifndef __palmos__
 	for (i=0; isxdigit(a[i]); i++)
 		;
+#else
+	for (i=0; (a[i]>='0' && a[i]<='9') || (a[i]>='a' && a[i]<='f')
+		    || (a[i]>='A' && a[i]<='F'); i++)
+		;
+#endif
 
 	num=i+neg;
 	if (bn == NULL) return(num);
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_rand.c SSLeay-0.6.6/crypto/bn/bn_rand.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_rand.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_rand.c	Fri Jun  6 06:31:20 1997
@@@@ -57,7 +57,9 @@@@
  */
 
 #include <stdio.h>
+#ifndef __palmos__
 #include <time.h>
+#endif
 #include "cryptlib.h"
 #include "bn.h"
 #include "rand.h"
@@@@ -79,12 +81,20 @@@@
 	buf=(unsigned char *)Malloc(bytes);
 	if (buf == NULL)
 		{
+#ifndef __palmos__
 		BNerr(BN_F_BN_RAND,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		goto err;
 		}
 
 	/* make a random number and set the top and bottom bits */
+#ifdef __palmos__
+	tim = TimGetSeconds();
+#else
 	time(&tim);
+#endif
 	RAND_seed((unsigned char *)&tim,sizeof(tim));
 
 	RAND_bytes(buf,(int)bytes);
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/bn/bn_recp.c SSLeay-0.6.6/crypto/bn/bn_recp.c
--- SSLeay-0.6.6-orig/crypto/bn/bn_recp.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/bn/bn_recp.c	Fri Jun  6 06:31:20 1997
@@@@ -91,7 +91,11 @@@@
 		{
 		if (j++ > 2)
 			{
+#ifndef __palmos__
 			BNerr(BN_F_BN_MOD_MUL_RECIPROCAL,BN_R_BAD_RECIPROCAL);
+#else
+			ErrFatalDisplayIf(1,"Bad reciprocal");
+#endif
 			goto err;
 			}
 		if (!BN_sub(r,r,m)) goto err;
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/cryptlib.c SSLeay-0.6.6/crypto/cryptlib.c
--- SSLeay-0.6.6-orig/crypto/cryptlib.c	Mon Jan 13 10:03:17 1997
+++ SSLeay-0.6.6/crypto/cryptlib.c	Fri Jun  6 06:31:20 1997
@@@@ -80,6 +80,10 @@@@
 #include "crypto.h"
 #include "date.h"
 
+#ifdef __palmos__
+#define sprintf StrPrintF
+#endif
+
 /* real #defines in crypto.h, keep these upto date */
 static char* lock_names[CRYPTO_NUM_LOCKS] =
 	{
@@@@ -103,6 +107,7 @@@@
 	"debug_malloc",
 	};
 
+#ifndef __palmos__
 char *SSLeay_version(t)
 int t;
 	{
@@@@ -152,6 +157,7 @@@@
 		}
 	return("not available");
 	}
+#endif
 
 unsigned long SSLeay()
 	{
@@@@ -213,7 +219,7 @@@@
 		ret=(unsigned long)GetCurrentTask();
 #elif defined(WIN32)
 		ret=(unsigned long)GetCurrentThreadId();
-#elif defined(MSDOS)
+#elif defined(MSDOS) || defined(__palmos__)
 		ret=1L;
 #else
 		ret=(unsigned long)getpid();
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/crypto.h SSLeay-0.6.6/crypto/crypto.h
--- SSLeay-0.6.6-orig/crypto/crypto.h	Mon Jan 13 03:05:50 1997
+++ SSLeay-0.6.6/crypto/crypto.h	Fri Jun  6 06:31:20 1997
@@@@ -103,6 +103,14 @@@@
 
 /* The following stuff is not being used, it was not finished for
  * SSLeay 0.6.0 */
+#ifdef __palmos__
+#define CRYPTO_w_lock(type)
+#define CRYPTO_w_unlock(type)
+#define CRYPTO_r_lock(type)
+#define CRYPTO_r_unlock(type)
+#define CRYPTO_add(addr,amount,type)
+#endif
+
 #ifndef CRYPTO_w_lock
 #define CRYPTO_w_lock(type)	\
 	CRYPTO_lock(CRYPTO_LOCK|CRYPTO_WRITE,type,__FILE__,__LINE__)
@@@@ -161,10 +169,17 @@@@
 #define FreeFunc	CRYPTO_free
 #define Free(addr)	CRYPTO_free((char *)(addr))
 #else
+#ifdef __palmos__
+#define Malloc		MemPtrNew
+#define Realloc(a,n)	PalmOS_realloc(a,n)
+#define FreeFunc	MemPtrFree
+#define Free(addr)	MemPtrFree(addr)
+#else
 #define Malloc		malloc
 #define Realloc		realloc
 #define FreeFunc	free
 #define Free(addr)	free((char *)(addr))
+#endif /* __palmos__ */
 #endif /* WIN32 || MFUNC */
 #endif /* MDEBUG */
 
@@@@ -200,8 +215,10 @@@@
 char *CRYPTO_dbg_realloc(char *addr,int num,char *file,int line);
 void CRYPTO_dbg_free(char *);
 char *CRYPTO_dbg_remalloc(char *addr,int num,char *file,int line);
+#ifndef __palmos__
 #ifndef WIN16
 void CRYPTO_mem_leaks_fp(FILE *);
+#endif
 #endif
 #ifdef HEADER_BUFFER_H
 void CRYPTO_mem_leaks(BIO *);
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/date.h SSLeay-0.6.6/crypto/date.h
--- SSLeay-0.6.6-orig/crypto/date.h	Mon Jan 13 11:09:49 1997
+++ SSLeay-0.6.6/crypto/date.h	Fri Jun  6 06:31:20 1997
@@@@ -1 +1 @@@@
-#define DATE	"Tue Jan 14 02:09:49 EST 1997"
+#define DATE	"Fri May 30 15:16:07 EDT 1997"
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/Makefile.ssl SSLeay-0.6.6/crypto/des/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/des/Makefile.ssl	Mon Jan 13 12:30:24 1997
+++ SSLeay-0.6.6/crypto/des/Makefile.ssl	Fri Jun  6 06:31:20 1997
@@@@ -20,7 +20,7 @@@@
 TEST=destest.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/libdes.a
 LIBSRC=	cbc3_enc.c cbc_cksm.c cbc_enc.c  cfb64enc.c cfb_enc.c  \
 	ecb3_enc.c ecb_enc.c  ede_enc.c  enc_read.c enc_writ.c \
 	fcrypt.c   ncbc_enc.c ofb64enc.c ofb_enc.c  pcbc_enc.c \
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/des.org SSLeay-0.6.6/crypto/des/des.org
--- SSLeay-0.6.6-orig/crypto/des/des.org	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/des/des.org	Fri Jun  6 06:31:20 1997
@@@@ -63,7 +63,9 @@@@
 extern "C" {
 #endif
 
+#ifndef __palmos__
 #include <stdio.h>
+#endif
 
 /* If this is set to 'unsigned int' on a DEC Alpha, this gives about a
  * %20 speed up (longs are 8 bytes, int's are 4). */
@@@@ -131,7 +133,18 @@@@
 #define des_check_key_parity check_parity
 
 extern int des_check_key;	/* defaults to false */
+#ifdef __palmos__
+#ifndef NOPROTO
+int des_check_key_get(void);
+void des_check_key_set(int);
+#else
+int des_check_key_get();
+void des_check_key_set();
+#endif
+#endif
+#ifndef __palmos__
 extern int des_rw_mode;		/* defaults to DES_PCBC_MODE */
+#endif
 
 /* The next line is used to disable full ANSI prototypes, if your
  * compiler has problems with the prototypes, make sure this line always
@@@@ -176,10 +189,12 @@@@
 	long length, des_key_schedule ks1, des_key_schedule ks2,
 	des_key_schedule ks3, des_cblock *ivec, int *num);
 
+#ifndef __palmos__
 int des_enc_read(int fd,char *buf,int len,des_key_schedule sched,
 	des_cblock *iv);
 int des_enc_write(int fd,char *buf,int len,des_key_schedule sched,
 	des_cblock *iv);
+#endif
 char *des_fcrypt(const char *buf,const char *salt, char *ret);
 #ifdef PERL5
 char *des_crypt(const char *buf,const char *salt);
@@@@ -200,10 +215,12 @@@@
 	long length,int out_count,des_cblock *seed);
 void des_random_seed(des_cblock key);
 void des_random_key(des_cblock ret);
+#ifndef __palmos__
 int des_read_password(des_cblock *key,char *prompt,int verify);
 int des_read_2passwords(des_cblock *key1,des_cblock *key2,
 	char *prompt,int verify);
 int des_read_pw_string(char *buf,int length,char *prompt,int verify);
+#endif
 void des_set_odd_parity(des_cblock *key);
 int des_is_weak_key(des_cblock *key);
 int des_set_key(des_cblock *key,des_key_schedule schedule);
@@@@ -216,6 +233,7 @@@@
 	des_key_schedule schedule, des_cblock *ivec, int *num);
 
 /* Extra functions from Mark Murray <mark@@grondar.za> */
+#ifndef __palmos__
 void des_cblock_print_file(des_cblock *cb, FILE *fp);
 /* The following functions are not in the normal unix build or the
  * SSLeay build.  When using the SSLeay build, use RAND_seed()
@@@@ -225,6 +243,7 @@@@
 void des_set_random_generator_seed(des_cblock *key);
 void des_set_sequence_number(des_cblock new_sequence_number);
 void des_generate_random_block(des_cblock *block);
+#endif
 
 #else
 
@@@@ -244,8 +263,10 @@@@
 void des_encrypt3();
 void des_decrypt3();
 void des_ede3_cbc_encrypt();
+#ifndef __palmos__
 int des_enc_read();
 int des_enc_write();
+#endif
 char *des_fcrypt();
 #ifdef PERL5
 char *des_crypt();
@@@@ -257,9 +278,11 @@@@
 DES_LONG des_quad_cksum();
 void des_random_seed();
 void des_random_key();
+#ifndef __palmos__
 int des_read_password();
 int des_read_2passwords();
 int des_read_pw_string();
+#endif
 void des_set_odd_parity();
 int des_is_weak_key();
 int des_set_key();
@@@@ -270,6 +293,7 @@@@
 void des_ofb64_encrypt();
 
 /* Extra functions from Mark Murray <mark@@grondar.za> */
+#ifndef __palmos__
 void des_cblock_print_file();
 /* The following functions are not in the normal unix build or the
  * SSLeay build.  When using the SSLeay build, use RAND_seed()
@@@@ -280,6 +304,7 @@@@
 void des_set_random_generator_seed();
 void des_set_sequence_number();
 void des_generate_random_block();
+#endif
 #endif
 
 #endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/des_enc.c SSLeay-0.6.6/crypto/des/des_enc.c
--- SSLeay-0.6.6-orig/crypto/des/des_enc.c	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/des/des_enc.c	Fri Jun  6 06:31:20 1997
@@@@ -57,6 +57,7 @@@@
  */
 
 #include "des_locl.h"
+#include "spr.h"
 
 void des_encrypt(data, ks, encrypt)
 DES_LONG *data;
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/des_locl.h SSLeay-0.6.6/crypto/des/des_locl.h
--- SSLeay-0.6.6-orig/crypto/des/des_locl.h	Mon Jan 13 12:30:13 1997
+++ SSLeay-0.6.6/crypto/des/des_locl.h	Fri Jun  6 06:31:21 1997
@@@@ -67,6 +67,8 @@@@
 #ifndef HEADER_DES_LOCL_H
 #define HEADER_DES_LOCL_H
 
+#include "cryptlib.h"
+
 #if defined(WIN32) || defined(WIN16)
 #ifndef MSDOS
 #define MSDOS
@@@@ -75,8 +77,10 @@@@
 
 #include <stdio.h>
 #include <stdlib.h>
+#ifndef __palmos__
 #ifndef MSDOS
 #include <unistd.h>
+#endif
 #endif
 #include "des.h"
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/des_locl.org SSLeay-0.6.6/crypto/des/des_locl.org
--- SSLeay-0.6.6-orig/crypto/des/des_locl.org	Mon Jan 13 03:08:32 1997
+++ SSLeay-0.6.6/crypto/des/des_locl.org	Fri Jun  6 06:31:21 1997
@@@@ -67,6 +67,8 @@@@
 #ifndef HEADER_DES_LOCL_H
 #define HEADER_DES_LOCL_H
 
+#include "cryptlib.h"
+
 #if defined(WIN32) || defined(WIN16)
 #ifndef MSDOS
 #define MSDOS
@@@@ -75,9 +77,11 @@@@
 
 #include <stdio.h>
 #include <stdlib.h>
+#ifndef __palmos__
 #ifndef MSDOS
 #include <unistd.h>
 #endif
+#endif
 #include "des.h"
 
 #ifndef DES_DEFAULT_OPTIONS
@@@@ -145,6 +149,8 @@@@
   #define DES_PTR
   #define DES_RISC1
   #define DES_UNROLL
+#elif defined( __palmos__ )     /* Pilot; PTR is needed; unsure about UNROLL */
+  #define DES_PTR               /*  or RISC[12] */
 #endif /* Systems-specific speed defines */
 #endif
 
@@@@ -504,6 +510,10 @@@@
 	PERM_OP(l,r,tt, 4,0x0f0f0f0fL); \
 	}
 
+#ifndef __palmos__
 extern const DES_LONG des_SPtrans[8][64];
+#else
+extern const DES_LONG *des_SPtrans;
+#endif
 
 #endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/ecb_enc.c SSLeay-0.6.6/crypto/des/ecb_enc.c
--- SSLeay-0.6.6-orig/crypto/des/ecb_enc.c	Mon Jan 13 12:12:02 1997
+++ SSLeay-0.6.6/crypto/des/ecb_enc.c	Fri Jun  6 06:31:21 1997
@@@@ -57,7 +57,9 @@@@
  */
 
 #include "des_locl.h"
-#include "spr.h"
+#ifdef __palmos__
+#define sprintf StrPrintF
+#endif
 
 char *libdes_version="libdes v 4.01 - 14-Jan-1997 - eay";
 char *DES_version="DES part of SSLeay 0.6.6 14-Jan-1997";
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/enc_read.c SSLeay-0.6.6/crypto/des/enc_read.c
--- SSLeay-0.6.6-orig/crypto/des/enc_read.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/enc_read.c	Fri Jun  6 06:31:21 1997
@@@@ -56,6 +56,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #include <stdio.h>
 #include <errno.h>
 #include "des_locl.h"
@@@@ -212,3 +213,4 @@@@
 	return((int)num);
 	}
 
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/enc_writ.c SSLeay-0.6.6/crypto/des/enc_writ.c
--- SSLeay-0.6.6-orig/crypto/des/enc_writ.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/enc_writ.c	Fri Jun  6 06:31:21 1997
@@@@ -56,6 +56,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #include <errno.h>
 #include <time.h>
 #include "des_locl.h"
@@@@ -158,3 +159,4 @@@@
 
 	return(len);
 	}
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/rand_key.c SSLeay-0.6.6/crypto/des/rand_key.c
--- SSLeay-0.6.6-orig/crypto/des/rand_key.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/rand_key.c	Fri Jun  6 06:31:21 1997
@@@@ -57,7 +57,9 @@@@
  */
 
 #include "des_locl.h"
+#ifndef __palmos__
 #include <time.h>
+#endif
 
 static int seed=0;
 static des_cblock init;
@@@@ -81,7 +83,7 @@@@
 	DES_LONG t;
 	int i;
 
-#ifdef MSDOS
+#if defined(MSDOS) || defined(__palmos__)
 	pid=1;
 #else
 	if (!pid) pid=getpid();
@@@@ -96,7 +98,11 @@@@
 			}
 		seed=0;
 		}
+#ifdef __palmos__
+	t=(DES_LONG)TimGetSeconds();
+#else
 	t=(DES_LONG)time(NULL);
+#endif
 	l2c(t,p);
 	t=(DES_LONG)((pid)|((c++)<<16));
 	l2c(t,p);
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/read_pwd.c SSLeay-0.6.6/crypto/des/read_pwd.c
--- SSLeay-0.6.6-orig/crypto/des/read_pwd.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/read_pwd.c	Fri Jun  6 06:31:21 1997
@@@@ -56,6 +56,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #ifdef WIN16TTY
 #undef WIN16
 #undef _WINDOWS
@@@@ -445,4 +446,5 @@@@
 		}
 	return(strlen(buf));
 	}
+#endif
 #endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/set_key.c SSLeay-0.6.6/crypto/des/set_key.c
--- SSLeay-0.6.6-orig/crypto/des/set_key.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/set_key.c	Fri Jun  6 06:31:21 1997
@@@@ -63,6 +63,7 @@@@
  * 1.1 added norm_expand_bits
  * 1.0 First working version
  */
+#include "cryptlib.h"
 #include "des_locl.h"
 #include "podd.h"
 #include "sk.h"
@@@@ -74,6 +75,11 @@@@
 #endif
 
 int des_check_key=0;
+#ifdef __palmos__
+/* We can't export global data, so we use these access functions */
+int des_check_key_get(void) { return des_check_key; }
+void des_check_key_set(int v) { des_check_key = v; }
+#endif
 
 void des_set_odd_parity(key)
 des_cblock (*key);
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/spr.h SSLeay-0.6.6/crypto/des/spr.h
--- SSLeay-0.6.6-orig/crypto/des/spr.h	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/spr.h	Fri Jun  6 06:31:21 1997
@@@@ -56,7 +56,11 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifdef __palmos__
+static const DES_LONG des_SPtrans_table[8][64]={
+#else
 const DES_LONG des_SPtrans[8][64]={
+#endif
 {
 /* nibble 0 */
 0x02080800L, 0x00080000L, 0x02000002L, 0x02080802L,
@@@@ -202,3 +206,12 @@@@
 0x00000080L, 0x20820000L, 0x00820080L, 0x00000000L,
 0x20000000L, 0x20800080L, 0x00020000L, 0x00820080L,
 }};
+#ifdef __palmos__
+/* We need to do this because we want the table to be in the text segment,
+   but the pointer to it needs to be in the data segment.  This should work
+   fine, as long as we make sure DES_PTR is defined.  - Ian */
+#ifndef DES_PTR
+#error "PalmOS requires DES_PTR"
+#endif
+const DES_LONG *des_SPtrans = (DES_LONG *)des_SPtrans_table;
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/supp.c SSLeay-0.6.6/crypto/des/supp.c
--- SSLeay-0.6.6-orig/crypto/des/supp.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/supp.c	Fri Jun  6 06:31:22 1997
@@@@ -90,6 +90,7 @@@@
  * $Id$
  */
 
+#ifndef __palmos__
 #include <stdio.h>
 #include "des_locl.h"
 
@@@@ -107,3 +108,4 @@@@
 	}
 	fprintf(fp, " }");
 }
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/des/xcbc_enc.c SSLeay-0.6.6/crypto/des/xcbc_enc.c
--- SSLeay-0.6.6-orig/crypto/des/xcbc_enc.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/des/xcbc_enc.c	Fri Jun  6 06:31:22 1997
@@@@ -60,7 +60,7 @@@@
 
 /* RSA's DESX */
 
-static unsigned char desx_white_in2out[256]={
+static const unsigned char desx_white_in2out[256]={
 0xBD,0x56,0xEA,0xF2,0xA2,0xF1,0xAC,0x2A,0xB0,0x93,0xD1,0x9C,0x1B,0x33,0xFD,0xD0,
 0x30,0x04,0xB6,0xDC,0x7D,0xDF,0x32,0x4B,0xF7,0xCB,0x45,0x9B,0x31,0xBB,0x21,0x5A,
 0x41,0x9F,0xE1,0xD9,0x4A,0x4D,0x9E,0xDA,0xA0,0x68,0x2C,0xC3,0x27,0x5F,0x80,0x36,
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/dh/Makefile.ssl SSLeay-0.6.6/crypto/dh/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/dh/Makefile.ssl	Mon Jan 13 12:30:28 1997
+++ SSLeay-0.6.6/crypto/dh/Makefile.ssl	Fri Jun  6 06:31:22 1997
@@@@ -20,7 +20,7 @@@@
 TEST= dhtest.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/libdh.a
 LIBSRC= dh_gen.c dh_key.c dh_lib.c dh_check.c $(ERRC).c
 LIBOBJ= dh_gen.o dh_key.o dh_lib.o dh_check.o $(ERRC).o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/dh/dh.h SSLeay-0.6.6/crypto/dh/dh.h
--- SSLeay-0.6.6-orig/crypto/dh/dh.h	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/dh/dh.h	Fri Jun  6 06:31:22 1997
@@@@ -90,6 +90,7 @@@@
 #define DH_UNABLE_TO_CHECK_GENERATOR	0x04
 #define DH_NOT_SUITABLE_GENERATOR	0x08
 
+#ifndef __palmos__
 #define DHparams_dup(x) (DH *)ASN1_dup((int (*)())i2d_DHparams, \
 		(char *(*)()d2i_DHparams,(char *)(x)))
 #define d2i_DHparams_fp(fp,x) (DH *)ASN1_d2i_fp((char *(*)())DH_new, \
@@@@ -100,6 +101,7 @@@@
 		(char *(*)())d2i_DHparams,(bp),(unsigned char **)(x))
 #define i2d_DHparams_bio(bp,x) ASN1_i2d_bio(i2d_DHparams,(bp), \
 		(unsigned char *)(x))
+#endif
 
 #ifndef NOPROTO
 DH *	DH_new(void);
@@@@ -110,6 +112,7 @@@@
 int	DH_check(DH *dh,int *codes);
 int	DH_generate_key(DH *dh);
 int	DH_compute_key(unsigned char *key,BIGNUM *pub_key,DH *dh);
+#ifndef __palmos__
 DH *	d2i_DHparams(DH **a,unsigned char **pp, long length);
 int	i2d_DHparams(DH *a,unsigned char **pp);
 #ifndef WIN16
@@@@ -121,6 +124,7 @@@@
 int	DHparams_print(char *bp, DH *x);
 #endif
 void	ERR_load_DH_strings(void );
+#endif
 
 #else
 
@@@@ -131,6 +135,7 @@@@
 int	DH_check();
 int	DH_generate_key();
 int	DH_compute_key();
+#ifndef __palmos__
 DH *	d2i_DHparams();
 int	i2d_DHparams();
 #ifndef WIN16
@@@@ -138,6 +143,7 @@@@
 #endif
 int	DHparams_print();
 void	ERR_load_DH_strings();
+#endif
 
 #endif
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/dh/dh_err.c SSLeay-0.6.6/crypto/dh/dh_err.c
--- SSLeay-0.6.6-orig/crypto/dh/dh_err.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/dh/dh_err.c	Fri Jun  6 06:31:22 1997
@@@@ -45,6 +45,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #include <stdio.h>
 #include "err.h"
 #include "dh.h"
@@@@ -78,3 +79,4 @@@@
 		ERR_load_strings(ERR_LIB_DH,DH_str_reasons);
 		}
 	}
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/dh/dh_gen.c SSLeay-0.6.6/crypto/dh/dh_gen.c
--- SSLeay-0.6.6-orig/crypto/dh/dh_gen.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/dh/dh_gen.c	Fri Jun  6 06:31:22 1997
@@@@ -135,7 +135,11 @@@@
 err:
 	if (ok == -1)
 		{
+#ifndef __palmos__
 		DHerr(DH_F_DH_GENERATE_PARAMETERS,ERR_R_BN_LIB);
+#else
+		ErrFatalDisplayIf(1,"Error in BN lib");
+#endif
 		ok=0;
 		}
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/dh/dh_key.c SSLeay-0.6.6/crypto/dh/dh_key.c
--- SSLeay-0.6.6-orig/crypto/dh/dh_key.c	Mon Jan 13 03:08:33 1997
+++ SSLeay-0.6.6/crypto/dh/dh_key.c	Fri Jun  6 06:31:22 1997
@@@@ -103,7 +103,11 @@@@
 	ok=1;
 err:
 	if (ok != 1)
+#ifndef __palmos__
 		DHerr(DH_F_DH_GENERATE_KEY,ERR_R_BN_LIB);
+#else
+		ErrFatalDisplayIf(1,"Error in BN lib");
+#endif
 
 	if ((pub_key != NULL)  && (dh->pub_key == NULL))  BN_free(pub_key);
 	if ((priv_key != NULL) && (dh->priv_key == NULL)) BN_free(priv_key);
@@@@ -126,12 +130,20 @@@@
 	
 	if (dh->priv_key == NULL)
 		{
+#ifndef __palmos__
 		DHerr(DH_F_DH_COMPUTE_KEY,DH_R_NO_PRIVATE_VALUE);
+#else
+		ErrFatalDisplayIf(1,"No private value");
+#endif
 		goto err;
 		}
 	if (!BN_mod_exp(tmp,pub_key,dh->priv_key,dh->p,ctx))
 		{
+#ifndef __palmos__
 		DHerr(DH_F_DH_COMPUTE_KEY,ERR_R_BN_LIB);
+#else
+		ErrFatalDisplayIf(1,"Error in BN lib");
+#endif
 		goto err;
 		}
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/dh/dh_lib.c SSLeay-0.6.6/crypto/dh/dh_lib.c
--- SSLeay-0.6.6-orig/crypto/dh/dh_lib.c	Mon Jan 13 10:03:16 1997
+++ SSLeay-0.6.6/crypto/dh/dh_lib.c	Fri Jun  6 06:31:22 1997
@@@@ -70,7 +70,11 @@@@
 	ret=(DH *)Malloc(sizeof(DH));
 	if (ret == NULL)
 		{
+#ifndef __palmos__
 		DHerr(DH_F_DH_NEW,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		return(NULL);
 		}
 	ret->pad=0;
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/idea/Makefile.ssl SSLeay-0.6.6/crypto/idea/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/idea/Makefile.ssl	Mon Jan 13 12:30:26 1997
+++ SSLeay-0.6.6/crypto/idea/Makefile.ssl	Fri Jun  6 06:31:22 1997
@@@@ -18,7 +18,7 @@@@
 TEST=ideatest.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/libidea.a
 LIBSRC=i_cbc.c i_cfb64.c i_ofb64.c i_ecb.c i_skey.c
 LIBOBJ=i_cbc.o i_cfb64.o i_ofb64.o i_ecb.o i_skey.o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/md/Makefile.ssl SSLeay-0.6.6/crypto/md/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/md/Makefile.ssl	Mon Jan 13 12:30:23 1997
+++ SSLeay-0.6.6/crypto/md/Makefile.ssl	Fri Jun  6 06:31:23 1997
@@@@ -18,7 +18,7 @@@@
 TEST=md2test.c md5test.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/libmd.a
 LIBSRC=md2_dgst.c md5_dgst.c md2_one.c md5_one.c
 LIBOBJ=md2_dgst.o md5_dgst.o md2_one.o md5_one.o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/md/md2_dgst.c SSLeay-0.6.6/crypto/md/md2_dgst.c
--- SSLeay-0.6.6-orig/crypto/md/md2_dgst.c	Mon Jan 13 10:03:16 1997
+++ SSLeay-0.6.6/crypto/md/md2_dgst.c	Fri Jun  6 06:31:23 1997
@@@@ -59,6 +59,7 @@@@
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
+#include "cryptlib.h"
 #include "md2.h"
 
 char *MD2_version="MD2 part of SSLeay 0.6.6 14-Jan-1997";
@@@@ -76,7 +77,7 @@@@
 
 /* The magic S table - I have converted it to hex since it is
  * basicaly just a random byte string. */
-static MD2_INT S[256]={
+static const MD2_INT S[256]={
 	0x29, 0x2E, 0x43, 0xC9, 0xA2, 0xD8, 0x7C, 0x01,
 	0x3D, 0x36, 0x54, 0xA1, 0xEC, 0xF0, 0x06, 0x13,
 	0x62, 0xA7, 0x05, 0xF3, 0xC0, 0xC7, 0x73, 0x8C,
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/mem.c SSLeay-0.6.6/crypto/mem.c
--- SSLeay-0.6.6-orig/crypto/mem.c	Mon Jan 13 03:05:50 1997
+++ SSLeay-0.6.6/crypto/mem.c	Fri Jun  6 06:31:23 1997
@@@@ -57,10 +57,15 @@@@
  */
 
 #include <stdio.h>
+#ifdef __palmos__
+void *malloc(unsigned long);
+void *realloc(void *, unsigned long);
+void free(void *);
+#endif
 #include <stdlib.h>
 #include "buffer.h"
-#include "lhash.h"
 #include "cryptlib.h"
+#include "lhash.h"
 
 static int mh_mode=CRYPTO_MEM_CHECK_OFF;
 static unsigned long order=0;
@@@@ -196,7 +201,11 @@@@
 			{
 			free(m);
 			free(ret);
+#ifndef __palmos__
 			abort();
+#else
+			ErrFatalDisplayIf(1, "Error in CRYPTO_dbg_malloc");
+#endif
 			ret=NULL;
 			}
 		CRYPTO_w_unlock(CRYPTO_LOCK_MALLOC);
@@@@ -247,7 +256,12 @@@@
 			if (mp != NULL)
 				mp->addr=ret;
 			else
+#ifndef __palmos__
 				abort();
+#else
+				ErrFatalDisplayIf(1,
+				    "Error in CRYPTO_dbg_realloc");
+#endif
 			}
 		CRYPTO_w_unlock(CRYPTO_LOCK_MALLOC);
 		}
@@@@ -288,8 +302,13 @@@@
 	{
 	char buf[128];
 
+#ifndef __palmos__
 	sprintf(buf,"%5ld file=%s, line=%d, number=%d, address=%08lX\n",
 		m->order,m->file,m->line,m->num,(long)m->addr);
+#else
+	StrPrintF(buf,"%5ld file=%s, line=%d, number=%d, address=%8lX\n",
+		m->order,m->file,m->line,m->num,(long)m->addr);
+#endif
 	BIO_puts(l->bio,buf);
 	l->chunks++;
 	l->bytes+=m->num;
@@@@ -310,8 +329,13 @@@@
 	CRYPTO_w_unlock(CRYPTO_LOCK_MALLOC);
 	if (ml.chunks != 0)
 		{
+#ifndef __palmos__
 		sprintf(buf,"%ld bytes leaked in %d chunks\n",
 			ml.bytes,ml.chunks);
+#else
+		StrPrintF(buf,"%ld bytes leaked in %d chunks\n",
+			ml.bytes,ml.chunks);
+#endif
 		BIO_puts(b,buf);
 		}
 	/*
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rand/Makefile.ssl SSLeay-0.6.6/crypto/rand/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/rand/Makefile.ssl	Mon Jan 13 12:30:29 1997
+++ SSLeay-0.6.6/crypto/rand/Makefile.ssl	Fri Jun  6 06:31:23 1997
@@@@ -18,7 +18,7 @@@@
 TEST= randtest.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/librand.a
 LIBSRC=md5_rand.c randfile.c
 LIBOBJ=md5_rand.o randfile.o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rand/md5_rand.c SSLeay-0.6.6/crypto/rand/md5_rand.c
--- SSLeay-0.6.6-orig/crypto/rand/md5_rand.c	Mon Jan 13 10:03:17 1997
+++ SSLeay-0.6.6/crypto/rand/md5_rand.c	Fri Jun  6 06:31:23 1997
@@@@ -59,7 +59,9 @@@@
 #include <stdio.h>
 #include "cryptlib.h"
 #include <sys/types.h>
+#ifndef __palmos__
 #include <time.h>
+#endif
 #ifdef NO_MD5
 #include <md5.h>
 #else
@@@@ -186,6 +188,7 @@@@
 		/* put in some default random data, we need more than
 		 * just this */
 		RAND_seed((unsigned char *)&m,sizeof(m));
+#ifndef __palmos__
 #ifndef MSDOS
 		l=getpid();
 		RAND_seed((unsigned char *)&l,sizeof(l));
@@@@ -194,6 +197,12 @@@@
 #endif
 		l=time(NULL);
 		RAND_seed((unsigned char *)&l,sizeof(l));
+#else
+		l=TimGetTicks();
+		RAND_seed((unsigned char *)&l,sizeof(l));
+		l=TimGetSeconds();
+		RAND_seed((unsigned char *)&l,sizeof(l));
+#endif
 
 #ifdef DEVRANDOM
 		/* 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rand/rand.h SSLeay-0.6.6/crypto/rand/rand.h
--- SSLeay-0.6.6-orig/crypto/rand/rand.h	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rand/rand.h	Fri Jun  6 06:31:23 1997
@@@@ -67,21 +67,25 @@@@
 void RAND_cleanup(void );
 void RAND_bytes( unsigned char *buf,int num);
 void RAND_seed( unsigned char *buf,int num);
+#ifndef __palmos__
 int  RAND_load_file(char *file,long max_bytes);
 int  RAND_write_file(char *file);
 char *RAND_file_name(char *file,int num);
 #ifdef WINDOWS
 void RAND_screen(void);
 #endif
+#endif
 #else
 void RAND_cleanup();
 void RAND_bytes();
 void RAND_seed();
+#ifndef __palmos__
 int  RAND_load_file();
 int  RAND_write_file();
 char *RAND_file_name();
 #ifdef WINDOWS
 void RAND_screen();
+#endif
 #endif
 #endif
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rand/randfile.c SSLeay-0.6.6/crypto/rand/randfile.c
--- SSLeay-0.6.6-orig/crypto/rand/randfile.c	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rand/randfile.c	Fri Jun  6 06:31:23 1997
@@@@ -56,6 +56,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #include <stdio.h>
 #include "cryptlib.h"
 #include <sys/stat.h>
@@@@ -164,3 +165,4 @@@@
 		}
 	return(ret);
 	}
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rc2/Makefile.ssl SSLeay-0.6.6/crypto/rc2/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/rc2/Makefile.ssl	Mon Jan 13 12:30:25 1997
+++ SSLeay-0.6.6/crypto/rc2/Makefile.ssl	Fri Jun  6 06:31:23 1997
@@@@ -18,7 +18,7 @@@@
 TEST=rc2test.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/librc2.a
 LIBSRC=rc2_ecb.c rc2_skey.c rc2_cbc.c rc2cfb64.c rc2ofb64.c
 LIBOBJ=rc2_ecb.o rc2_skey.o rc2_cbc.o rc2cfb64.o rc2ofb64.o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rc2/rc2_skey.c SSLeay-0.6.6/crypto/rc2/rc2_skey.c
--- SSLeay-0.6.6-orig/crypto/rc2/rc2_skey.c	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rc2/rc2_skey.c	Fri Jun  6 06:31:23 1997
@@@@ -59,7 +59,7 @@@@
 #include "rc2.h"
 #include "rc2_locl.h"
 
-static unsigned char key_table[256]={
+static const unsigned char key_table[256]={
 	0xd9,0x78,0xf9,0xc4,0x19,0xdd,0xb5,0xed,0x28,0xe9,0xfd,0x79,
 	0x4a,0xa0,0xd8,0x9d,0xc6,0x7e,0x37,0x83,0x2b,0x76,0x53,0x8e,
 	0x62,0x4c,0x64,0x88,0x44,0x8b,0xfb,0xa2,0x17,0x9a,0x59,0xf5,
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rc4/Makefile.ssl SSLeay-0.6.6/crypto/rc4/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/rc4/Makefile.ssl	Mon Jan 13 12:30:24 1997
+++ SSLeay-0.6.6/crypto/rc4/Makefile.ssl	Fri Jun  6 06:31:23 1997
@@@@ -18,7 +18,7 @@@@
 TEST=rc4test.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/librc4.a
 LIBSRC=rc4_enc.c
 LIBOBJ=rc4_enc.o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rsa/Makefile.ssl SSLeay-0.6.6/crypto/rsa/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/rsa/Makefile.ssl	Mon Jan 13 12:30:27 1997
+++ SSLeay-0.6.6/crypto/rsa/Makefile.ssl	Fri Jun  6 06:31:23 1997
@@@@ -20,7 +20,7 @@@@
 TEST=
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/librsa.a
 LIBSRC= rsa_enc.c rsa_gen.c rsa_lib.c rsa_sign.c $(ERRC).c
 LIBOBJ= rsa_enc.o rsa_gen.o rsa_lib.o rsa_sign.o $(ERRC).o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rsa/rsa.h SSLeay-0.6.6/crypto/rsa/rsa.h
--- SSLeay-0.6.6-orig/crypto/rsa/rsa.h	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rsa/rsa.h	Fri Jun  6 06:31:23 1997
@@@@ -101,6 +101,7 @@@@
 int	RSA_mod_exp(BIGNUM *r0, BIGNUM *i, RSA *rsa);
 void	RSA_free (RSA *r);
 
+#ifndef __palmos__
 void	ERR_load_RSA_strings(void );
 
 RSA *	d2i_RSAPublicKey(RSA **a, unsigned char **pp, long length);
@@@@ -124,6 +125,7 @@@@
 	unsigned char *sigret, unsigned int *siglen, RSA *rsa);
 int RSA_verify(int type, unsigned char *m, unsigned int m_len,
 	unsigned char *sigbuf, unsigned int siglen, RSA *rsa);
+#endif
 
 #else
 
@@@@ -138,6 +140,7 @@@@
 int	RSA_mod_exp();
 void	RSA_free();
 
+#ifndef __palmos__
 void	ERR_load_RSA_strings();
 
 RSA *	d2i_RSAPublicKey();
@@@@ -154,6 +157,7 @@@@
 
 int RSA_sign();
 int RSA_verify();
+#endif
 
 #endif
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rsa/rsa_enc.c SSLeay-0.6.6/crypto/rsa/rsa_enc.c
--- SSLeay-0.6.6-orig/crypto/rsa/rsa_enc.c	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rsa/rsa_enc.c	Fri Jun  6 06:31:23 1997
@@@@ -87,14 +87,22 @@@@
 	num=BN_num_bytes(rsa->n);
 	if (flen > (num-11))
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PUBLIC_ENCRYPT,RSA_R_DATA_TO_LARGE_FOR_KEY_SIZE);
+#else
+		ErrFatalDisplayIf(1,"Data too large for key size");
+#endif
 		goto err;
 		}
 	
 	buf=(unsigned char *)Malloc(num);
 	if (buf == NULL)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PUBLIC_ENCRYPT,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		goto err;
 		}
 	p=(unsigned char *)buf;
@@@@ -161,13 +169,21 @@@@
 	num=BN_num_bytes(rsa->n);
 	if (flen > (num-11))
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PRIVATE_ENCRYPT,RSA_R_DATA_TO_LARGE_FOR_KEY_SIZE);
+#else
+		ErrFatalDisplayIf(1,"Data too large for key size");
+#endif
 		goto err;
 		}
 	buf=(unsigned char *)Malloc(num);
 	if (buf == NULL)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PRIVATE_ENCRYPT,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		goto err;
 		}
 	p=buf;
@@@@ -237,13 +253,21 @@@@
 	buf=(unsigned char *)Malloc(num);
 	if (buf == NULL)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PRIVATE_DECRYPT,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		goto err;
 		}
 
 	if (flen != num)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PRIVATE_DECRYPT,RSA_R_DATA_NOT_EQ_TO_MOD_LEN);
+#else
+		ErrFatalDisplayIf(1,"Data not equal to mod length");
+#endif
 		goto err;
 		}
 
@@@@ -268,7 +292,11 @@@@
 	/* BT must be 02 */
 	if (*(p++) != 02)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PRIVATE_DECRYPT,RSA_R_BLOCK_TYPE_IS_NOT_02);
+#else
+		ErrFatalDisplayIf(1,"Block type is not 02");
+#endif
 		goto err;
 		}
 
@@@@ -278,13 +306,21 @@@@
 		if (*(p++) == 0) break;
 	if (i == j)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PRIVATE_DECRYPT,RSA_R_NULL_BEFORE_BLOCK_MISSING);
+#else
+		ErrFatalDisplayIf(1,"NUL before block missing");
+#endif
 		goto err;
 		}
 
 	if (i < 8)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PRIVATE_DECRYPT,RSA_R_BAD_PAD_BYTE_COUNT);
+#else
+		ErrFatalDisplayIf(1,"Bad pad byte count");
+#endif
 		goto err;
 		}
 
@@@@ -326,13 +362,21 @@@@
 	buf=(unsigned char *)Malloc(num);
 	if (buf == NULL)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PUBLIC_DECRYPT,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		goto err;
 		}
 
 	if (flen != num)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PUBLIC_DECRYPT,RSA_R_DATA_NOT_EQ_TO_MOD_LEN);
+#else
+		ErrFatalDisplayIf(1,"Data not equal to mod length");
+#endif
 		goto err;
 		}
 
@@@@ -351,7 +395,11 @@@@
 	/* BT must be 01 */
 	if (*(p++) != 01)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PUBLIC_DECRYPT,RSA_R_BLOCK_TYPE_IS_NOT_01);
+#else
+		ErrFatalDisplayIf(1,"Block type is not 01");
+#endif
 		goto err;
 		}
 
@@@@ -364,7 +412,11 @@@@
 			if (*p == 0)
 				{ p++; break; }
 			else	{
+#ifndef __palmos__
 				RSAerr(RSA_F_RSA_PUBLIC_DECRYPT,RSA_R_BAD_FF_HEADER);
+#else
+				ErrFatalDisplayIf(1,"Bad FF header");
+#endif
 				goto err;
 				}
 			}
@@@@ -372,12 +424,20 @@@@
 		}
 	if (i == j)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PUBLIC_DECRYPT,RSA_R_NULL_BEFORE_BLOCK_MISSING);
+#else
+		ErrFatalDisplayIf(1,"NUL before block missing");
+#endif
 		goto err;
 		}
 	if (i < 8)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_PUBLIC_DECRYPT,RSA_R_BAD_PAD_BYTE_COUNT);
+#else
+		ErrFatalDisplayIf(1,"Bad pad byte count");
+#endif
 		goto err;
 		}
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rsa/rsa_err.c SSLeay-0.6.6/crypto/rsa/rsa_err.c
--- SSLeay-0.6.6-orig/crypto/rsa/rsa_err.c	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rsa/rsa_err.c	Fri Jun  6 06:31:23 1997
@@@@ -45,6 +45,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #include <stdio.h>
 #include "err.h"
 #include "rsa.h"
@@@@ -95,3 +96,4 @@@@
 		ERR_load_strings(ERR_LIB_RSA,RSA_str_reasons);
 		}
 	}
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rsa/rsa_gen.c SSLeay-0.6.6/crypto/rsa/rsa_gen.c
--- SSLeay-0.6.6-orig/crypto/rsa/rsa_gen.c	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rsa/rsa_gen.c	Fri Jun  6 06:31:23 1997
@@@@ -57,11 +57,17 @@@@
  */
 
 #include <stdio.h>
+#ifndef __palmos__
 #include <time.h>
+#endif
 #include "cryptlib.h"
 #include "bn.h"
 #include "rsa.h"
 
+#ifdef __palmos__
+#define BN_value_one BN_value_one_get()
+#endif
+
 RSA *RSA_generate_key(bits, e_value, callback)
 int bits;
 unsigned long e_value;
@@@@ -144,7 +150,11 @@@@
 			if (!BN_add_word(rsa->e,2L)) goto err;
 			continue;
 			}
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_GENERATE_KEY,RSA_R_BAD_E_VALUE);
+#else
+		ErrFatalDisplayIf(1,"Bad e value");
+#endif
 		goto err;
 		}
 */
@@@@ -169,7 +179,11 @@@@
 err:
 	if (ok == -1)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_GENERATE_KEY,ERR_LIB_BN);
+#else
+		ErrFatalDisplayIf(1,"Error from BN library");
+#endif
 		ok=0;
 		}
 	BN_CTX_free(ctx);
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rsa/rsa_lib.c SSLeay-0.6.6/crypto/rsa/rsa_lib.c
--- SSLeay-0.6.6-orig/crypto/rsa/rsa_lib.c	Mon Jan 13 10:03:16 1997
+++ SSLeay-0.6.6/crypto/rsa/rsa_lib.c	Fri Jun  6 06:31:23 1997
@@@@ -70,7 +70,11 @@@@
 	ret=(RSA *)Malloc(sizeof(RSA));
 	if (ret == NULL)
 		{
+#ifndef __palmos__
 		RSAerr(RSA_F_RSA_NEW,ERR_R_MALLOC_FAILURE);
+#else
+		ErrFatalDisplayIf(1,"Malloc failure");
+#endif
 		return(NULL);
 		}
 	ret->pad=0;
@@@@ -94,13 +98,21 @@@@
 
 	if (r == NULL) return;
 
+#ifndef __palmos__
 	i=CRYPTO_add(&r->references,-1,CRYPTO_LOCK_RSA);
+#else
+	i = --(r->references);
+#endif
 	if (i > 0) return;
 #ifdef REF_CHECK
 	if (i < 0)
 		{
+#ifndef __palmos__
 		fprintf(stderr,"RSA_free, bad reference count\n");
 		abort();
+#else
+		ErrFatalDisplayIf(1,"RSA_free, bad reference count");
+#endif
 		}
 #endif
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/rsa/rsa_sign.c SSLeay-0.6.6/crypto/rsa/rsa_sign.c
--- SSLeay-0.6.6-orig/crypto/rsa/rsa_sign.c	Mon Jan 13 03:08:34 1997
+++ SSLeay-0.6.6/crypto/rsa/rsa_sign.c	Fri Jun  6 06:31:23 1997
@@@@ -56,6 +56,7 @@@@
  * [including the GNU Public Licence.]
  */
 
+#ifndef __palmos__
 #include <stdio.h>
 #include "cryptlib.h"
 #include "bn.h"
@@@@ -194,3 +195,4 @@@@
 	return(ret);
 	}
 
+#endif
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/crypto/sha/Makefile.ssl SSLeay-0.6.6/crypto/sha/Makefile.ssl
--- SSLeay-0.6.6-orig/crypto/sha/Makefile.ssl	Mon Jan 13 12:30:23 1997
+++ SSLeay-0.6.6/crypto/sha/Makefile.ssl	Fri Jun  6 06:31:24 1997
@@@@ -18,7 +18,7 @@@@
 TEST=shatest.c sha1test.c
 APPS=
 
-LIB=$(TOP)/libcrypto.a
+LIB=$(TOP)/libsha.a
 LIBSRC=sha_dgst.c sha1dgst.c sha_one.c sha1_one.c
 LIBOBJ=sha_dgst.o sha1dgst.o sha_one.o sha1_one.o
 
diff -urN -x Makefile -x include SSLeay-0.6.6-orig/e_os.h SSLeay-0.6.6/e_os.h
--- SSLeay-0.6.6-orig/e_os.h	Mon Jan 13 02:57:03 1997
+++ SSLeay-0.6.6/e_os.h	Fri Jun  6 06:31:24 1997
@@@@ -77,7 +77,7 @@@@
  ********************************************************************/
 /* The following is used becaue of the small stack in some
  * Microsoft operating systems */
-#if defined(WIN16) || defined(MSDOS)
+#if defined(WIN16) || defined(MSDOS) || defined(__palmos__)
 #  define MS_STATIC	static
 #else
 #  define MS_STATIC
@@@@ -133,7 +133,15 @@@@
 #  ifdef VMS
 #    include <unixlib.h>
 #  else
-#    include <unistd.h>
+#    ifdef __palmos__
+#      include <Pilot.h>
+#      define memcpy(a,b,c) MemMove(a,b,c)
+#      define memset(a,b,c) MemSet(a,c,b)
+#      define memcmp(a,b,c) MemCmp(a,b,c)
+#      define strlen StrLen
+#    else
+#      include <unistd.h>
+#    endif
 #  endif
 
 #  define SSLEAY_CONF	"ssleay.cnf"
@


1.1.1.1
log
@pilotSSLeay-1.1
@
text
@@

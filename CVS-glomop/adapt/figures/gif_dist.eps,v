head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	98.02.26.21.49.57;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Added a final set of graphs for the scalability section, as well as some
tables and cleanup of text.
@
text
@%!PS-Adobe-2.0 EPSF-1.2
%%Creator: SuperPaint
%%Title: gif_distf.eps
%%CreationDate: 2/26/98
%%BoundingBox: 0 0 291 209 
%%Pages 1
%%DocumentFonts: Symbol
%%+Helvetica
%%DocumentNeededFonts: Symbol
%%+Helvetica
%%DocumentProcSets: BeachHead 1 0
%%DocumentSuppliedProcSets: BeachHead 1 0
%%BeginProcSet: BeachHead 1 0
% BeachHead - v1 Copyright 1991 Silicon Beach Software, inc.
userdict begin/BeachHead 100 dict def BeachHead end begin
/BeachHead_version 1 def/c 75 string def/oldmatrix 6 array def/newmatrix 6 array def/a{bind def}bind def/b{exch def}a
/_doTexturePat false def/nulld{counttomark{null def}repeat pop}a mark/l/m/o/q/r/u/v/w/x/y/z/A
/B/D/E/F/G/H/I/J/K/M/N/O/P/Q/R/S/T/V/W/X/Y/ba/ca/da/ea/fa/ga/ha/ia/ja/ka/la/ma/_strtxtmatrix nulld
/d{0 1 74{c exch 0 put}for dup c cvs pop c}a/e{d 74 1 put}a/f{d 74 2 put}a/g{d 73 1 put}a
/h{d 72 1 put}a/i{d 71 1 put}a/j{1 currentrgbcolor 1 index eq 3 1 roll eq and{currentgray sub}if setgray}a
/k{/FontInfo 2 dict def FontInfo /FullName c dup length string copy put FontInfo/UnderlinePosition
100 l/FontInfo known{l/FontInfo get/UnderlinePosition known{pop l/FontInfo get/UnderlinePosition get
}if}if put/m 1 string def/FontBBox[0 0 1 1]def/FontType 3 def/Encoding l/Encoding get def}a
/n{/o 13 dict def o begin/l b k/_isSBShadowFont l/_isSBShadowFont known{l/_isSBShadowFont get}
{false}ifelse def/BuildChar{exch begin m 0 3 -1 roll put l setfont m stringwidth setcharwidth
0 0 moveto m show end}def}a/p{/o 16 dict def o begin/q b/r b/l b/FontMatrix[1 0 0 1 0 0]def k}a/s{exch begin m 0 3 -1 roll put
l setfont m stringwidth FontMatrix 0 get dup 20 le{pop 1 index 0 ne{exch q add exch}if
}{40 le{1 index 0 ne{exch q 2 div add exch}if}if}ifelse setcharwidth 0 0 moveto gsave}a
/t{dup length 1 add dict/o b dup{1 index/FID ne 2 index/UniqueID ne and{o 3 1 roll put}
{pop pop}ifelse}forall o begin/PaintType 2 def/StrokeWidth 12 def end/_ o definefont}a
/findoutlinefont{userdict/BeachHead get begin e FontDirectory c known{pop c findfont}
{findfont t .02 p/_isSBShadowFont false def/BuildChar{userdict/BeachHead get begin s j
m show grestore gsave r setfont m show grestore end	end}def end c o definefont}ifelse end}a
/findshadowfont{userdict/BeachHead get begin f FontDirectory c known{pop c findfont}{findfont
t .05 p/_isSBShadowFont true def/BuildChar{userdict/BeachHead get begin s q dup neg rmoveto
m show grestore gsave j m show grestore gsave r setfont m show grestore end	end}def end
c o definefont}ifelse end}a/addheavy{userdict/BeachHead get begin dup/FontInfo known{dup/FontInfo get/FullName known
{dup/FontInfo get/FullName get h pop FontDirectory c known{pop c findfont}{n/FontMatrix[1 0 0 1 0 0]def
/BuildChar{exch begin m 0 3 -1 roll put l setfont m stringwidth exch .02 add exch setcharwidth
0 0 moveto m show .04 0 moveto m show end}def end c o definefont}ifelse}if}if end}a
/addoblique{userdict/BeachHead get begin dup/FontInfo known{dup/FontInfo get/FullName known
{dup/FontInfo get/FullName get g pop FontDirectory c known{pop c findfont}{n/FontMatrix[1 0 .17 1 0 0]def
end c o definefont}ifelse}if}if end}a/adduline{userdict/BeachHead get begin dup/FontInfo known
{dup/FontInfo get/FullName known{dup/FontInfo get/FullName get i pop FontDirectory c known
{pop c findfont}{n/FontMatrix[1 0 0 1 0 0]def/BuildChar{exch begin m 0 3 -1 roll put
l setfont m stringwidth setcharwidth 0 0 moveto m show .05 setlinewidth 0 setlinecap
FontInfo/UnderlinePosition get 1000 div dup 0 exch moveto 0 exch m stringwidth 3 -1 roll add
3 1 roll add exch lineto stroke end}def end c o definefont}ifelse}if}if end}a
/EPSBegin{save userdict/BeachHead get begin/la b count/ma b userdict/showpage{}put end
0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin 10 setmiterlimit [] 0 setdash newpath}a
/EPSEnd{userdict/BeachHead get begin count ma sub dup 0 gt{{pop}repeat}{pop}ifelse la end restore}a
/cimage{userdict/BeachHead get begin{{readstring}}{{readhexstring}}ifelse/u b/colorimage where
{pop 4 index dup string/v b dup string/w b dup string/x b dup string/y b string/z b
{currentfile v u pop}{currentfile w u pop}{currentfile x u pop}{currentfile y u pop
currentfile z u pop pop}5 -1 roll{true 4 A}{true 4/colorimage load exec}ifelse}{4 index
dup string/z b 4 mul string/B b{currentfile B u pop pop currentfile z u pop}
exch{transimage}{/image load exec}ifelse}ifelse end}a/C{D{gsave E F 3 index idtransform translate
G 1 4 index 4 index{H}/image load exec grestore/I 0 def/G 0 def/D false def}if}a
/transimage{userdict/BeachHead get begin 2 index 8 ne{/image load exec}{4 index cvi string
/H b/J 0 string def/K 0 def/D false def/I 0 def/G 0 def 0 1 5 index 1 sub{/F b 0 1 6 index 1 sub
{K J length ge{1 index dup type/stringtype ne{exec}if/J b/K 0 def}if J K get/K K 1 add def
dup 255 eq{pop pop C}{H I 3 -1 roll put/I I 1 add def/G G 1 add def D not{/E b/G 1 def
/D true def}{pop}ifelse}ifelse}for C}for 5{pop}repeat}ifelse end}a/L{D{gsave E F 8 index
idtransform translate I 1 8 9 index{M}{N}{O}{P}true 4/colorimage load exec grestore/I 0 def
/D false def}if}a/A{9 index cvi dup string/M b dup string/N b dup string/O b string/P b
/Q 0 string def/K 0 def/D false def/I 0 def/G 0 def 0 1 10 index 1 sub{/F b 0 1 11 index 1 sub
{K Q length ge{6 index exec/R b 5 index exec/S b 4 index exec/T b 3 index exec/Q b/K 0 def
}if R K get S K get T K get Q K get/K K 1 add def dup 0 eq 2 index 0 eq and 3 index 0 eq and
4 index 0 eq and{5{pop}repeat L}{M I 6 -1 roll put N I 5 -1 roll put O I 4 -1 roll put
P I 3 -1 roll put/I I 1 add def D not{/E b/D true def}{pop}ifelse}ifelse}for L}for 10{pop}repeat}a
/bps 8 string def/bpm[8 0 0 8 0 0]def/bpp{bps}def
/overlaybackpat{userdict/BeachHead get begin gsave setrgbcolor bps copy pop dup 0 get 8 div floor cvi
8 mul 1 index 2 get 8 div floor cvi 8 mul 2 index 1 get 8 div floor cvi 8 mul 8 4 index 3 get 8 div
floor cvi 8 mul{2 index 8 3 index{1 index gsave translate 8 8 scale 8 8 false bpm/bpp load imagemask
grestore}for pop}for pop pop pop grestore end}a
/U{userdict/BeachHead get begin/V b/W b countdictstack save V 2 add 2 roll count V sub /X b
/W load end{exec}stopped userdict/BeachHead get begin/Y b count X sub{pop}repeat Y 3 1 roll
restore countdictstack exch sub{end}repeat end}a/Z( )def/aa{moveto{ba setfont Z end gsave
0 setgray stringwidth grestore userdict/BeachHead get begin rmoveto/ca load null ne{/da da
1 add def da ea length le{fa ea da get ca}if}{ax ay rmoveto fa ga eq{cx cy rmoveto}if}ifelse}stopped
currentdict userdict/BeachHead get ne{userdict/BeachHead get begin}if}a
/filltextpath{userdict/BeachHead get begin/ea b dup type dup/integertype eq exch/realtype eq or
{/ay b/ax b/ga b/cy b/cx b/ca null def}{/ca b}ifelse/ha b/ia b ia{currentfont/_isSBShadowFont get
{gsave 0 setgray/ca load null ne{/ca load ea kshow}{cx cy ga ax ay ea awidthshow}ifelse
grestore}if}if gsave currentfont ia{begin r FontMatrix makefont l FontMatrix makefont end
}{null exch}ifelse/ja b/ka b/ba currentfont def _doTexturePat{systemdict/makepattern known}
{false}ifelse{matrix currentmatrix _strtxtmatrix null ne{_strtxtmatrix setmatrix}if 1 -1 scale
txTrnsX txTrnsY translate settexturepat setmatrix/da 0 def ea{/fa b Z 0 fa put ja setfont currentpoint
Z show aa{exit}if}forall}{10 setlinewidth/da 0 def currentpoint newpath 0 dup dup dup moveto lineto
closepath moveto ea{/fa b Z 0 fa put currentpoint ja setfont count 1 add dup 1 roll Z true{charpath}stopped
count count -1 roll sub{pop}repeat currentpoint{ha}0 U pop newpath 0 dup dup dup moveto
lineto closepath moveto aa{exit}if}forall}ifelse grestore ka null ne{gsave 0 setgray/da
0 def ea{/fa b Z 0 fa put ka setfont currentpoint Z show aa{exit}if}forall grestore}if
/_doTexturePat false def/_strtxtmatrix null def end}a end
%%EndProcSet
%%EndProlog
%%BeginSetup
userdict/BeachHead get begin
%%EndSetup
%%Page One 1
newpath
0 0 moveto
0 209 lineto
291 209 lineto
291 0 lineto closepath clip
gsave
-109 331 translate
1 -1 scale
EPSBegin
80 361 translate
1 -1 scale
%%BeginDocument: someDoc
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: gnuplot
%%DocumentFonts: Helvetica
%%BoundingBox: 50 50 320 239
%%EndComments
/gnudict 40 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/vshift -46 def
/dl {10 mul} def
/hpt 31.5 def
/vpt 31.5 def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke gnulinewidth 2 mul setlinewidth } def
/AL { stroke gnulinewidth 2 div setlinewidth } def
/PL { stroke gnulinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 dl 2 dl] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 0 1 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 0 1 DL } def
/LT2 { PL [2 dl 3 dl] 1 0 0 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/P { stroke [] 0 setdash
  currentlinewidth 2 div sub M
  0 currentlinewidth V stroke } def
/D { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  P } def
/A { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/B { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  P } def
/C { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/T { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  P  } def
/S { 2 copy A C} def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
/Helvetica findfont 140 scalefont setfont
newpath
LTa
672 211 M
4497 0 V
672 211 M
0 3498 V
LTb
LTa
672 211 M
4497 0 V
LTb
672 211 M
63 0 V
4434 0 R
-63 0 V
588 211 M
(0) Rshow
LTa
672 794 M
4497 0 V
LTb
672 794 M
63 0 V
4434 0 R
-63 0 V
588 794 M
(0.05) Rshow
LTa
672 1377 M
4497 0 V
LTb
672 1377 M
63 0 V
4434 0 R
-63 0 V
-4518 0 R
(0.1) Rshow
LTa
672 1960 M
4497 0 V
LTb
672 1960 M
63 0 V
4434 0 R
-63 0 V
-4518 0 R
(0.15) Rshow
LTa
672 2543 M
4497 0 V
LTb
672 2543 M
63 0 V
4434 0 R
-63 0 V
-4518 0 R
(0.2) Rshow
LTa
672 3126 M
4497 0 V
LTb
672 3126 M
63 0 V
4434 0 R
-63 0 V
-4518 0 R
(0.25) Rshow
LTa
672 3709 M
4497 0 V
LTb
672 3709 M
63 0 V
4434 0 R
-63 0 V
-4518 0 R
(0.3) Rshow
LTa
672 211 M
0 3498 V
LTb
672 211 M
0 63 V
0 3435 R
0 -63 V
672 71 M
(0) Cshow
LTa
1422 211 M
0 3498 V
LTb
1422 211 M
0 63 V
0 3435 R
0 -63 V
1422 71 M
(5000) Cshow
LTa
2171 211 M
0 3498 V
LTb
2171 211 M
0 63 V
0 3435 R
0 -63 V
2171 71 M
(10000) Cshow
LTa
2921 211 M
0 3498 V
LTb
2921 211 M
0 63 V
0 3435 R
0 -63 V
2921 71 M
(15000) Cshow
LTa
3670 211 M
0 3498 V
LTb
3670 211 M
0 63 V
0 3435 R
0 -63 V
3670 71 M
(20000) Cshow
LTa
4420 211 M
0 3498 V
LTb
4420 211 M
0 63 V
0 3435 R
0 -63 V
4420 71 M
(25000) Cshow
LTa
5169 211 M
0 3498 V
LTb
5169 211 M
0 63 V
0 3435 R
0 -63 V
5169 71 M
(30000) Cshow
672 211 M
4497 0 V
0 3498 V
-4497 0 V
672 211 L
LT0
841 559 M
112 31 V
112 179 V
113 125 V
112 19 V
113 27 V
112 303 V
113 -158 V
112 96 V
112 131 V
113 -122 V
112 270 V
113 213 V
112 -337 V
113 211 V
112 341 V
112 -146 V
113 463 V
112 -849 V
113 410 V
112 209 V
113 -200 V
112 1344 V
112 -654 V
113 -325 V
112 -150 V
113 548 V
112 -749 V
113 845 V
112 97 V
112 -777 V
113 -26 V
112 753 V
113 115 V
112 -402 V
113 849 V
112 -3 V
5000 1868 L
113 8 V
56 402 V
841 559 B
953 590 B
1065 769 B
1178 894 B
1290 913 B
1403 940 B
1515 1243 B
1628 1085 B
1740 1181 B
1852 1312 B
1965 1190 B
2077 1460 B
2190 1673 B
2302 1336 B
2415 1547 B
2527 1888 B
2639 1742 B
2752 2205 B
2864 1356 B
2977 1766 B
3089 1975 B
3202 1775 B
3314 3119 B
3426 2465 B
3539 2140 B
3651 1990 B
3764 2538 B
3876 1789 B
3989 2634 B
4101 2731 B
4213 1954 B
4326 1928 B
4438 2681 B
4551 2796 B
4663 2394 B
4776 3243 B
4888 3240 B
5000 1868 B
5113 1876 B
stroke
grestore
end
showpage
%%Trailer
%%EndDocument
EPSEnd
/Helvetica findfont 10 scalefont setfont
gsave
226 324 translate 1 -1 scale 0 0 moveto
0 setgray
(Gif Size (bytes))show
grestore
oldmatrix currentmatrix pop
BeachHead/_strtxtmatrix oldmatrix put
0 -1 1 0 -264 501 newmatrix astore concat
gsave
225 386 translate 1 -1 scale 0 0 moveto
0 setgray
(Avg. Distillation Latency (s))show
grestore
oldmatrix setmatrix
grestore
showpage
%%Trailer
end
@

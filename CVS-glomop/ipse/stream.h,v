head     1.1;
branch   1.1.1;
access   ;
symbols  ipse-pcap:1.1.1.1 ipse-pcap:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     97.06.17.01.09.03;  author gribble;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.06.17.01.09.03;  author gribble;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#ifndef __STREAM_H__
#define __STREAM_H__

#include <sys/time.h>
#include <unistd.h>
#include "packet.h"

typedef struct
{
    unsigned long laddr, haddr;
    unsigned short lport, hport;
    unsigned char protocol;
    int handid;
} streamid_t;

typedef enum {STREAM_DIR_LTOH, STREAM_DIR_HTOL, STREAM_DIR_NONE} streamdir;

typedef struct s_stream_t
{
    streamid_t id;
    struct s_uifuncs_t *ui;
    void *uistate;
    unsigned syn_seq[2], seq[2], nextseq[2];
    unsigned char closed[2];
    unsigned char inuse;
    struct timeval lastheard_time;

  /* Private element - used to create a heap of these structures for
     quick allocation in the hash table routines */
    struct s_stream_t *next;
} stream_t;

typedef struct s_uifuncs_t {
    void (*uiopen)(stream_t *);
    int (*uiwrite)(stream_t *, streamdir, unsigned char *, int);
    void (*uiclose)(stream_t *);
} uifuncs_t;

void stream_init(int num_stream_buckets);
char *stream_ntoa(unsigned long addr);
int stream_display(stream_t *stream, ip_packet_t *packet,
    streamdir packetdir);
int stream_get_node(streamid_t *, stream_t **, int (*)(stream_t *, void *),
    void *);
void stream_clean(void);  /* wipe out all streams */
void stream_turf(stream_t *stream);

#endif
@


1.1.1.1
log
@Wohoo--ipse over pcap!
@
text
@@

head	1.2;
access;
symbols;
locks; strict;
comment	@% @;


1.2
date	99.06.01.03.56.18;	author daw;	state Exp;
branches;
next	1.1;

1.1
date	99.06.01.01.29.02;	author daw;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@\documentclass{slides}
\usepackage{amssymb}
\usepackage{amsmath}
\usepackage{times}
\usepackage{landscape}
\usepackage{eepic}
\usepackage{epsfig}
\raggedright
\addtolength{\textheight}{1in}
\addtolength{\topmargin}{-1.3in}
\addtolength{\textwidth}{1in}
\pagestyle{plain}
\newcommand\dolengths{ %
\setlength{\topsep}{0in}
\setlength{\parsep}{0in}
\setlength{\parskip}{.1in}
\setlength{\itemsep}{0in}
}
\newcommand{\xor}{\oplus}
\newcommand\bi{\begin{itemize}}
\newcommand\ei{\end{itemize}}
\newcommand\vf{\vspace*{\fill}}
\newcommand\bs[1]{\begin{slide}{} \vf \centerline{\Large \bf #1} \vf \vf}
\newcommand\es{\vf \vf \end{slide}}
\newcommand{\dashlinestretch}{30}
\newcommand{\K}{{\cal K}}
\newcommand{\X}{{\cal X}}
\newcommand{\Y}{{\cal Y}}
\newcommand{\Z}{{\mathbb Z}}
\newcommand{\Adv}{\textrm{Adv}\,}
\newcommand{\des}{\textrm{DES}}
\newtheorem{theorem}{Theorem}
\newtheorem{lemma}{Lemma}
\newtheorem{corollary}{Corollary}
\newenvironment{proof}{{\noindent \em Proof.} }{$\Box$\vskip 0.1in}
\begin{document}

\dolengths
\begin{slide}{}
\begin{center}
{\Large Practical proofs of security \\ for the Unix password hash function}
\end{center}
\vskip 2in

\begin{center}
David Wagner and Ian Goldberg\\
{\em University of California, Berkeley}
\end{center}
\end{slide}

\bs{The Unix hash function}
\begin{center}
\ \psfig{file=hash.eps,height=6in} \ 
\end{center}
\es

\bs{Our approach}
We want to prove something about the security
of the Unix hash function.
\vskip 0.7in
We use a security reduction:
\bi
\item Assume DES is secure.
\item Prove that the Unix hash function is secure.
\ei
\vskip 0.7in
We focus on concrete security, i.e. a quantitative approach.
\es

\bs{Classical crypto-complexity theory}
Studies what complexity-theoretic assumptions you need for cryptography.\\
($P \ne NP$, etc.)
\vskip 1in
Tools: Asymptotic poly-time reductions, classical complexity theory.
\es

\bs{The crypto complexity hierarchy}
\begin{center}
\ \psfig{file=complex.eps,height=5in} \ 
\end{center}
\es

\bs{Concrete analysis}
Criticisms of classical crypto theory:
\bi
\item Its constructions are often neither fast nor secure, in practice.\\
	(Not all poly-time algorithms are efficient enough, and vice versa.)
\item Doesn't help with real-world primitives, which are necessarily finite. \\
	(Asymptotic results only apply to infinite families of functions.)
\item Reducing assumptions doesn't necessarily reduce the design effort.\\
	(Designing a secure block cipher is not much harder than designing
	a secure one-way function.)
\ei
{\bf But}, the notion of a security reduction is very powerful.
\vskip 0.5in
Concrete security = security reductions $-$ asymptotics
$+$ practice-driven cryptographic assumptions.
\es

\bs{Related work}
Luby and Rackoff gave strong evidence that the
hash construction $H'(k) = E_k(0)$ is sound.\\
They showed that it is asymptotically secure against poly-time
adversaries if $E$ is.
\vskip 0.5in

But they didn't give an analysis of its concrete security,
and they only analyzed a variant of the Unix hash function
where the iteration is omitted.
\es


\bs{A roadmap of our proof}
\begin{center}
\ \psfig{file=roadmap.eps,height=2.5in} \ 
\end{center}
\vskip 0.8in
\begin{center}
Iterated PRP $\to$ Iterated PRF $\to$ PRF $\to$ PRG $\to$ OWF
\end{center}
\es

\bs{Background: definitions}
An attack $R$-breaks a crypto primitive if the algorithm
succeeds in breaking the primitive with resources specified
by $R$.
\vskip 0.2in

A crypto primitive is $R$-secure if there is no
algorithm to $R$-break it.
\vskip 0.2in

The adversary's job is to
distinguish between the pseudo-random primitive
and a truly-random ideal version.

(Exception: for one-way functions, a successful adversary
is one which can find a pre-image.)
\es

\bs{Formal definitions: One-way functions}
Adversary $A$ attacking a OWF $h : \K \to \Y$:\\
\vskip 0.2in
{\bf Input}: $y \in \Y$.\\
{\bf Output}: Either $x \in \K$ with $h(x)=y$, or else $\bot$.\\
{\bf Success prob.}: $p = \Pr[A(h(k)) \ne \bot]$, where $k$ is uniformly
distributed.\\
{\bf Resources}: $(t,p)$ means $t$ hash-computations and success prob. $p$.
\vskip 0.5in

Notes: (1) the adversary only has to succeed on valid hash-outputs,\\
(2) $h$ is only guaranteed one-way when the input is uniformly distributed.
\es

\bs{Formal definitions: PRF}
Adversary $A$ attacking a PRF $F : \K \times \X \to \Y$:\\
\vskip 0.2in
{\bf Input}: An oracle $f : \X \to \Y$,
chosen either as a $F_k$ or as $R$.\\
\qquad ($R : \X \to \Y$ is a random function.)\\
{\bf Output}: 0 or 1, according to whether $A$ guesses $f=R$ or $f=F_k$.\\
{\bf Measure of success}:
	$\Adv A = \left| \Pr[A^{F_k} = 1] - \Pr[A^{R} = 1] \right|$.\\
{\bf Resources}: $(t,q,e)$ means $t$ work, $q$ oracle queries to $f$, and
$e = \Adv A$.
\vfill
\es

\bs{Formal definitions: PRP}
Similar to PRF: a PRP is indistinguishable from
a random permutation.
\es

\bs{Formal definitions: PRG}
A PRG $g:\K \to \Y$ is secure if $g(k)$ is indistinguishable
from a random bitstring when $k \in \K$ is uniformly distributed.
\es

\bs{Easy: Iterated PRP $\to$ Iterated PRF}
\begin{theorem}
A $(t,q,e)$-secure PRP  $E : \K \times \Y \to \Y$
is a $(t,q,e+q^2/2|\Y|)$-secure PRF.
\end{theorem}
\es

\bs{DES-CBC-MAC}
Define
\[
\mbox{DES-CBC-MAC}_k(x) =
\des_k(x_{24} \oplus \des_k(x_{23} \oplus \ldots \des_k(x_1 \oplus \des_k(x_0))
\ldots )).
\]
\vskip 0.5in
\begin{center}
\ \psfig{file=descbcmac.eps,height=2.5in} \ 
\end{center}
\vskip 0.5in
Bellare, Kilian, and Rogaway showed that DES-CBC-MAC is a secure PRF if DES is.
\es

\bs{Analyzing iteration}
{\bf A key trick}:
\[ f^n(x) = \mbox{$f$-CBC-MAC}(x,0,0,\ldots,0). \]
\vskip 0.5in
Therefore,
        \begin{center} \frame{\parbox{5.7in}{
        \begin{center} \parbox{5.5in}{ \begin{center}
	\[ \mbox{Unix-hash}(k) = \mbox{DES-CBC-MAC}_k(0). \]
        \vskip 0.2in
        \end{center}
        } \end{center}
        }}
        \end{center}
\es

\bs{The trick: Iterated PRF $\to$ PRF}
\begin{theorem}
If $F: \K \times \Y \to \Y$ is a $(t,q,e)$-secure PRF, then $F^n$ is a
$(t',q/n,e')$-secure PRF, where
$t'=t-q \log_2 |\Y|$ and $e' = e + 1.5 q^2/|\Y|$.
\end{theorem}
\begin{proof}
Note that $F_k^n(x)=F_k(\cdots(F_k(x))\cdots)$
is a $F_k$-CBC-MAC on $(x,0,0,\ldots,0)$.
Now invoke Bellare, Kilian, and Rogaway (Lemma 4.1).
\end{proof}
\es

\bs{Easy: PRF $\to$ PRG}
\begin{theorem}
If $F$ is a $(t,1,e)$-secure PRF, then $g(k)=F_k(0)$ is a $(t,e)$-secure PRG.
\end{theorem}
\vskip 0.5in

\begin{corollary}
If $\des$ is a $(t,25,e)$-PRP, then $H(k)=\des_k^{25}(0)$ is
a $(t,e+25^2/2^{63})$-PRG.  In other words, the Unix hashing algorithm $H$
is a secure pseudo-random generator if DES is a secure block cipher.
\end{corollary}
\es

\bs{The meat: PRG $\to$ OWF}
The main technical result:
\begin{theorem}
Let $g : \K \to \Y$ be a $(t,e)$-secure PRG, with $|\Y| > |\K|$.
Then $g$ is a $(t,p)$-secure one-way function, where
$p = e / (1 - |\K|/|\Y|)$.
\end{theorem}
\es

\bs{Proof of Theorem 4}
{\em Proof.}  We show the contrapositive.\\
Suppose adversary $B$ $(t,p)$-breaks $g$ (as a one-way function).\\
The claim is that the adversary $A$ defined below
$(t,e)$-breaks $g$ (as a PRG).
$$A(y) = \left\{ \begin{array}{ll}
        1\qquad &\mbox{if }B(y) \ne \bot \\
        0       &\mbox{otherwise.}
        \end{array} \right.$$
\vskip 0.5in
The rest of the argument is a proof of this claim
using a counting argument.
\es

\bs{Pictorial view of the counting argument}
\begin{center}
\ \psfig{file=counting.eps,height=3in} \ 
\end{center}
\vskip 0.5in
$V = \{y : B(y) \ne \bot\}$
is the set of $g$-outputs where $B$ succeeds.\\
$W = \{k : g(k) \in V\}$
is the set of $g$-inputs which are not secure against $B$.\\
\es

\bs{The counting argument}
\begin{lemma}
$|V| \le |W|$.
\end{lemma}
\begin{proof}
The restriction of $B$ to $V$ may be viewed as a function with
signature $V \to W$.\\
\qquad (Proof: If $v \in V$, then $g(B(v)) = v \in V$, so $B(v) \in W$.)
\vskip 0.3in
Furthermore, this function is one-to-one.\\
\qquad (Proof: If $v,v' \in V$, then $v = g(B(v)) = g(B(v')) = v'$,
	so $v = v'$.)
\end{proof}
\es

\bs{Calculating the advantage}
First,
$\Pr[A(g(k)) = 1] = \Pr[k \in W] = p$.
\vskip 0.3in
Also $|W| = |\K| \cdot p$, so by Lemma 1,
\[ \Pr[A(u_Y) = 1] = \Pr[u_Y \in V] = |V|/|\Y|
   \le |W|/|\Y|  = |\K|/|\Y| \cdot p. \]
\vskip 0.8in
Plugging into the definition of $\Adv A$ gives
\[ \Adv A \ge \left| p - |\K|/|\Y| \cdot p \right|
  = (1 - |\K|/|\Y|) \cdot p = e. \]
$\Box$
\es


\bs{Implications for the Unix hash}
\begin{corollary}
If DES is a $(t',25,e')$-secure PRP, then the Unix hash function
is a $(t,e)$-secure OWF, where $t \approx t'$ and $e \approx (1+1/255) e'$.
\end{corollary}
\vskip 1in
Suppose that, if you're only allowed at most 25 chosen plaintext queries,
there are no good attacks on DES.
In this case, the Unix hash is secure.
\es

\bs{Non-uniform distributions}
What we're missing is a proof of security in the case
that the password $k$ is non-uniformly distributed.
\vskip 0.5in
Open questions for research:
\bi
\item Given a cryptographic primitive good for uniformly distributed keys,
	can we construct a (perhaps probabilistic)
	variant that is provably secure for any distribution on the key?
\ei
\es

\bs{Summary}
\bi
\item Near-optimal lower bounds for the Unix hash function.\\
      The construction preserves the security of DES extremely well.
\item Possibly of independent interest: (1) very fast, security-preserving
      construction of one-way functions from block/stream ciphers;
      (2) a trick for handling for iterated encryption.
\item Research challenge: analysis of non-uniform keying?
\ei
\es

\end{document}
@


1.1
log
@*** empty log message ***
@
text
@d33 1
d35 1
a35 1
\newenvironment{proof}{{\noindent \em Proof:} }{$\Box$\vskip 0.1in}
d41 1
a41 1
{\Large Proofs of security for the Unix password hash function}
d52 3
d58 3
d66 2
d71 10
d84 14
d100 13
d114 5
d120 1
d143 1
d146 1
a146 1
{\bf Success prob.}: $p = \Pr[A(h(w)) \ne \bot]$, where $w$ is uniformly
a155 5
Let $\{R_k : k \in \K\}$ be a family of $|\K|$ functions
chosen independently and uniformly at random from the set of
all functions with signature $\X \to \Y$.
\vskip 0.4in

d157 1
d159 3
a161 2
chosen either as a $F_k$ or as a $R_k$.\\
{\bf Output}: 0 or 1, according to whether $A$ guesses $f=R_k$ or $f=F_k$.\\
d163 1
a163 1
	$\Adv A = \left| \Pr[A^{F_k} = 1] - \Pr[A^{R_k} = 1] \right|$.\\
d170 2
a171 1
Similar to PRF, except for permutations instead of functions.
a174 3
Similar to PRF, except for random bitstrings.
\vskip 0.2in

d179 1
a179 1
\bs{Easy: Iterated PRP $\to$ iterated PRF}
d181 1
a181 1
A $(t,q,e)$-secure PRP  $E_k : \K \times \Y \to \Y$
d193 7
a199 1
\vskip 0.3in
d201 5
a205 1
{\bf Key trick}:
a213 2

Bellare, Kilian, and Rogaway showed that DES-CBC-MAC is a secure PRF if DES is.
d243 47
d291 12
d305 1
d307 8
d317 10
a326 1
\bs{Non-uniformity}
@


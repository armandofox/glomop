head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     95.09.14.00.28.18;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     95.09.14.00.28.19;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<title>How the Demo Works</title>

<h1>How It Works</h1>
       
<p>
All HTTP requests made by your browser are intercepted by the proxy host
(a SPARCstation 20),
which is well-connected to the rest of the Internet.  The
proxy forwards each request to the server specified in the request.
</p>

<p>
If the server returns a GIF image that exceeds a certain threshold
size, the proxy distills the image and sends the client this (much
smaller) drawing in GIF format.
</p>

<p> <a name=hack> Much HTML hackage is also done, for example to add the
<b>R</b> links after each image.  These links work by adding a "key
string" onto the end of the HTTP request, to cue the proxy that this is
a request for a <a href="overview.html#refinement"><i>refinement</i></a>
of a previously-fetched image, rather than a request for a new image.
(Yes, this is a <a
href=http://fount.journalism.wisc.edu/jargon/Jarg_H.html#hack>hack</a>,
because it's the only easy way to make this work with today's browsers
and the stateless HTTP protocol.
But a true GloMop-aware application would use the GloMop library 
to perform such negotiation directly with the proxy.

<!-- <hr><!-------------------------------------------------------------------> -->
<!-- <a name=java> -->
<!-- <h1>How the Java Demo Works</h1></a> -->

<!-- In the Java demo, each image is replaced by an -->
<!-- instance of a small applet that immediately fetches the distilled image. -->
<!-- You can now use the mouse to select a region of any distilled image, and -->
<!-- by typing a key from 1 to 5, cause the selected region to be  -->
<!-- <a href="overview.html#refinement"><i>refined</i></a>.  (Refinement level -->
<!-- <i>k</i> is a reduced-color <i>k</i>-bit-per-pixel quantization of the -->
<!-- original image.) -->

<!-- The refined region is overlaid on the original distilled image, rather than -->
<!-- displayed on a separate page as with the plain proxy.  Multiple -->
<!-- different refined regions can be active for one image.  Typing key -->
<!-- <b>R</b> instead of 1-5 causes the entire original image to be -->
<!-- retrieved.  This is all much easier to play with than to describe. -->

<!-- Each applet instance is passed the URL of its associated image in a tag -->
<!-- attribute.  As in the plain proxy, a URL munging scheme is used to -->
<!-- specify refinement levels and refinement subblocks.  The PPM library is -->
<!-- used to perform the subblock manipulations and color reduction. -->

<!-- <a href="../classes/Refine.java">Here is the source</a> for the Java applet. -->

<hr><!------------------------------------------------------------------->
<a href="index.html"><img src=glomop.gif align=bottom alt="GloMop home page"></a>
<a href=".."><img src=../pix/fox_tiny.gif align=bottom alt="Armando's home
page"></a>
<address>fox@@cs.berkeley.edu</address>
</html>
@


1.1.1.1
log
@initial checkin of Glomop web pages to CVS
@
text
@@

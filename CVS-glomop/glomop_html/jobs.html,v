head	1.6;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.6
date	97.08.16.06.34.05;	author fox;	state Exp;
branches;
next	1.5;

1.5
date	97.08.05.06.48.49;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	97.06.10.23.02.14;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	97.02.09.07.11.42;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	97.02.03.20.13.19;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.01.07.08.31.42;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.01.07.08.31.42;	author fox;	state Exp;
branches;
next	;


desc
@@


1.6
log
@*** empty log message ***
@
text
@<HTML>
<HEAD>
    <TITLE>Daedalus/GloMop</TITLE>
</HEAD>
<BODY BGCOLOR="#ffffff">
<H2><CENTER>
Positions in the GloMop Group of the Daedalus Project
</CENTER>
</H2>
<HR>
<P>
<ul>
  <li><STRONG>Supervising faculty:</STRONG>
       <A HREF="http://www.cs.berkeley.edu/~brewer">Prof. Eric Brewer</A>

  <li><STRONG>Graduate student contact:</STRONG>
        <A HREF="http://www.cs.berkeley.edu/~fox">Armando Fox</a>

  <li><STRONG>Time commitment:</STRONG>

        6-20 hrs/week, starting immediately, thru end of semester and
       beyond

  <li><STRONG>Compensation:</STRONG>
        CS 199 or pay
</ul>
<HR>

<p>How do you check email, surf the Web, and "stay connected" when
your connection to the Internet is slow -- either because it's a modem,
or because it's wireless?  Or when your computer is a handheld PDA
instead of a desktop PC?  Or both?

<p>That's the question
<a href="index.html">our research</a> addresses, and we think we have the
right answer.  Our research results apply to PC's and laptops with slow
modems, 
"smart" cellular phones like the <a
href="http://www.geoworks.com/htmpages/9000.html">Nokia 9000</a>, and PDA's
like the <a href="http://www.apple.com/newton/newton.html">Apple
Newton</a> and <a href="http://www.usr.com/palm/500.html">Palm Pilot</a>.
In general, we care about devices that have any of the following
characteristics: 
<ul>
  <li> less CPU power and memory than a laptop,
  <li> smaller screens than a laptop,
  <li> slower connectivity than desktop (typically 9600 baud or less).
</ul>

<p>
The foundation of our approach is proxy-based computing: using resources
on a desktop proxy server to address variation in the network, client
hardware, and client software. Smart proxies allow us to build
lightweight client applications that intelligently adapt to changing
network conditions.  If you're interested in one of the positions below,
feel free to come by for a demo of our stuff, or try <a
href="http://transend.cs.berkeley.edu">TranSend</a>, a recently
deployed, publicly available demo that shows off the technology.
</p>

<p>
We work closely with the <a
href="http://daedalus.cs.berkeley.edu">Daedalus/BARWAN</a>  project,
which is working on 
various network-level 
mobile computing projects. 
</p>

<hr>
<h2>General notes about working with us</h2>

See which of the projects (if any) interest you; <a
href="mailto:fox@@cs.berkeley.edu">email me</a> a pointer to your resume,
code samples, or any other online info that would be useful; and I'll
email you to set up an in-person meeting.  (This isn't meant to be
high-stress in the sense that job interviews are, but we (the group)
need to get a sense of what skills everyone has so we can come up with
mutually beneficial arrangements.)<p>

If it matters strongly to you whether you get pay vs. credit, please let me
know up front.  This isn't likely to affect the hiring decision,
but it does affect budget planning, etc.<p>

We currently have something of a space crunch -- we probably won't be
able to give you dedicated office space this semester.  You will either
share office space (and possibly machines) with others, or you can work
in various shared labs (instructional labs, Network Lab, even from
home).  We <i>may</i> have one or two laptops that can be configured
with Linux, to be used as loaners (let's hear it for the mobile workforce).


<hr>
<h2>Various projects, in approximate  "critical path" order:</h2>
<ul>
  <li> <a href="#web">Be our Webmaster/Webmistress</a>
  <li> <a href="#prefs">User Preferences Toolbar</a> for
       <a href="http://transend.cs.berkeley.edu">TranSend</a>
  <li> <a href="#sql">SQL Client</a> for
       <a href="http://transend.cs.berkeley.edu">TranSend</a>
  <li> <a href="#graphic">Graphics Experts Needed</a>
  <li> <a href="#wb">Shared whiteboard for Palm Pilot</a>
  <li> <a href="#kerb">Productize Kerberos.pm (Kerberos for Perl 5)</a>       
       
</ul>

<DL>
       <a name="web">
  <dt><br><strong>Be Our Webmaster/Webmistress</strong>

  <dd><br>Be honest: our web pages need a lift.  They're informative
       enough, but they are at best unexciting and at worst
       aesthetically foul.  Help us do something about it.  We'll
       provide all the tools you need and your choice of machines to use
       them on (Unix, Mac, Windows).

       <br><strong>Requires:</strong> Expertise using your choice of Web
       publishing software (Netscape Gold, PageMill, etc.) including
       importing/converting all kinds of graphics and report formats
       (PostScript, PDF, HTML, etc.)  Graphic design or art experience a
       <b>huge</b> plus.  To apply, send us URL's pointing to samples
       of your work.


       <A NAME="gui">

  <DT><BR><STRONG>User Preferences Toolbar for <i>TranSend</i></STRONG>
  <DD><BR>

       If you use a modem and you haven't tried <i>TranSend</i>, our Web
       proxy, you should.  You'll find it speeds up your Web browsing
       quite noticeably. Then come back to this page to read about how
       you can help us make it even better.<br>

       As you can see, <i>TranSend</i> has a simple user-preferences
       interface now (click on the "TS" icon if you haven't tried that
       feature yet).  We have some ideas on
       how we could have a much slicker  interface, by using JavaScript
       and Java to
       extend the interface right into the browser. <br>

       To get an idea of the type of interface we'd like to have, go
       to <a href="http://www.espn.com">www.espn.com</a> and click
       "Display on desktop"; you must have JavaScript enabled.

  <DD><BR><STRONG>Requires:</STRONG>

       Some experience with, or at least strong opinions about, "usable"
       UI's for non-computer users; some C programming experience (sockets
       helpful but not required); Web publishing, including HTML forms,
       forms and JavaScript. CS162 and/or CS169 a big plus.

       <a name="sql">
  <dt> <br><b>SQL Client for TranSend</b>
  <dd> One of <a href="http://transend.cs.berkeley.edu">TranSend's</a>
       neat features is the ability to store per-user customization
       information.  Currently we use Berkeley DB for this, but for a
       variety of reasons we'd  like to move to a "real" database.  We
       think one possible path is:<br>

       <ul>
         <li> Design a data schema using Postgres 95 for storing
              TranSend user profile data
         <li> Get Postgres 95 up and running
         <li> Write the SQL Client glue that attaches to the TranSend
              Front End, the component that is supposed to access the
              customization profiles
         <li> Integrate Postgres' fault tolerance and failure management
              mechanisms with those built into TranSend
       </ul>

       <br><b>Requires:</b> C or C++ experience, preferably CS 169 or
       equivalent; some experience with Unix tool chain (make, etc.);
       SQL useful but not required.

       <A NAME="graphics">
  <DT><BR><STRONG>Graphics Experts Needed</STRONG>
  <DD><BR>

       Is a particular image best encoded as GIF, JPEG, or some other
       format?  Can you find which particular regions of an image
       contain the most detail and are worthy of higher resolution, and
       encode the rest at lower resolution?  Can you predict how much an
       compression improvement we could get by recoding a particular
       image as GIF or JPEG (with varying quality settings or varying
       the size of the colormap)?  If you do, or you think you can
       figure it out, email us to find out how the ability to do these
       things can change the Internet.  Here's a hint: we'll be able to
       bring to bear all of your observations about the above problems,
       <i>without</i> requiring servers to change the way they publish
       their content.

  <DD><BR><STRONG>Requires:</STRONG>

       Be a graphics wizard and familiar with basic mathematical
       modeling.  Enough said. 

<!--
       We have designed an API called GloMop that allows mobile-aware
       clients to communicate with our modular proxy using a lightweight
       protocol and rich programming model.  Currently, the
       API is implemented as additions to Tcl/Tk, and partially
       implemented on the Sony MagicLink. <br>
       You will implement the API on a PDA of your choice (or maybe
       ours), and if you like, develop an application that runs on the PDA and
       shows off the API; see below.  A major role of the API is to
       enable development on small wireless devices, so this project
       could have extremely cool demo value as well.<br>

       If you're a Java fan, we also need a Java implementation
       of the GloMop API (i.e. a Java class implementing the GloMop
       application support functionality).  <br>

       We have a
       <a href="http://www.apple.com/newton">Newton</a>,
       a <a href="http://www.usr.com/palm/500.html">Pilot</a>,
       a <a
       href="http://www.cs.berkeley.edu/~gribble/magiccap/magiccap.html">Sony
       MagicLink</a>, and an
       <a href="http://www.geoworks.com/omnigo/">HP OmniGo</a>, and the
       software development environments for all of them.  We also have
       working relationships with <a
       href="http://www.genmagic.com">General Magic</a> and <a
       href="http://www.geoworks.com">GeoWorks</a>, among other companies.
       We have a head start on developing for the Newton and MagicLink,
       and are enthusiastic to start Pilot development.  <b>Publication
       opportunity.</b> 

  <DD><BR><STRONG>Requires:</STRONG>

       Strong interest in mobile and wireless computing, PDA's, and
       similar geek toys; CS 169 or equivalent plus
       excellent programming skills in a wide variety of languages and
       environments; experience with some GUI scripting or programming,
       such as Tcl/Tk, X/Motif, MacOS, etc.; ability to inhale
       documentation for new 
       programming environments to get up to speed quickly.  

-->
       <a name="wb">
  <DT><BR><B>Shared virtual whiteboard</b>, like the MBone <i>wb</i>
       program, but to run on PDA's.  Our strategy would be to
       <i>proxy</i> the application: part of the code (the part you'll
       write) runs at the client, most likely a Palm Pilot device with a
       wireless modem, and the remainder runs at the TranSend proxy.
       <b>Variation:</b>
       Shared map: various wireless-PDA-carrying people playing
       "manhunt" or paintball, and using a shared map and shared
       whiteboard to plot strategy.  This particular demo would
       have exceedingly high visibility to our Government sponsors.
       If you're into serious hacking to make way cool applications work
       on the latest toys, you'll get into this.  <b>Note:</b> This
       project may depend on the work of other graduate students working
       on TranSend support for collaborative applications.

  <dd><br><strong>Requires:</strong>

       CS162 and/or CS169, or equivalent software design experience.
       Hacking experience and 
       facility with new languages and systems a plus.  Experience with
       graphical interface programming (Tk, Xt, Motif) a big plus, since
       a major component of most PDA programming environments is
       event-based semi-object-oriented GUI programming.


       <a name="kerb">
  <DT><BR><STRONG>Productize Kerberos.pm</STRONG>

  <DD><BR>
       
       We have developed a lightweight indirect authentication scheme,
       called <a
       href="http://www.cs.berkeley.edu/~fox/charon.html">Charon</a>,
       designed specifically to allow "lightweight" mobile clients to
       use Kerberos for authentication.  To do this, we had to make the
       Kerberos library <i>libkrb</I> accessible from Perl 5.  The
       current implementation of the Perl 5 Kerberos routines
       implements some but not all of the client features of Kerberos.
       We'd like you to implement the remaining ones, to make the
       software ready for Internet distribution.  In addition, we'd like
       to implement cross-domain authentication for users who roam
       across administrative domains; e.g. to let you authenticate
       yourself as a mobile user when visiting Stanford, on the strength
       of your authentication credentials from Berkeley.    There is a
       fair amount of interest in this area and we are close to having a
       practical and usable implementation of this.  <b>Internet
       publication and net.fame opportunity.</b>

  <DD><BR><STRONG>Requires:</STRONG>

       Nontrivial experience programming in Perl 5 (not Perl 4) and C.
       Knowledge of
       Kerberos helpful but not required; we can teach you what you
       need along the way.
</DL>
<HR>
<H3><CENTER><A HREF="http://ugmmac2.eecs.berkeley.edu/core/">Back
to <I>CORE</I>
Home</A></CENTER>
</H3>
</BODY>
</HTML>
@


1.5
log
@*** empty log message ***
@
text
@d34 2
a35 1
<p>That's the question our research addresses, and we think we have the
d56 3
a58 1
feel free to come by for a demo of our stuff!
d63 2
a64 1
href="http://daedalus.cs.berkeley.edu">Daedalus/BARWAN</a>  project, which is working on
d70 23
d95 5
a99 1
  <li> <a href="#prefs">User Preferences Interface for Web Proxy</a>
d101 1
a101 3
  <li> <a href="#glomop">GloMop API for Palm Pilot</a>
  <li> <a href="#pda_apps">Web Browser and other apps for Palm Pilot</a>
  <li> <a href="#web">Be our Webmaster</a>
d141 3
a143 2
       To get an idea of the type of interface we'd like to have, check
       out <a href="http://
d152 1
d239 1
a239 1
       
@


1.4
log
@*** empty log message ***
@
text
@d12 3
a14 5
  <dd><STRONG>Supervising faculty:</STRONG>

        <A HREF="http://www.cs.berkeley.edu/~brewer">Prof. Eric Brewer</A>

  <dd><STRONG>Graduate student contact:</STRONG>
d16 1
d19 1
a19 1
  <dd><STRONG>Time commitment:</STRONG>
d24 1
a24 2
  <dd><STRONG>Compensation:</STRONG>

d26 2
d29 4
a32 6
</dl>
</p><HR>

<p>How do you check email, surf the Web, and "stay connected" when using
a small mobile device with wireless access rather than a desktop PC with
wired access?</p>
d35 2
a36 1
right answer.  Our research results apply to
d38 1
a38 1
href="http://www.geoworks.com/htmpages/9000.html">Nokia 9000</a>, PDA's
d40 3
a42 2
Newton</a> and <a href="http://www.usr.com/palm/500.html">USR Pilot</a>,
and regular laptops.  In general, we care about devices that have
d78 17
d96 2
a97 1
  <DT><BR><STRONG>User Preferences Interface for <i>TranSend</i></STRONG>
d101 2
a102 1
       proxy, you should.  Then come back to this page to read about how
d106 4
a109 2
       interface now.  We have some ideas (and are looking for more) on
       how we could have a really awesome interface, by using Java to
d112 2
a113 26
       You'll own the design and implementation of this new user
       interface, work with other graduate students and professors whose
       specialty is UI, 

       We'll describe to you what kinds of preferences can be set, what
       the effect of those preferences is on the proxy's behavior, etc.
       You'll come up with three things:
       <ul>
         <li> A design for a client-side interface: how will users
              manipulate their preferences?  This might be a forms-like
              interface, a "buttons and menus" interface, pop-up
              controls available from any Web page, etc.
         <li> An implementation of the client-side interface.  This will
              probably  be an HTML form, Java or JavaScript
              applet, browser plug-in, or whatever you feel is most
              appropriate for implementing your design.  (Since we'd
              like the code to work on Windows, Mac and Unix platforms,
              a standalone application is probably out, and plug-ins are
              OK but will require more work than the other methods.)
         <li> The server-side (proxy-side?) code which receives the
              output of the client-side interface and interacts with the
              proxy's Preferences Manager to get and set preferences
              information.  (The Preferences Manager is already
              implemented and there is a C function call API for it, but
              no client-side code to actually manipulate the prefs.)
       </ul>
d118 25
a142 4
       UI's for non-computer users; C programming experience (sockets
       helpful but not required); experience using whatever tools (HTML
       forms, Java, etc.) you plan to use for your client-side code.
       CS162 and/or CS169 a big plus.
d166 1
a166 54
       <A NAME="gui">
  <DT><BR><STRONG>Tcl/Tk "Meta-GUI" Monitor</STRONG>
  <DD><BR>

       We have built several distributed systems (and are building
       another) that would really benefit from having a nice graphical
       user interface to monitor and perhaps control the system's
       behavior.  Rather than writing a separate
       monitor/controller for each system we build, we have a simple
       prototype of a "meta-monitor" that can accept a
       specification of the values to be monitored, and a specification
       of how to update those values and draw them in various windows.  For
       example, one monitored value might be updated by just redisplaying
       the new numerical value; another might be updated by adding a bar
       to a continuously-scrolling bar graph (like <i>xload</i>); yet
       another might be updated by redrawing a single bar in place, like
       the peak meters on audio equipment.  Messages from each monitored
       application specify both the new value and the updating method.<br>

       If you're into Tcl/Tk and user interfaces, this position is for
       you.  There's no question that this tool would be very
       well received by other projects as well, so your potential for
       local fame is unlimited.  <tt>:)</tt>  Our  prototype works fine but
       it needs more features, snappier appearance, and (most importantly)
       the ability to control as well as monitor other programs.  There is
       also a C library that other programs can link
       to if they want to talk to the monitor application; this could
       use some spiffing up as well.

  <DD><BR><STRONG>Requires:</STRONG>

       CS160 or strong Tcl/Tk experience; some experience with
       interprocess communication very helpful, e.g. using Tcl-DP or Perl or
       whatever.  CS162 helpful but not required.

<a name="javadist">
  <dt><br><strong>Java Distillation Engine Support</strong>
  <dd><br>
       We are very close to deploying a highly scalable Web proxy
       service that performs arbitrary transformations of Web content
       for users.  (The motivation for and benefits of such a system are
       described <a
       href="http://HTTP.CS.Berkeley.EDU/~fox/glomop/overview.html">here</a>.)
       We would like to enable individual users to "upload" their own
       transformations written in Java.

  <dd><br><strong>Requires:</strong>
       Very strong Java experience and significant C/C++ experience;
       CS162, CS169 or equivalent.

<a name="glomop">
  <DT><BR><STRONG>GloMop API for Java or PDA's</STRONG> 
  <DD><BR>

d207 12
a218 34

       <a name="pda_apps">
  <dt><br><strong>PDA Client Apps: Browsers, Collaboration...</strong>
  <dd><br>

       Using the GloMop API on a PDA or portable device of your choice,
       build a cool proxied application, that is, an application whose
       functionality is partitioned between the client PDA and the
       <i>gmproxyd</i> proxy toolkit.  Here are some suggestions, all of
       which we have a good idea how to actually implement:

       <ul>
         <li> Simple Web browser with forms support <i>and graphics</i>
         <li> Email that works with your desktop email
         <li> Group calendar.  The MIT <a
              href="http://www-lcs.mit.edu/rover/">Rover</a> project has
              a proxy-side toolkit that you could use for this.  You
              would leverage the built-in calendar app on the PDA of
              your choice.  We already have code for Unix that can read
              the databases on the Pilot PDA.  All users could then carry other
              users' calendars 
              and schedule them for meetings, and automatically receive
              updates when other people schedule them for meetings.
         <li> Shared virtual whiteboard, like the MBone <i>wb</i>
              program.  We have a strategy for doing this, and access to
              the existing source code you could use.  <b>Variation:</b>
              Shared map: various wireless-PDA-carrying people playing
              "manhunt" or paintball, and using a shared map and shared
              whiteboard to plot strategy.  This particular demo would
              have exceedingly high visibility to our Government sponsors.
         <li> Simple "talking head" video to a PDA, over a wireless
              network.
       </ul>

d220 3
a222 1
       on the latest toys, you'll get into this.
d226 2
a227 2
       Same as for "GloMop API" above, plus CS162 and/or CS169, or
       equivalent software design experience.  Hacking experience and
a232 2
       <a name="web">
  <dt><br><strong>Be Our Webmaster/Webmistress</strong>
a233 36
  <dd><br>Be honest: our web pages need a lift.  They're informative
       enough, but they are at best unexciting and at worst
       aesthetically foul.  Help us do something about it.  We'll
       provide all the tools you need and your choice of machines to use
       them on (Unix, Mac, Windows).

  <dd><br><strong>Requires:</strong> Expertise using your choice of Web
       publishing software (Netscape Gold, PageMill, etc.) including
       importing/converting all kinds of graphics and report formats
       (PostScript, PDF, HTML, etc.)  Graphic design or art experience a
       <b>huge</b> plus.  To apply, send us URL's pointing to samples
       of your work.

<!--
  <DT><BR><STRONG>Various improvements to <i>gmproxyd</i></strong>
  <DD><BR>

       <i>Gmproxyd</i> is the modular proxy toolkit, which we use as a
       vehicle for exploring the fringes (so to speak) of what proxies
       can do.  We have been able to use this same toolkit to build a
       web proxy, a web surfer for a TV set-top box made by <a
       href="http://www.wink.com">one of our industrial sponsors</a>, an
       image browser, and an email reader.  We are planning to add
       text-to-speech and a telephony interface so you can direct it to read
       you your email using a touch-tone phone.  <br>

       But some performance improvements are needed: the latency of
       fetching things from the Internet needs to be hidden.  Currently
       there is too much explicit serialization of parallelizable
       things.  To paraphrase Jean-Luc Picard, "Make it parallel."<br>

  <dd><br><strong>Requires:</strong>

       Solid Perl 5 knowledge, CS 162.  CS 169 helpful.
-->
       
d265 1
a265 2
<H3><CENTER><A
HREF="http://www-inst.eecs.berkeley.edu/~csgsa/CORE/">Back
@


1.3
log
@*** empty log message ***
@
text
@d70 2
a71 4
  <li> <a href="#javadist">Java Distillation Engine</a>
  <li> <a href="#gui">Tcl/Tk "Meta-GUI" Monitor</a>
  <li> <a href="#glomop">GloMop API for PDA's</a>
  <li> <a href="#pda_apps">Cool applications for PDA's</a>
d79 1
a79 1
  <DT><BR><STRONG>User Preferences Interface for Web Proxy</STRONG>
d82 12
a93 13
       Our <a href="pythia.html">Pythia web proxy</a> (described in
       detail in our <a
       href="http://www5conf.inria.fr/fich_html/papers/P48/Overview.html">WWW
       96 paper</a>) allows each user to set various personal
       preferences which control the behavior of <a
       href="example.html">distillation</a> (prefer more colors to
       better resolution, etc.)  Preferences are set by submitting a simple
       HTML form.  Our high-performance proxy, soon to be
       deployed to UC Berkeley Home IP users, is much more flexible in
       terms of what preferences can be set, and since it is intended to
       be used daily by non-computer types, the preferences setting
       interface must be easy to use and "graceful" (in the UI
       sense).<br>
@


1.2
log
@*** empty log message ***
@
text
@d69 1
d128 22
@


1.1
log
@Initial revision
@
text
@d66 1
a66 1
<h2>Various projects, in approximate priority order:</h2>
d68 2
a70 1
  <li> <a href="#javadist">Java Distillation Engine</a>
d80 49
d139 1
a139 1
       of how to update those values and draw them in a window.  For
a146 4
       The
       monitor communicates with various programs in our
       distributed system using IP multicast, which we've incorporated
       into Tcl/Tk.
d148 1
a148 1
       you.  There's no question that a tool like this would be very
d150 6
a155 5
       local fame is unlimited.  :)  Our  prototype works fine but
       it needs more features, snappier appearance, and (most important)
       the ability to control as well as monitor other programs.  We
       also need a standardized C library that other programs can link
       to if they want to talk to the monitor application.
@


1.1.1.1
log
@
@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     98.11.08.11.36.36;  author daw;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     98.11.08.11.36.36;  author daw;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@Need to write up my work on solving generalizations of the birthday paradox.

k-way collisions:
	Find x_1,..,x_k with h_1(x_1) = ... = h_k(x_k).

k-way sums:
	Find x_1,..,x_k with h_1(x_1) + ... + h_k(x_k) = 0
	for some group operation +.  (Or = c, for some constant c.)


Motivations:
* Chosen-input attacks on the RSAREF PRNG.
* Rivest and Shamir's Micromint micropayment scheme.
* TLS's PRF.  It's listed as a keyed PRF; it combines MD5 and SHA in a
  way that is supposed to be at least as secure as the stronger of the two.
  But if used in a different mode, you can find collisions in it too quickly
  by solving the ``4-way sums'' problem.
* Finding low-weight parity checks [i.e. low-weight polynomial multiples of
  a given polynomial f over GF(2)], for use in fast correlation attacks
  on stream ciphers.  We take h_j(n) = x^n mod f(x), where f \in GF(2)[x];
  solutions to ``k-way sums'' yield weight k multiples of f.  See e.g.
	M. Salmasizadeh, J. Golic, E. Dawson, L. Simpson.
	``A Systematic Procedure for Applying Fast Correlation Attacks to
	Combiners with Memory.''  SAC'97.
	http://www.scs.carleton.ca/~sac97/program/FinalPapers/paper31.ps

	W. Meier, O. Staffelbach.  ``Fast correlation attacks on certain
	stream ciphers.''  J. Cryptology, 1(3):159--167, 1989.
* Breaking the Korean DSA.  See
	http://crypt.future.co.kr/~chlim/pub/kcdsa.ps
  Look for collisions in the mapping
	f(K,M) = (K - (h(G^K mod P) \xor h(Z||M))) mod Q.
  This can be done in cases where we assume that Q is larger than the
  output size of the hash function h, so that reduction mod Q is not an
  issue.  Then we find many values of (K,M) such that f(K,M) = 0 mod 2^m,
  for small m (say, (lg Q)/3 or 2(lg Q)/3; optimize) with a lookup table:
  note that
  	f(K,M) = 0 mod 2^m  ==>  K \xor h(G^K mod P) = h(Z||M) mod 2^m,
  so we store K \xor h(G^K mod P) mod 2^m in a table for many K, and
  then search for h(Z||M) mod 2^m in the table for many M.  Once we
  have many solutions to f(K,M) = 0 mod 2^m, look for a pair (K,M),(K',M')
  such that f(K,M) = f(K',M') by doing a birthday search on the top
  (lg Q)-m bits.
* Breaking commutative ciphers.  We know that if DES formed a group,
  we could break it in 2^{28} time.  Now, let's consider a commutative
  cipher (e.g. DES in OFB mode).  Clearly if that cipher formed a
  group, we could break it in 2^{28} time by a meet-in-the-middle
  attack.  However, k-way sums can be used to break it even more
  quickly (e.g. in 2^{56/3} time for 4-way sums, etc.)
@


1.1.1.1
log
@
@
text
@@

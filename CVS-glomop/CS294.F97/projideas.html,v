head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	97.11.05.09.25.26;	author fox;	state Exp;
branches;
next	1.7;

1.7
date	97.10.21.19.01.12;	author fox;	state Exp;
branches;
next	1.6;

1.6
date	97.10.14.18.35.03;	author fox;	state Exp;
branches;
next	1.5;

1.5
date	97.09.29.21.27.54;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	97.09.19.17.01.24;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	97.09.04.00.46.47;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	97.09.03.20.22.35;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.07.30.02.25.23;	author fox;	state Exp;
branches;
next	;


desc
@@


1.8
log
@*** empty log message ***
@
text
@<html> <head>
<title>Internet Services Project Ideas</title>
</head>

<body>
<h1>Internet Services Project Ideas</h1>

<dl>
<!--
  <dt> TranSend Infrastructural Improvements
  <dd> Details TBD.  Examples include:
       <ul>
         <li> Arguments registry
         <li> Code modules registry
         <li> Notification manager
         <li> Various improvements to Monitor
       </ul>
-->
  <dt> <b>Real Web Traffic Lights</b>

  <dd> Suppose you had a database which, given an IP address or
       hostname, could return a scalar estimating the latency and/or
       throughput to that site (in some sense, how "far away" it is).
       You could annotate links by inserting icons next to each one
       based on the database's estimate.  Similar projects have used
       traffic lights and "smileys" to indicate how painful it would be
       to fetch a link.  This would be interesting because the estimate
       could account for the client's effective throughput as well as
       the server latency, so (e.g.) modem users would see different
       icons than would Ethernet users.<p>
       We have software developed at UCB and IBM Watson that provides
       the necessary performance data for this.  <a
       href="http://www.cs.berkeley.edu/~stemm/">Mark Stemm</a> is the
       contact person for this software (<a
       href="mailto:stemm@@cs.berkeley.edu">email him</a> for details).

  <dt> <b>Cache scavenger</b>
       
  <dd> An agent periodically runs in the background, walking through the
       cache.  It adjusts its level of activity based on other "busy
       indicators" in the system, so that it uses only background
       cycles.  It spends time looking for "interesting" things on
       behalf of one or more users (you can register and unregister
       "queries" with it).  When it finds something interesting in the
       cache, it brings it to the user's attention.<p>

       It could also spontaneously offer links to "distressed
       merchandise" (pages that haven't been
       viewed in a long time); could be useful to catalog retailers, etc.

  <dt> <b>Location-based services</b>
  <dd> Integrate user's location information into map services, location
       based or location restricted searches, "email following" (send my
       email to my pager if I am not in Soda Hall or at my home), etc.
       Foundation layer of software deduces your location based on info
       from the device; for
       nonmobile devices (like your workstation) this is IP address, for
       roaming
       devices (like Metricom or GPS rcvr) the device itself can figure
       this out.  Then requests can be customized based on the proxy's
       best guess of where you are geographically.

  <dt> <b>Groupware</b>
  <dd> Dr. Murray Mazer from the Open Group will be talking about
       their experience building Web-centric groupware apps on Nov. 10.
       This is a great area we'd love to see projects in.  If you're
       interested, check out 

  <dt> <b>Real Biology Problems (from a biology colleague of Eric's:)</b>

  <dd>  Examine how
       much the pattern of DNA substitution varies from one site to another.
       There is a simple likelihood ratio test that can be performed to
       test the null hypothesis that the substitution pattern does not
       vary among sites.  Calculating the likelihood under the null
       hypothesis is trivial.  Calculating the likelihood under the
       alternative hypothesis will require Monte Carlo integration (of
       a 7 dimensional intergral).  I think that this is possible and I
       am currently writing the program.  However, I suspect that the
       program will be slow and will benefit from distribution over the
       SUN Ultrasparcs.  I am writing the code in such a way that it
       should be fairly easy for you to parallelize it.  I would also
       like your suggestions for numerical optimization.<p>
       <b>Armando sez:</b>  A great opportunity here is to try to fit
       this style of computation (highly parallelizable, soaks up
       constant background cycles, modest state-management needs) into
       the TACC framework.  Other examples of problems that could be
       implemented this way include cryptographic key search and ray
       tracing. 

  <dt> <b>Multicast Push Module</b>

  <dd> With all the hype about Push Technology, too bad it mostly isn't
       Push at all, but controlled pull.  Real push might involve
       multicasting the actual web content, storing it locally, and then
       notifying the browser to render it.  The <a
       href="http://www-mash.cs.berkeley.edu">MASH</a> Toolkit already
       includes libraries to help do these things, and we have a module
       for adding MASH-based aggregators to TranSend.  Use it to
       implement a compelling push-based application (and show that the
       TranSend transformation mechanisms allow the application to be
       delivered to a range of platforms, including the Palm Pilot using
       our soon-to-be-released Wing Man browser). <p>

       For example (thanks to Prof. B.R. Badrinath for this one): There
       is a company (www.onsale.com) that is doing on-line auctions. People all
       around the world subscribe to items that they may want to purchase if it
       went on the auction block.  As soon as an item is ready for bidding,
       notify interested users by PUSHIng the information to bidders, PUSH
       progress updates etc.

  <dt> <b>Math Typesetter for the Web</b>
  <dd> TeX in, HTML with embedded GIFs (or similar) out.  'Nuff said.

  <dt> <b>"Authenticated actions" and environment for submitting distillers</b>
  <dd> (description TBD)

  <dt> <b>Serverless Group Calendar</b>
  <dd> (description TBD)

  <dt> <b>"Unified messaging"/IP Voicemail service (Prof. B.R. Badrinath):</b>
  <dd> Assume that users can call using an internet phone
       to a voice mail box. Owners of the voice mail
       box must be able
       to retrieve the voice mail from hand held devices connected by
       low bandwidth links. The voice mail box should be designed
       in such a way the the contents can be transformed to be 
       retrieved by resource constrained devices (low power and low
       bandwidth links).  Take into consideration that the input
       modality for retrieving might be just a cellular phone, not a
       "traditional" TCP/IP device.
       Extensions include transcoding from
       telephone voice mail box to Internet voice mail box.  We can
       obtain commercial software for some of these modules if
       necessary. 

</dl>

<hr>
<address><a href="mailto:fox@@cs.berkeley.edu">fox@@cs.berkeley.edu</a></address>
<!-- hhmts start -->
<!-- hhmts end -->
</body> </html>
@


1.7
log
@*** empty log message ***
@
text
@d9 1
d18 2
a19 5

  <dt> Add support for authentication using SSL or similar
  <dd> 

  <dt> Web Traffic Lights
d32 4
a35 1
       the necessary performance data for this.
d37 1
a37 1
  <dt> Cache scavenger
d51 19
a69 1
  <dt> Real Biology Problems (from a biology colleague of Eric's:)
d91 1
a91 1
  <dt> Multicast Push Module
d112 7
a118 1
  <dt> Serverless Group Calendar
d121 1
a121 1
  <dt> "Unified messaging"/IP Voicemail service (Prof. B.R. Badrinath):
@


1.6
log
@*** empty log message ***
@
text
@d50 22
@


1.5
log
@*** empty log message ***
@
text
@d14 1
d18 3
d32 3
a34 1
       icons than would Ethernet users.
d44 5
a48 1
       cache, it brings it to the user's attention.
a89 4
  <dt> Distressed Merchandise
  <dd> Full description TBD.  Basically, offer links to pages that haven't been
       viewed in a long time.  Could be useful to catalog retailers, etc.

a90 9

<h1>Some Tools to Help You Along (Descriptions coming soon)</h1>

<ul>
  <li> Generic "notification manager": the next time a user visits
       <i>any</i> page, any posted notifications for that user are
       prepended to the top of the page.
  <li> Shared state management via the cache
</ul>
@


1.4
log
@*** empty log message ***
@
text
@d9 8
@


1.3
log
@*** empty log message ***
@
text
@d39 13
a51 4
       includes libraries to help do these things.  Come up with a
       driving application that would really benefit from push, and
       implement it as a Web application by creating a front end MASH
       module.
d56 15
a70 2
  <dt> Real multiple-client email using UIDL
  <dd> (description TBD)
a71 3
  <dt> "Unified messaging" service
  <dd> (description TBD)
       
d74 1
a74 1
       viewed in a long time.
d81 3
a83 1
  <li> Generic "notification" worker
@


1.2
log
@*** empty log message ***
@
text
@d53 4
@


1.1
log
@*** empty log message ***
@
text
@d22 1
a22 1
  <dt> Grep/Crawl
d42 11
a52 1
       module. 
d55 1
a55 1
<h1>Some Tools to Help You Along</h1>
@

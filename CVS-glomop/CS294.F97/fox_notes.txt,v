head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	97.09.29.21.27.47;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	97.09.12.19.36.06;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	97.09.12.19.15.22;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	97.08.11.04.06.15;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.07.30.02.25.20;	author fox;	state Exp;
branches;
next	;


desc
@@


1.5
log
@*** empty log message ***
@
text
@
what's an internet service?
- univ client
- univ **transparently composable** protocol

early examples: dns; rlogin; others?

------

2 axes for each topic: how to build, implications for services

other speakers: akhtar jameel, internet in the car

field trips: machine room, hotbot site, other ideas?

----------------------------------------------------------------------

9/8 proxy vs. server

why hdml will lose

axes of proxy vs server:
- customization level of content
- bandwidth savings
- 

transduction, format conversion, 

rule of thumb: if a service is useful to a small community, users will
pay for it themselves (amortized in infrastructure, or unamortized at
endpoints).  if it's useful to a large community, servers will probably
pay for it (amortized).

tradeoffs:
security
amortized vs unamortized
client cost
content control/censorship

<h2>Possible future problem sets...</h2>
Just a list of problem set ideas for now...<a
href="mailto:fox@@cs.berkeley.edu">email me</a> with suggestions!

<ul>
  <li> Pick 1 or 2 existing Internet services and analyze them with
       respect to the various aspects of service development.  (Do they
       rely on caching, and for what?  What customization if any is
       supported?  Is there evidence for/against scalability of the
       service?  etc.)
  <li> Pick 1 or 2 existing Internet services and describe how you could
       cast them into the TACC model.
  <li> Write a trivial transformer/aggregator that composes with 
       TranSend as a user-specific filter -- possibly even a TranSend
       SDK reimplementation of an existing service on the Web.  Some ideas:
       <ul>
         <li> WordBot
         <li> Calendar aggregator
         <li> <a href="http://www.delorie.com/web/wpbcv.html">Web Page
              Compatibility Viewer</a>
       </ul>
  <li> Write a not-so-trivial transformer/aggregator.  Some ideas:
       <ul>
         <li> HotBot search highlighting: when you click through a URL
              from a HotBot "results" page, the resulting page should
              have the original search terms highlighted.
  <li> Try to crash TranSend or otherwise overload it.
</ul>


----------------

TranSend walkthru:

lib routines: tag iterator, html_regsub, header stuff, prefs form generation
using cache; get, put, query

traffic lights - walk thru example

------

example 1: fixed substitution

- Why did i use html_regsub instead of s///?
- composition using X-Route
- what if i didn't use X-Route?  (inf loop, retry)
- reread database

ex 2: substitution from args

- magified args
- error reporting to both monitor and user

ex 3: change the magified args using a form

- detect "prefs change request" by looking at the arg

ex 4: put the form on every page

ex 5: traffic lights

- cache query
- html tag iterator; look for <A>...</a>
- could also change link color

@


1.4
log
@*** empty log message ***
@
text
@d70 35
@


1.3
log
@*** empty log message ***
@
text
@d39 31
@


1.2
log
@*** empty log message ***
@
text
@d15 24
@


1.1
log
@*** empty log message ***
@
text
@d11 4
@

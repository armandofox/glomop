head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	97.09.12.19.36.10;	author fox;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@#!/usr/sww/bin/perl

#  simple port-listener that works like "nc -l"
#  usage:  perl listen.pl <portnum>

require 5.002;
use Socket;

$port = shift @@ARGV or die "Usage:  perl $0 <portnum>\n";
$proto = (getprotobyname('tcp'))[2];
socket(SOCK, PF_INET, SOCK_STREAM, $proto) or die "socket: $!";
setsockopt(SOCK, SOL_SOCKET, SO_REUSEADDR, 1)
    or warn("Warning: setsockopt SO_REUSEADDR: $!");
bind(SOCK, pack_sockaddr_in($port,INADDR_ANY))
    or die "can't bind to port $port: $!";
listen(SOCK,5) or die "can't listen on port $port: $!";

while (1) {
    warn "[Waiting for new connection]\n";
    accept(NSOCK, SOCK) or die $!;
    ($rport,$ip) = unpack_sockaddr_in(getpeername(NSOCK));
    warn sprintf("[Accepted connection from %s:%d]\n",
                 inet_ntoa($ip), $rport);
    print while <NSOCK>;
    close NSOCK;
    shutdown(NSOCK,2);
    warn "\n[Connection closed]\n";
}
@

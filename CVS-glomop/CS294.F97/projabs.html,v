head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	98.01.13.08.28.17;	author fox;	state Exp;
branches;
next	1.5;

1.5
date	97.12.18.00.29.09;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	97.11.29.03.15.41;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	97.11.12.02.07.03;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	97.11.11.07.18.58;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.11.05.09.25.39;	author fox;	state Exp;
branches;
next	;


desc
@@


1.6
log
@*** empty log message ***
@
text
@<html> <head>
<title>CS 294 Project Abstracts</title>
</head>

<body>
<h1>Project Abstracts</h1>

This page contains short abstracts of each of the CS294-6 Internet
Services projects, and pointers to the project proposals and (soon)
project home pages.

<h2>Demo/poster session: Fri, Dec 12, 1-3 PM in 6th floor Atrium</h2>
<hr>

<h3>Mapamatic! Make Big Maps</h3>

Ngeci Bowman and Rich Fromm<p>


One thing we've found annoying about map services (such as Zip2,
MapQuest, etc) is that, while they allow you to slightly vary the size
of the maps you get, they can never be very large (perhaps 640x480
max). Having a reasonably small size makes sense as you're trying to
locate something, since you'd rather not wait a huge amount of time on
every request. However, once you've pinpointed the area you want, the
service would be much more usable if you could fetch and print out a
large map (like a real map that you might pay money for). Only having
access to small maps diminishes the value of the service.
We plan to write a service that augments the functionality of existing
map services, making it possible to easily get large maps.

<ul>
  <li> <a       href="http://www.cs.berkeley.edu/~bowman/cs294-6/proposal.html">
       Proposal</a>
  <li> <a href="http://www.cs.berkeley.edu/~bowman/cs294-6/writeup.html">
       Writeup</a>
</ul>

<h3>Location Based Services API and Demo App</h3>

Carleton Miyamoto and Helen J. Wang<p>


<ul>
  <li> <a
       href="http://www.cs.berkeley.edu/~helenjw/courses/internet/proposal.html">Proposal</a>
  <li> <a href="http://www.cs.berkeley.edu/~helenjw/courses/internet/paper.ps">Writeup (PostScript)</a>
</ul>

<h3>Multicast Push for TACC</h3>

Tina Wong<p>

This project designs a multicast push service within the TACC
framework. It allows pushing of web content to a variety of
end-user applications without modifying the origin web
server.

<ul>
  <li> <a
       href="http://www.cs.berkeley.edu/~twong/services-proposal.html">Proposal</a>
  <li> <a href="http://www.cs.berkeley.edu/~twong/services.html">Writeup</a>
</ul>

<h3>Safe Worker Upload and Execution for TACC</h3>

David Wagner<p>

Many sophisticated users might want to upload personal transformation
and aggregration agents into a TACC cluster; this would allow TACC services
to support customization and personalization to very high degrees.
However, this feature introduces many security issues.  This project
will extend the TACC toolkit to securely handle uploaded, untrusted workers.

<ul>
  <li> <a
       href="http://www.cs.berkeley.edu/~daw/inet-svcs/proposal.txt">Proposal</a>
  <li> <a
       href="http://www.cs.berkeley.edu/~daw/inet-svcs/writeup/">Writeup
       in HTML</a>
  <li> <a
       href="http://www.cs.berkeley.edu/~daw/inet-svcs/writeup.ps">Writeup
       in PostScript</a>
</ul>

<h3>Group Annotation</h3>

Marcel Kornacker and Ray Gilstrap<p>

Annotation is an important process both for personally gaining an understanding
of published information and also for sharing thoughts on it between a group of
people. Currently, the WWW is not equipped to support this process: HTML does
not recognize annotations and HTTP does not support client-generated
annotations. The annotation service we are proposing is designed to allow
personal and group-readable annotations for HTML documents that are accessible
via the WWW.

<ul>
  <li> <a
       href="http://www.cs.berkeley.edu/~marcel/cs294-6/project-proposal.html">Proposal</a>
  <li> <a href="http://kemet.berkeley.edu/ratogi/class/cs294-6/">Writeup</a>
</ul>

<h3>WebShell</h3>

Mybrid Spalding<p>

Filtering and aggregating web pages to create smaller views is very useful
for managing information on the web. Indeed, one can think of Alta Vista
[sit.], Hot Bot[sit.], and other popular search engines as very specific
web shells that do a mongo recursive "grep <my filter words>" of the
entire web and then presenting the results. In this paper we present a
mechanism useable by experts for filtering and aggregating web pages at
the local level, a client/proxy based WebShell

<ul>
  <li> <a
       href="http://www.cs.berkeley.edu/~mybrid/webshell_proposal.html">Proposal</a>
  <li> <a href="http://www.cs.berkeley.edu/~mybrid/webshell/">Writeup and home
       page</a>
</ul>

<h3>Colibrary</h3>

Angela Schuett<p>

Video on demand servers can also benefit from the structured service of
the TACC system.  Our server will route RTSP (the streaming media
version of HTTP) requests to workers, who can retreive data from disk,
transform data, and stream it onto the network.

<ul>
  <li> <a
       href="http://www.cs.berkeley.edu/~schuett/colibrary.html">Proposal</a>
  <li> <a href="http://www.cs.berkeley.edu/~schuett/IS.html">Writeup</a>
</ul>

<h3>Cha-Cha: Combining Browsing and Searching</h3>

Mike Chen and Jason Hong<p>

   Currently, there are two methods for exploring hypertext spaces: browsing
   and searching. Browsing and searching complement each other very well, but 
   existing systems for exploring hypertext spaces separate these two 
   modalities. Cha-Cha is a system that integrates these two modalities in
   specific domains, allowing a richer and better method for navigating 
   hypertext spaces. 

<ul>
  <li> <a href="http://www.cs.berkeley.edu/~jasonh/cha-cha/">Home page</a>
  <li> <a href="http://www.cs.berkeley.edu/~jasonh/classes/cs294-6/final_writeup.html">Writeup (HTML)</a>
</ul>

<h3>NotePals Support Using TACC</h3>

Jimmy Lin (working with Richard Davis in CS 262)<p>


NotePals is a program that allows users to take notes using a PalmPilot.
All of the notes for one meeting in a project are uploaded to a
repository, when the PDAs are synchronized with PCs. The current browser
to view the notes in the repository is rudimentary, allowing very simple
filtering. Several possible embellishments to the browser include allowing
notes for a meeting to reside on more than one server, with the browser
viewing the notes as one entity, or caching views so that response time is
faster. These embellishments can be implemented using TACC.

<ul>
  <li> <a
       href="http://www.cs.berkeley.edu/~jimlin/cs294-6/proposal.html">Proposal</a>
  <li> <a href="http://www.cs.berkeley.edu/~jimlin/cs294-7/cs294-6.html">Writeup</a>
</ul>

<h3>NetTV</h3>

Micah Peng<p>

NetTV is modeled after the traditional television model for content
delivery where users passively receive information over NetTV
channels. Each NetTV channel is fundamentally a multicast group - NetTV
servers (i.e. the content providers) periodically multicast their
dynamic content over a particular channel and users receive the
information be selecting the channel (i.e. joining the group). More
robust than basic network television or even cable television, Network
TV channels can be created for virtually any interest area.  Content
providers could use the Network TV infrastructure to deliver dynamic
content that does not require active (interactive) Web use. A majority
of timely dynamic content falls into this category -- news, stock
quotes, weather, sports scores, etc. These are fundamentally passive
since the content does not change based on user actions.

<ul>
  <li> <a href="http://www.cs.berkeley.edu/~mpeng/cs294-6/NetTV.html">Writeup</a>
</ul>

<h3>MASH Meets TranSend: <i>TopGun MediaBoard</i>, a shared whiteboard for the 
Palm Pilot</h3>

Yatin Chawathe (in association with Steve Fink for 'CSCW Using CSCW')<p>

The <a href="http://mash.cs.berkeley.edu/mash/">MASH Research project</a>
at UC Berkeley is developing a scalable multimedia architecture for
distributed multimedia collaboration in heterogeneous environments. One
of the principal research agendas in the MASH project is to design, develop
and deploy multicast-based collaborative applications over the
Internet. <p>

This project is looking into avenues of leveraging off the work done on
the TACC programming model as part of the TranSend infrastucture for
<a href=http://www.cs.berkeley.edu/~yatin/papers/sosp97.ps.gz>
Internet services</a> and integrating it with the MASH architecture to
build cool multicast-based infrastructure services. The main application we 
are investigating for this class is a shared whiteboard tool for a hand-held 
device such as the <a href="http://www.3com.com/palm">Palm Pilot</a>.

<ul>
  <li> <a href="http://HTTP.CS.Berkeley.EDU/~yatin/courses/isvc/proposal.html">
     Proposal</a>
  <li> <a href="http://HTTP.CS.Berkeley.EDU/~yatin/courses/isvc/report/">
     Writeup and Home page</a>
</ul>

<h3>Dynaglyph: A Dynamic Logging System</h3>

Ben Zhao and Kirby Zhang<p>

I propose to design and implement Dynaglyph, a TACC service which will run as
a piped process to dynamically analyze web traffic on a web server or proxy.
Currently, web servers and proxies store their logs of HTTP documents in
their entirety, taking up large amounts of storage on the server.  The result
is an incredibly large database that must be searched extensively to extract
useful information.

<ul>
  <li> <a href="http://www.cs.berkeley.edu/~ravenben/stuff/INetProp">Proposal</a>
  <li> Home page
</ul>

<h3>DTACC: Distributed TACC</h3>

Fred Wong and Chad Yoshikawa<p>

Today on the web, code can be used to extend both the client and the
proxy.  Client code, in the form of Java, can be downloaded from the
server into the web browser in order to extend the capability of the
browser.  Proxy code, commonly Perl code, can be used to extend the
proxy in the case of the TACC model.  In this project, we propose
combining these two to form a hybrid architecture: distributed TACC
(DTACC).  The user will write code that can be distributed to both the
client and the server.  This will give the extension writer the best of
both worlds: fast access (low-latency, high bandwidth) to the web
server, and fast access to the client.  We will build the extension into
the DTACC system to support code migration to the client, and also test
the code on a sample DTACC extension.

<ul>
  <li> <a href="http://HTTP.CS.Berkeley.EDU/~chad/cs294-6/project/proposal.html">
       Proposal</a>
  <li> <a href="http://www.cs.berkeley.edu/~chad/cs294-6/project/writeup.html">
       Writeup</a>
  <li> <a href="http://www.cs.berkeley.edu/~chad/cs294-6/project/">Home page</a>
</ul>

<h3>Enabling Parallel Distillation in TACC</h3>

Ian Goldberg<p>

<ul>
  <li> <a  href="http://www.cs.berkeley.edu/~iang/DistillAsync.pdf">Writeup
       (PDF)</a>  
</ul>

<hr><address>fox@@cs.berkeley.edu</address>
<!-- hhmts start -->
<!-- hhmts end -->
</body> </html>
@


1.5
log
@*** empty log message ***
@
text
@d79 1
a79 1
       href="http://www.cs.berkeley.edu/~daw/inet-scvs/writeup/">Writeup
d82 1
a82 1
       href="http://www.cs.berkeley.edu/~daw/inet-scvs/writeup.ps">Writeup
d101 1
a101 1
  <li> <a href="http://bgess.berkeley.edu/ratogi/class/cs294-6/">Writeup</a>
@


1.4
log
@*** empty log message ***
@
text
@d12 1
d15 25
a39 1
<h3>Anywhere Anytime Email Proxy Server (AAEPS)</h3>
a42 5
We exploit the proxy servers to carry out the mechanism of delivering the 
emails in a timely fashion no matter where the users are and what devices 
they can access.  And we allow users to supply policies, such as where
to send the email or at what time, which can usually be derived from the
daily schedulers commonly used.
d47 1
a47 1
  <li> Home page
d62 1
a62 1
  <li> Home page
d78 6
a83 1
  <li> Home page
d101 1
a101 1
  <li> Home page
d119 2
a120 1
  <li> Home page
d135 1
a135 1
  <li> Home page
d140 2
d151 1
d171 1
a171 1
  <li> Home page
d174 1
a174 1
<h3>Radiance: Solving Big Parallel Problems With TACC</h3>
d178 13
a190 11
Ray-tracing has traditionally been a very time consuming process. Each
pixel location requires extensive computation in order to determine its
color attributes. However, each pixel location is independent of any other
pixel location, which suggests applying distributed parallel processing
methods to ray-tracing could significantly improve the performance of
a ray-tracing application.

Radiance will be structured as a TACC application running on the NOW
cluster. The main motivation behind this project is to distribute the
ray-tracing work across the workers in the cluster and then aggregate the
results into a composite ray-traced image using a TACC-like aggregator. 
d193 1
a193 3
  <li> <a
       href="http://HTTP.CS.Berkeley.EDU/~mpeng/cs294-6/radiance.html">Home
       page</a>
d220 1
a220 1
     Home page</a>
d259 12
a270 1
  <li> Home page
@


1.3
log
@*** empty log message ***
@
text
@d149 12
@


1.2
log
@*** empty log message ***
@
text
@d184 1
a184 1
Ben Zhao<p>
@


1.1
log
@*** empty log message ***
@
text
@d49 5
a53 1
(No abstract yet)
d63 1
a63 1
Marcel Kornacker<p>
d75 1
a75 1
       href="http://www/~marcel/cs294-6/project-proposal.html">Proposal</a>
d153 66
@

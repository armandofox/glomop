head	1.7;
access;
symbols
	stable:1.5
	current:1.5
	release:1.5;
locks; strict;
comment	@ * @;


1.7
date	96.08.23.19.57.35;	author gribble;	state Exp;
branches;
next	1.6;

1.6
date	96.07.01.23.34.52;	author gribble;	state Exp;
branches;
next	1.5;

1.5
date	96.06.14.21.10.20;	author gribble;	state Exp;
branches;
next	1.4;

1.4
date	96.05.31.22.17.08;	author gribble;	state Exp;
branches;
next	1.3;

1.3
date	96.05.24.21.30.47;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	96.02.22.00.45.51;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	96.02.20.23.45.12;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Merged with Wink source tree.  It all works now.
@
text
@/*
   Copyright (C) 1994-1996 by the Regents of the University of California.
   Commercial and non-commercial licenses to use this software must be arranged
   by the GloMop Group at UC Berkeley.  For inquiries email Armando Fox
   <fox@@cs.berkeley.edu>, Prof. Eric Brewer <brewer@@cs.berkeley.edu>, or
   Prof. Randy Katz <randy@@cs.berkeley.edu>.
*/

/*
 * glomopTk.h --
 *
 * This file is the main internal C header for the glomop client-side
 * library.  It is private to the library;  the routines used are not visible
 * to applications.  Language-specific interfaces are exported from other
 * the glue code modules.
 * 
 * $Id: glomopTk.h,v 1.1 96/08/19 14:39:22 glomop Exp $
 * 
 */

#ifndef GLOMOP_TK
#define GLOMOP_TK

#ifdef __cplusplus
extern "C" {
#endif

/*
 * This function is the main initialization routine for the core
 * glomopTk functions, and it should be called by the initialization
 * routine of the glue.  This function returns non-zero in case of error.
 */
int glomopTk_init(void);

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#include "tkAppInit.h"
#include "glomopTk_protocol.h"
#include "glomopTk_charon.h"
#include "glomopTk_utils.h"
#include "glomopTk_pub.h"
#include "glomopTk_TL.h"
#include "glomopTk_CS.h"

#define CHARON_VERSION 0x0100         /* version 1.0 */

#ifdef __cplusplus
}
#endif

#endif
@


1.6
log
@Tweaked so that apps could register their own fd callbacks.
@
text
@d2 8
d17 1
a17 2
 *
 * $Id: glomopTk.h,v 1.5 1996/06/14 21:10:20 gribble Exp $
a18 23
 * $Log: glomopTk.h,v $
 * Revision 1.5  1996/06/14 21:10:20  gribble
 * Whoohoo!  Created image browser application, added unauthenticated
 * connection, TOC parsing.
 *
 * Revision 1.4  1996/05/31 22:17:08  gribble
 * Added entry for charon module.
 *
 * Revision 1.3  1996/05/24 21:30:47  gribble
 * Added protocol parser functionality, and the tkAppInit.c file required
 * to build gmwish.  Modified headers and Makefile to include protocol
 * parsing.  Preliminary stab at underlying C glomop functionality, and glue
 * routines to map into them.  Will need significant rewriting.
 *
 * Revision 1.2  1996/02/22 00:45:51  gribble
 * Skeleton core structure complete.  Next stage: implementation of core
 * routines.
 *
 * Revision 1.1  1996/02/20 23:45:12  gribble
 * Preliminary skeletons for the core library files and TCL glue, as well
 * as the Makefile needed to generate libraries and demo executables.
 *
 *
d24 4
d35 5
d49 4
@


1.5
log
@Whoohoo!  Created image browser application, added unauthenticated
connection, TOC parsing.
@
text
@d10 1
a10 1
 * $Id: glomopTk.h,v 1.4 1996/05/31 22:17:08 gribble Exp $
d13 4
d47 1
@


1.4
log
@Added entry for charon module.
@
text
@d10 1
a10 1
 * $Id: glomopTk.h,v 1.3 1996/05/24 21:30:47 gribble Exp $
d13 3
d49 2
@


1.3
log
@Added protocol parser functionality, and the tkAppInit.c file required
to build gmwish.  Modified headers and Makefile to include protocol
parsing.  Preliminary stab at underlying C glomop functionality, and glue
routines to map into them.  Will need significant rewriting.
@
text
@d10 1
a10 1
 * $Id: glomopTk.h,v 1.2 1996/02/22 00:45:51 gribble Exp $
d13 6
d41 1
@


1.2
log
@Skeleton core structure complete.  Next stage: implementation of core
routines.
@
text
@d10 1
a10 1
 * $Id: glomopTk.h,v 1.1 1996/02/20 23:45:12 gribble Exp $
d13 4
d27 8
@


1.1
log
@Preliminary skeletons for the core library files and TCL glue, as well
as the Makefile needed to generate libraries and demo executables.
@
text
@d10 1
a10 1
 * $Id$
d12 5
a16 1
 * $Log$
d23 4
a26 1

@

head	1.15;
access;
symbols
	stable:1.10
	current:1.10
	release:1.10;
locks; strict;
comment	@# @;


1.15
date	96.08.23.19.57.30;	author gribble;	state Exp;
branches;
next	1.14;

1.14
date	96.07.25.22.12.17;	author gribble;	state Exp;
branches;
next	1.13;

1.13
date	96.07.25.17.31.31;	author gribble;	state Exp;
branches;
next	1.12;

1.12
date	96.07.01.23.34.49;	author gribble;	state Exp;
branches;
next	1.11;

1.11
date	96.06.15.01.50.15;	author gribble;	state Exp;
branches;
next	1.10;

1.10
date	96.06.11.02.18.42;	author gribble;	state Exp;
branches;
next	1.9;

1.9
date	96.06.07.01.55.00;	author gribble;	state Exp;
branches;
next	1.8;

1.8
date	96.06.04.02.56.05;	author gribble;	state Exp;
branches;
next	1.7;

1.7
date	96.06.03.23.38.41;	author gribble;	state Exp;
branches;
next	1.6;

1.6
date	96.06.01.00.04.30;	author gribble;	state Exp;
branches;
next	1.5;

1.5
date	96.05.31.22.14.49;	author gribble;	state Exp;
branches;
next	1.4;

1.4
date	96.05.31.17.23.15;	author gribble;	state Exp;
branches;
next	1.3;

1.3
date	96.05.24.21.30.44;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	96.02.22.00.45.48;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	96.02.20.23.45.08;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Merged with Wink source tree.  It all works now.
@
text
@# 
# Makefile for the TK glomop client-side application support library,
# including a sample application compilation
# $Id: Makefile,v 1.14 1996/07/25 22:12:17 gribble Exp $
# 

#
# Makefile target options - what are the names of the files we'll create?
# 

tcldemof         = gmwish
tcllibraryf      = libglomopTclTk.a
perldemof        = gm_perlclient_demo        # this doesn't exist yet
perllibraryf     = libglomopPerlTk.a         # this doesn't exist yet

#
# Includes used when compiling the library
# 

TCL_INCLUDE      = -I/usr/sww/share/tcl/include
TK_INCLUDE       = -I/usr/sww/share/tcl/include
X_INCLUDE        = -I/usr/sww/share/X11/include
DES_INCLUDE      = -I/usr/sww/kerberosIV/include/kerberosIV -I/usr/sww/kerberosIV/include/

#
# Libraries needed when compiling an application using the support library.
# 

X_LIB            = -L/usr/sww/X11/lib -lX11
TK_LIB           = -L/usr/sww/lib/ -ltk
TCL_LIB          = -L/usr/sww/lib/ -ltcl
DES_LIB          = -L/usr/sww/kerberosIV/lib -ldes

#
# Change ARCH_LIB to point to one of the architecture specific
# library definitions.  solaris is silly.

SOLARIS_LIB      =  -lsocket -lnsl
HPUX_LIB         = -ldld
BSD_LIB          = -lipc
ARCH_LIB         = $(HPUX_LIB)
#
# Generic compilation options
#    you must modify as appropriate for your architecture.  for solaris,
#    add SOLARIS_LIB to LIBS.  take off the -DDEBUG to get rid of the
#    debugging output.

CFLAGS           = -O -Wall # -DDEBUG
CC               = gcc
DEFINES          =
INCLUDES         = -I. $(TK_INCLUDE) $(TCL_INCLUDE) $(X_INCLUDE) $(DES_INCLUDE)
LIBS             = $(TK_LIB) $(TCL_LIB) $(X_LIB) $(DES_LIB) \
                   $(ARCH_LIB) -lm
CC_SWITCHES      = $(CFLAGS) $(DEFINES) $(INCLUDES)
RM               = /bin/rm -f
AR               = ar rc
#RANLIB           = echo > /dev/null

#
# Core library source files
#
CORE_OBJS        = glomopTk_init.o glomopTk_pub.o glomopTk_CS.o glomopTk_TL.o \
                   glomopTk_utils.o glomopTk_protocol.o glomopTk_charon.o
CORE_SRCS        = glomopTk_init.c glomopTk_pub.c glomopTk_CS.c glomopTk_TL.c \
                   glomopTk_utils.c glomopTk_protocol.c glomopTk_charon.c

# 
# TCL glue files
# 

TCL_OBJS         = glomopTclTk_glue.o tkAppInit.o
TCL_DEMO_OBJS    = gmwish_main.o

TCL_SRCS         = glomopTclTk_glue.c tkAppInit.c
TCL_DEMO_SRCS    = gmwish_main.c

# 
# PERL glue files
# 

PERL_OBJS        = glomopPerlTk_glue.o
PERL_SRCS        = glomopPerlTk_glue.c


# The compilation directives.
# 
# tcl: tcllibrary creates the library, tcldemo a demo app, and tclall
#      creates both the demo and the library.
#
# clean: removes .o files, core files, emacs backup files, the
#        library, and demo executable.

all: tclall

# ----------------------------------------------------------------------
# tcl compilation
# ----------------------------------------------------------------------

tclall: $(tcllibraryf) $(tcldemof) test2

tcllibrary: $(tcllibraryf)

tcldemo: $(tcldemof)

$(tcllibraryf): $(CORE_OBJS) $(TCL_OBJS)
	$(RM) $@@
	$(AR) $@@ $(CORE_OBJS) $(TCL_OBJS)
#	/usr/sww/X11R6/lib/libX11.a /usr/sww/kerberosIV/lib/libdes.a
#	$(RANLIB) $@@

$(tcldemof): $(CORE_OBJS) $(TCL_OBJS) $(TCL_DEMO_OBJS)
	$(CC) -o $(tcldemof) $(CORE_OBJS) $(TCL_OBJS) $(TCL_DEMO_OBJS) $(LIBS)
#	strip $@@

test2: $(CORE_OBJS) $(TCL_OBJS) test2.o
	$(CC) -o test2 $(CORE_OBJS) $(TCL_OBJS) test2.o $(LIBS)

.c.o:
	$(CC) -c $(CC_SWITCHES) $<

clean:
	$(RM) *.o $(tcllibraryf) $(tcldemof) test2 *~ #* core
@


1.14
log
@Added synchronous interface to glomop library.  Connect and Connect_Unauth
now take a flag for synchronous vs asynchronous, and there is a
GetDoc_Synch call for synchronous document download.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.13 1996/07/25 17:31:31 gribble Exp $
d39 1
a39 1
HPUX_LIB         =
d41 1
a41 1
ARCH_LIB         = $(SOLARIS_LIB)
d122 1
a122 1
	$(RM) *.o $(tcllibraryf) $(tcldemof) *~ #* core
@


1.13
log
@Fiddled so that the gmwish_main functionality works.  Added TOC parsing
function to glomopTk_pub.{c|h}.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.12 1996/07/01 23:34:49 gribble Exp $
d41 1
a41 1
ARCH_LIB         = $(HPUX_LIB)
d99 1
a99 1
tclall: $(tcllibraryf) $(tcldemof)
d114 3
@


1.12
log
@Tweaked so that apps could register their own fd callbacks.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.11 1996/06/15 01:50:15 gribble Exp $
d41 1
a41 1
ARCH_LIB         = $(SOLARIS_LIB)
d48 1
a48 1
CFLAGS           = -O -Wall -DDEBUG
d108 1
@


1.11
log
@Tweaked protocol.h opcode constant from "fail" to "FAIL"
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.10 1996/06/11 02:18:42 gribble Exp $
d41 1
a41 1
ARCH_LIB         = $(HPUX_LIB)
d71 2
a72 2
TCL_OBJS         = glomopTclTk_glue.o
TCL_DEMO_OBJS    = tkAppInit.o
d74 2
a75 2
TCL_SRCS         = glomopTclTk_glue.c
TCL_DEMO_SRCS    = tkAppInit.c
@


1.10
log
@Woohoo!  First document fetch by GloMop in history.  Many little tweaks
and bugfixes to get it working correctly.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.9 1996/06/07 01:55:00 gribble Exp $
d40 1
@


1.9
log
@Fixed some syntax bugs
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.8 1996/06/04 02:56:05 gribble Exp $
d111 1
a111 1
	strip $@@
@


1.8
log
@DEBUG flag put in there.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.7 1996/06/03 23:38:41 gribble Exp $
d47 1
a47 1
CFLAGS           = -O -Wall # -DDEBUG
@


1.7
log
@Tweaked slightly so compiles on different architectures are simpler.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.6 1996/06/01 00:04:30 gribble Exp $
d34 4
d40 1
a40 1
ARCH_LIB         = $(SOLARIS_LIB)
d44 2
a45 1
#    add SOLARIS_LIB to LIBS.
d47 1
a47 1
CFLAGS           = -O -Wall
a92 1

@


1.6
log
@Fixed up so that the gm_connectproxy command successfully uses the
Charon authentication module.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.5 1996/05/31 22:14:49 gribble Exp $
d34 3
a36 2
#SOLARIS_LIB      =  -lsocket -lnsl

d47 1
a47 1
                   $(SOLARIS_LIB) -lm
@


1.5
log
@Added DES stuff, and rules for glomopTk_charon.*.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.4 1996/05/31 17:23:15 gribble Exp $
d34 2
d38 2
a39 1
# 
d45 2
a46 1
LIBS             = $(TK_LIB) $(TCL_LIB) $(X_LIB) $(DES_LIB) -lm
@


1.4
log
@Unknown changes, due to REALLY ANNOYING lossage after barad-dur crash.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.3 1996/05/24 21:30:44 gribble Exp $
d23 1
d32 1
d41 2
a42 2
INCLUDES         = -I. $(TK_INCLUDE) $(TCL_INCLUDE) $(X_INCLUDE)
LIBS             = $(TK_LIB) $(TCL_LIB) $(X_LIB) -lm
d52 1
a52 1
                   glomopTk_utils.o glomopTk_protocol.o
d54 1
a54 1
                   glomopTk_utils.c glomopTk_protocol.c
@


1.3
log
@Added protocol parser functionality, and the tkAppInit.c file required
to build gmwish.  Modified headers and Makefile to include protocol
parsing.  Preliminary stab at underlying C glomop functionality, and glue
routines to map into them.  Will need significant rewriting.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.2 1996/02/22 00:45:48 gribble Exp $
d44 1
a44 1
RANLIB           = echo > /dev/null
d95 2
a96 2
	$(AR) $@@ $(OBJS)
	$(RANLIB) $@@
@


1.2
log
@Skeleton core structure complete.  Next stage: implementation of core
routines.
@
text
@d4 1
a4 1
# $Id: Makefile,v 1.1 1996/02/20 23:45:08 gribble Exp $
d11 1
a11 1
tcldemof         = gm_tclclient_demo
d22 1
a22 1
X_INCLUDE        = -I/usr/sww/share/X/include
d40 1
a40 1
LIBS             = $(X_LIB) $(TK_LIB) $(TCL_LIB)
d50 1
a50 1
                   glomopTk_utils.o
d52 1
a52 1
                   glomopTk_utils.c                   
d59 1
a59 1
TCL_DEMO_OBJS    = glomopTclTk_demo.o
d62 1
a62 1
TCL_DEMO_SRCS    = glomopTclTk_demo.o
d99 1
a99 1
	$(CC) -o $(tcldemof) $(TCL_OBJS) $(TCL_DEMO_OBJS) $(LIBS)
@


1.1
log
@Preliminary skeletons for the core library files and TCL glue, as well
as the Makefile needed to generate libraries and demo executables.
@
text
@d4 1
a4 1
# $Id$
d36 1
a36 1
CFLAGS           = -O
d44 1
a44 1
RANLIB           = ranlib
d49 4
a52 2
CORE_OBJS        = glomopTk_init.o
CORE_SRCS        = glomopTk_init.c
d93 1
a93 1
$(tcllibraryf): $(TCL_OBJS)
d98 1
a98 1
$(tcldemof): $(TCL_OBJS) $(TCL_DEMO_OBJS)
d106 1
a106 1
	$(RM) *.o $(library) $(demo) *~ #* core
@

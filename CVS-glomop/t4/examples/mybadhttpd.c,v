head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	99.02.16.23.20.16;	author daw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@typedef struct _IO_FILE FILE;
FILE *stdin, *stdout, *stderr;

/* A minimalist webserver.  Intended to be run from inetd, so
 * stdin/stdout are the network connection.
 *
 * Not secure -- will display any file on the filesystem whatsoever.
 * Try e.g. "GET /../../../../etc/passwd HTTP/1.0" for an example.
 */
main()
{
	char line[100], line2[100], *fname, *q, path[50];
	int ch;
	FILE *f;

	/* read a GET request, parse out the filename */
	if (!fgets(line, sizeof(line), stdin))
		die();
	while (fgets(line2, sizeof(line2), stdin) && line2[0] != '\n')
		; /* ignore client headers */
	fname = strchr(line, ' ');
	if (!fname)
		die();
	fname++;
	q = strchr(fname, ' ');
	if (!q)
		die();
	*q = '\0';

	/* translate into a path in the filesystem */
	strcpy(path, "/home/daw");
	strcat(path, fname);

	/* print server headers */
	printf("HTTP/1.0 200 OK\n\n");

	/* cat the requested document to stdout */
	f = fopen(path, "r");
	if (!f)
		die();
	while ((ch = getc(f)) != EOF)
		putchar(ch);
	fclose(f);

	return 0;
}

die()
{
	perror("myhttpd");
	exit(1);
}
@

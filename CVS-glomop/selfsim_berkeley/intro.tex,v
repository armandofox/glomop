head	1.7;
access;
symbols
	pre-camera-edits:1.4
	sigmetrics:1.1.1.1
	sigmetrics:1.1.1;
locks; strict;
comment	@% @;


1.7
date	98.03.16.19.15.43;	author gribble;	state Exp;
branches;
next	1.6;

1.6
date	98.03.13.23.53.44;	author gribble;	state Exp;
branches;
next	1.5;

1.5
date	98.03.13.11.41.36;	author gribble;	state Exp;
branches;
next	1.4;

1.4
date	97.11.03.10.03.05;	author gribble;	state Exp;
branches;
next	1.3;

1.3
date	97.10.31.23.38.32;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	97.10.31.01.28.05;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	97.10.30.21.43.25;	author gribble;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.10.30.21.43.25;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Multo-changes for camera ready.
@
text
@\begin{abstract} 
{ \small

We demonstrate that high-level file system events exhibit self-similar
behaviour, but only for short-term time scales of approximately under a
day.  We do so through the analysis of four sets of traces that span time
scales of milliseconds through months, and that differ in the trace
collection method, the filesystems being traced, and the chronological
times of the tracing.  Two sets of detailed, short-term file system trace
data are analyzed; both are shown to have self-similar like behaviour, with
consistent Hurst parameters (a measure of self-similarity) for all file
system traffic as well as individual classes of file system events.
Long-term file system trace data is then analyzed, and we discover that the
traces' high variability and self-similar behaviour does not persist across
time scales of days, weeks, and months.  Using the short-term trace data,
we show that sources of file system traffic exhibit ON/OFF source
behaviour, which is characterized by highly variably lengthed bursts of
activity, followed by similarly variably lengthed periods of inactivity.
This ON/OFF behaviour is used to motivate a simple technique for
synthesizing a stream of events that exhibit the same self-similar
short-term behaviour as was observed in the file system traces.}

\end{abstract}

\section{Introduction}\label{intro_sec}

Recent studies of high quality traces of network traffic (see
\cite{Lela94}, \cite{Bera95}, and \cite{Paxs95}) have revealed an
unexpected property of network traffic, namely that the traffic appears to
be {\it self-similar} in nature.  Intuitively, a self-similar process looks
similar and bursty across all time-scales.  Of course, physical contraints
(such as bandwidth limits and the finite lifetime of any given network)
mean that no real network can ever be truly self-similar --- but the
important properties of self-similar systems do manifest themselves across
many time scales that are of practical importance.

The theoretical and practical consequences of having a self-similar process
cannot be dismissed.  A common assumption in the design of networks and
operating systems is that the aggregation of a large number of bursty
sources tends to be smooth.  For example, statistical admissions criteria
in real-time channel establishment \cite{Ferr90} assume that while
an individual source may exceed its average resource requirements at any
given time, the aggregate resource requirements across many such sources
has a low variance.  If the combined traffic is self-similar, this is not
necessarily the case.

Further studies have shown that the total traffic (measured in bytes/s or
packets/s) on Ethernet LANs \cite{Lela94} and on WANs \cite{Paxs94} is
self-similar.  Similarly, investigations into variable-bit-rate (VBR) video
traffic \cite{Bera95} have shown this traffic to exhibit long-range
dependence, which is an indicator of self-similarity.  The purpose of this
paper is to demonstrate the existence of self-similar behaviour in
high-level file system events (such as file opens, block reads or writes,
file closes, and file deletions) over short-term time scales of less than a
day in length, but to show that this behaviour does not persist across time
scales of days, weeks, and months.  We refer to this property as ``short
term self-similarity'': a process possesses short-term self-similarity if
it is well represented as a self-similar process over short time scales,
but not over larger time scales.  Short term self-similarity is nearly an
oxymoron in the sense that it is strictly {\bf not} self-similarity; for a
process to be truly self-similar, its self-similar behaviour must extend
through all time scales.

Our contributions in this paper are:

\begin{itemize}
\item to demonstrate that four different file systems exhibit short term
self-similarity through the analysis of traces of those systems' activity,
\item to explicitly show using two of those file system traces that the
self-similar behaviour of the file systems breaks down past day, week,
and month-long time scales,
\item to show that over short time scales, file system activity is
composed of highly variable ON/OFF activity from a number of clients, which
may explain the short term self-similarity,
\item and to present a model for synthesizing file system traffic that
exhibits self-similar behaviour.
\end{itemize}

This paper is structured as follows.  Section \ref{related_work_sec}
discusses related work.  In section \ref{theory_sec}, the theory behind
self-similar and long-range dependent processes is summarized.  Section
\ref{fs_traces} describes the four file system traces analyzed in this
paper.  Section \ref{measure_sec} contains the analysis of Sprite LFS and
Auspex NFS short-term file system traces, which exhibit self-similar
behaviour.  In section \ref{longterm}, a similar analysis is performed on
two sets of much longer time scale data (from an instructional file system
at U.C. Berkeley, and from an NFS file system at the University of Maryland
Baltimore Country), which reveals that this self-similar nature does not
persist across these longer time scales.  Finally, section
\ref{on_off_model} shows that the short-term trace data exhibits highly
variable ON/OFF sources, which is used to motivate a method for
synthesizing self-similar data. A summary of this paper is presented and
general conclusions drawn in section \ref{summary_sec}.
@


1.6
log
@attaaack!
@
text
@d5 6
a10 6
behaviour, but only for short-term time scales of under a day.  We do so
through the analysis of four sets of traces that span time scales of
milliseconds through months, and that differ in the trace collection
method, the filesystems being traced, and the chronological times of the
tracing.  Two sets of detailed, short-term file system trace data are
analyzed; both are shown to have self-similar like behaviour, with
d21 1
a21 1
short-term behaviour as was observed in the file system traces. }
d56 22
a77 1
scales of days, weeks, and months.
@


1.5
log
@Many changes to modify spin of paper.
@
text
@d4 15
a18 14
This paper demonstrates that high-level file system events do not exhibit
self-similarity.  We do so through the analysis of four sets of traces that
span time scales of milliseconds through months, and that differ in the
trace collection method, the filesystems being traced, and the
chronological times of the tracing.  Two sets of detailed, short-term file
system trace data are analyzed; both are shown to have self-similar like
behaviour, with consistent Hurst parameters (a measure of self-similarity)
for all file system traffic as well as individual classes of file system
events.  Long-term file system trace data is then analyzed, and we discover
that this high variability and self-similarity ceases to persist across
time scales of many days, weeks, and months.  Finally, using the short-term
trace data, we show that sources of file system traffic exhibit ON/OFF
source behaviour, which is characterized by highly variably lengthed bursts
of activity, followed by similarly variably lengthed periods of inactivity.
d21 1
a21 1
behaviour as the file system traces. }
d27 9
a35 9
Recent studies of high quality network traces (see \cite{Lela94},
\cite{Bera95}, and \cite{Paxs95}) revealed an unexpected property of
network traffic, namely that the traffic is {\it self-similar} in nature.
Intuitively, a self-similar process looks similar and bursty across all
time-scales.  Of course, physical contraints (such as bandwidth limits and
the finite lifetime of any given file system) mean that no real file system
can ever be truly self-similar - but the important properties of
self-similar systems do manifest themselves across many time scales that
are of practical importance.
d48 1
a48 1
packets/s) on Ethernet LANs\cite{Lela94} and on WANs\cite{Paxs94} is
d50 1
a50 1
traffic\cite{Bera95} have shown that traffic to exhibit long-range
d53 4
a56 4
high-level file system events (such as file opens, block writes, file
closes, and file deletions) in short-term data of less than a day in
length, but to show that this behaviour ceases to exist across time scales
of days, weeks, and months.
d65 8
a72 6
two sets of much longer time scale data, which reveals that this
self-similar nature does not persist across these longer time scales.
Finally, section \ref{on_off_model} shows that the short-term trace data
exhibits highly variable ON/OFF sources, which is used to motivate a method
for synthesizing self-similar data. A summary of this paper is presented
and general conclusions drawn in section \ref{summary_sec}.
@


1.4
log
@Added confidence intervals.  Added On/off model section.
@
text
@d4 17
a20 16
This paper demonstrates that high-level file system events are self-similar
in nature through the analysis of three sets of traces that span timescales
of milliseconds through months, and that differ in the trace collection
method, the filesystems being traced, and the chronological times of the
tracing.  Two sets of detailed, short-term file system trace data are
analyzed; both are shown to have consistent Hurst parameters (a measure of
self-similarity) for all file system traffic as well as individual classes
of file system events.  Long-term file system trace data (of a much coarser
granularity) is then analyzed to demonstrate that high variability and
self-similarity persist across timescales of many months.  Using the
short-term trace data, we then show that sources of file system traffic
exhibit ON/OFF source behaviour, which is characterized by highly variably
lengthed bursts of activity, followed by similarly variably lengthed
periods of inactivity.  This ON/OFF behaviour is used to motivate a simple
technique for synthesizing a stream of events that exhibit the same
self-similar behaviour as the file system traces. }
d33 2
a34 2
self-similar systems do manifest themselves across all time scales that are
of practical importance.
d50 6
a55 3
dependence, which is an indicator of self-similarity.  The purpose of this paper is to demonstrate the existence of
self-similarity in high-level file system events such as file opens,
block writes, file closes, and file deletions.  
d60 10
a69 8
\ref{measure_sec} contains the analysis of Sprite LFS and Auspex NFS file
system traces for self-similarity.  In section \ref{longterm}, a similar
analysis is performed on coarser granularity, but longer timescale data,
gathered from the University of ***** (U*****) file system.  Section
\ref{on_off_model} shows that the short-term trace data exhibits highly
variable ON/OFF sources, which is used to motivate a method for
synthesizing self-similar data.  Finally, a summary of this paper is
presented and general conclusions drawn in section \ref{summary_sec}.
@


1.3
log
@Another round of edits.
@
text
@d5 15
a19 15
in nature.  Self-similarity is detected both visually and through the use
of analysis techniques such as variance-time plots and Pox plots.  Two sets
of detailed, short-term file system trace data (of roughly a day's worth of
1991 Sprite and 1994 NFS traffic) are analyzed; both are shown to have
consistent Hurst parameters (a measure of self-similarity) for all file
system traffic as well as individual classes of file system events.
Sources of file system traffic are shown to exhibit ON/OFF source
behaviour, which is characterized by highly variably lengthed bursts of
activity, followed by similarly variably lengthed periods of inactivity.
Long-term file system trace data (of a much coarser granularity) is then
analyzed to demonstrate that high variability and self-similarity persist
across timescales of many months.  The fact that self-similarity exists on
different file-systems, within data collected using different techniques
and across different time periods suggests that self-similarity may be a
fundamental property of all file systems.}
d26 8
a33 6
\cite{Bera95}, and \cite{Paxs95}) revealed an unexpected
property of network traffic, namely that the traffic is
{\it self-similar} in nature.  Intuitively, a self-similar process
looks similar and bursty across all time-scales.  Mathematically, the
autocorrelation function of a self-similar process is invariant across
all aggregated processes.
d39 1
a39 1
in real-time channel establishment \cite{Ferr90,Gemm95} assume that while
d50 2
a51 2
self-similarity in high-level file-system events such as file opens,
block writes, file closes, and file deletions.
d59 5
a63 3
gathered from the University of ***** (U*****) file system.  Finally, a
summary of this paper is presented and general conclusions drawn in section
\ref{summary_sec}.
@


1.2
log
@Added tim gibson's work, modified stuff, through out other stuff.
@
text
@d14 7
a20 3
Long-term file system trace data (of a much coarser granularity) gathered
from the U**** file system is then analyzed to demonstrate that high
variability and self-similarity persist across timescales of many months.}
d26 1
a26 1
\cite{Bera95}, and \cite{Paxs95}) have revealed an unexpected
d33 6
a38 7
The theoretical and practical consequences of having a self-similar
process cannot be dismissed.  A common assumption in the design of
networks and operating systems is that the aggregation of a large
number of bursty sources tends to be smooth.  For example, statistical
admissions criteria in real-time channel establishment (see, for
example, \cite{Ferr90} or \cite{Gemm95}) assume that while an
individual source may exceed its average resource requirements at any
d49 1
a49 1
block writes, and file closes. 
d51 9
a59 9
The rest of this paper is structured as follows.  Section
\ref{related_work_sec} discusses related work.  In section
\ref{theory_sec}, the theory behind self-similar and long-range dependent
processes is summarized.  Section \ref{measure_sec} contains the analysis
of Sprite LFS and Auspex NFS file system traces for self-similarity.  In
section \ref{longterm}, a similar analysis is performed on coarser
granularity but longer timescale data gathered from the U**** file system.
Finally, a summary of this paper is presented and general conclusions drawn
in section \ref{summary_sec}.
@


1.1
log
@Initial revision
@
text
@d7 10
a16 14
of file system trace data (of 1991 Sprite and 1994 NFS traffic) are
analyzed; both are shown to have consistent Hurst parameters (a measure of
self-similarity) for all file system traffic as well as individual classes
of file system events.  Sources of file system traffic are shown to exhibit
ON/OFF source behaviour, which is characterized by highly variably lengthed
bursts of activity, followed by similarly variably lengthed periods of
inactivity.  The ON/OFF behaviour of sources is used to design and
implement a rudimentary but flexible and extensible file system model.
File system trace data is synthesized using measured
properties of the available trace data as inputs to this model.  The
synthesized traffic is then analyzed, and demonstrated to exhibit the
correct self-similar behaviour.  Finally, we demonstrate how
self-similarity helps to detect idleness in file systems and predict the
lengths of these idle periods.  }
d44 1
a44 3
dependence, which is an indicator of self-similarity.

The purpose of this paper is to demonstrate the existence of
d46 1
a46 10
block writes, and file closes.  Once this has been demonstrated, it will
be taken advantage of to develop an extensible, flexible source model
of file-system activity.  This model will then be used to generate
synthetic trace data.  We also argue that knowledge of the self-similar
nature of file system traffic can be taken advantage of when designing file
systems.  Specifically, a self-similar process has a heavy-tailed
distribution of event interarrival times.  This distribution can be used to
detect and predict the lengths of idle periods, which can be taken
advantage of to schedule activities such as cleaning in a log-structured
file system.
d52 5
a56 6
of Sprite LFS and Auspex NFS file system traces for self-similarity.  Our
model of file-system activity is presented and validated in section
\ref{model_sec}.  Applications of self-similarity to detecting idleness in
file systems are discussed in section \ref{cleaning_sec}.  Finally, a
summary of this paper is presented and general conclusions drawn in section
\ref{summary_sec}.
@


1.1.1.1
log
@Sigmetrics paper

@
text
@@

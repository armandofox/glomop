head	1.4;
access;
symbols
	pre-camera-edits:1.1;
locks; strict;
comment	@% @;


1.4
date	98.03.16.19.15.45;	author gribble;	state Exp;
branches;
next	1.3;

1.3
date	98.03.13.23.53.46;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	98.03.13.11.41.39;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	97.11.03.10.03.09;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Multo-changes for camera ready.
@
text
@\section{ON/OFF Sources}\label{on_off_model}

We have not yet attempted to explain the underlying cause of the short term
self-similar behaviour of file-system traffic.  Willinger {\it et
al.}\cite{Will95} proposed a physical explanation of observed
self-similarity in Ethernet LAN traffic, based on theory developed
initially by Mandelbrot\cite{Mand65} and then Taqqu and Levy\cite{Taqq86}.

The theory states that the aggregation of many ON/OFF sources, each
exhibiting a characteristic known as the {\it Noah effect}, results in
self-similar total traffic.  An individual source is classified as being
ON/OFF if its traffic appears to contain highly variably lengthed ON and
OFF periods; an ON period contains much activity, while an OFF period has a
complete lack of activity.  The Noah effect refers to the high variability
of the ON and OFF periods. If the distribution of ON and OFF period lengths
from individual sources is heavy-tailed, then the aggregate traffic
exhibits the Noah effect, and can be shown to exhibit self-similarity.

The theory presented in \cite{Taqq86} makes the simplifying assumption that
events within an ON period are evenly distributed.  The ON/OFF source model
is thus similar to packet-train models often used to model network sources,
but with the exception that packet interarrival times must have a
heavy-tailed distribution.

\subsection{ON/OFF Behaviour in the Short-term Traces}\label{onoffbe}

An examination of the trace events from individual source hosts within
the Sprite cluster and NFS installation should identify whether or not
the self-similarity of the file system traces can be explained using
this ON/OFF model.  Figure \ref{onoff_pic} presents two textured dot
strip plots obtained from the Sprite and NFS traces.  A textured dot
strip plot (proposed in \cite{Tuke90}) is a two-dimensional
representation of a one-dimensional time-series.  Each vertical column
in a plot corresponds to one time unit; the displacement of dots
(representing events) within that column represents the fractional
position of the event in that time unit.

\begin{figure*}[tbh]
\epsfxsize 0.75\hsize
\epsfysize 0.4\vsize
\begin{center}
\makebox{
\epsfbox[0 0 387 255]{./figures/on_off.eps}
}
\end{center}
\caption{{\bf Textured dot strip plots:} Textured dot strip plots with
time units of 1 second for the (a) Sprite file open (W) events of host
42 and (b) NFS block read events of host 3068 are
illustrated.}\label{onoff_pic}
\end{figure*}

In order to better depict the ON/OFF behaviour of the sources, the subset
of the Sprite traces that was analyzed was extended from a four hour subset
to an approximately 41 hour subset; access privilege information was also
extracted from the Sprite traces.  Figure
\ref{onoff_pic}a illustrates the textured strip dot plot for Sprite
open (W) events originating from host workstation ID 42 (4168 such
events were extract from the trace.)  Similarly, figure
\ref{onoff_pic}b illustrates NFS block reads from
host workstation ID 3068, for which 23025 events were extracted.  These two
hosts were chosen because they were both quite active throughout the period
of analysis, and their high activity resulted in visually striking ON/OFF
periods within the dot plots.  It should be noted that even relatively
lightly active hosts could be seen to exhibit this ON/OFF behaviour,
although the behaviour was not as pronounced in their textured dot plots.

The ON/OFF behaviour of these two sources is unmistakable.  It is also
clear that the ON periods for NFS block read events are much sharper and
more dense than for Sprite file open (W) events.  This difference is easily
explainable.  First and foremost, files are known to be read far more
frequently than they are written\cite{Bake91}; from table
\ref{trace_summary} we see that approximately 13.4\% of NFS files are
opened with write or RW privileges, while 86.6\% of files are opened with
read-only privilege.  Similarly, \cite{Bake91} reported that 88\% of files
within the Sprite traces were opened with read-only privilege.  Secondly,
many file read and write events occur in between a given file open and
close pair.  The total amount of read and write events therefore greatly
outnumbers the amount of open or close events.

\subsubsection{The Analysis of ON and OFF periods}\label{onoffan}

%\begin{figure*}[tbh]
%\epsfxsize 0.75\hsize
%\begin{center}
%\makebox{
%\epsfbox[0 0 521 422]{./figures/hill_qq.eps}
%}
%\end{center}
%\caption{{\bf Hill and qq-plots:} (a) and (c) illustrate Hill and
%qq-plots from Sprite data, while (b) and (d) illustrate similar
%Poisson distributed synthetic data for the sake of comparison.}
%\label{hill_qq_pic}
%\end{figure*}

In order to verify the presence of the Noah effect, the ON and OFF periods
for these sources first need to be identified.  To do so, we use a method
similar to that described in \cite{Will95}.  The source's trace is scanned
linearly; given an event from the trace, we assume that subsequent events
belong to the same ON period if they occur within some threshold amount of
time, otherwise we mark the interval to the next event as an OFF period.
The ON/OFF period size distributions were calculated for the Sprite file
open (W) events, using a threshold value of 60 seconds.\footnote{The
threshold value of 60 is somewhat arbitrary.  We observed a large range in
potential threshold values that gave very similar results; the value 60
gave representative results.} The resulting number of ON and OFF periods
was $182$ and $181$, respectively.

If both the ON and OFF period length
distributions are heavy-tailed, i.e. they satisfy
\begin{equation}
      P(U>u) \sim cu^{-\alpha} \; \mbox{with} \; u \rightarrow \infty, 1 <
      \alpha < 2,
\label{heavytail_onoff}
\end{equation}
for period length U, and if the activity within an ON-period is
uniform, then the aggregation of many such sources results in a
self-similar process with Hurst parameter $H =
\frac{3-\alpha}{2}$. \cite{Will95}

Once the ON and OFF periods from a given source have been identified, we
can verify the presence of the Noah effect using complementary cumulative
distribution plots, or ``qq-plots.''\cite{Krat95} The idea is simple: if we
assume that the period length distribution under analysis obeys equation
\ref{heavytail_onoff}, then by taking the $\log$ of both the sides of
equation, we obtain
\begin{equation}
    \log P(U > u) \sim \log (c) - \alpha \log (u) \; \mbox{as} \; u
\rightarrow \infty.
\label{qq_equation}
\end{equation}
Plotting the measured complementary cumulative period length distribution
$P(U > u)$ versus period length $u$ in a log-log plot should thus yield a
straight line with slope $-\alpha$, for large enough values of $u$.  We
performed this analysis, and did indeed observe a linear relationship, with
a slope of approximately $-1.16$.  We also used a second method for
identifying the Noah effect known as a {\it Hill plot}.  We omit details of
this analysis, but merely state that its results confirm those of the
qq-plot.  Interested readers are referred to \cite{Will95} for a treatment
of Hill plots.

Both the Hill and qq-plot analysis confirm that the observed ON and OFF
periods lengths are Pareto distributed.  This is consistent, since we have
already shown that the aggregate traffic of all observed ON/OFF sources
from the short-term traces is self-similar in nature.

\subsection{Synthesizing Self-Similar Trace Data}

The ON/OFF source behaviour for individual clients in the short-term traces
suggests a simple method for synthesizing a stream of self-similar events.
We can model an individual client's activity as a set of ON/OFF periods,
i.e. a packet train with heavy-tailed train lengths and inter-train arrival
times.  We can then aggregate many such synthesized clients, and the
resulting traffic should exhibit the desired self-similar behaviour.

In section \ref{onoffbe}, we demonstrated that the file open (W) event
series generated by a client exhibits ON-OFF behaviour.  Our simple model
therefore generates ON and OFF periods whose lengths are Pareto
distributed and populates the ON periods by generating a succession of
file open events within each of these periods.  To do this correctly, we
require knowledge of the distribution for inter-arrival times between
file-open events.  Having generated an open event, we then generate
subsequent write events and finally a close event.

In order to test our simple packet train model, we extracted a number of
distributions from the Sprite and NFS file system traces to use as inputs
to the model.  The parameter $\alpha$ extracted from the Hill plot in
section \ref{onoffan} was used to create ON/OFF periods.  In order to
populate the ON periods with open events, the distribution of file open (W)
inter-arrival time was measured and used.

\begin{figure*}[tbhp]
\epsfxsize 0.70\hsize
\begin{center}
\makebox{
\epsfbox[0 0 547 205]{./figures/open_w_interarrival.eps}
}
\end{center}
\caption{Sprite file open (W) inter-arrival times}
\label{open_w_interarrival}
\end{figure*}

Figure \ref{open_w_interarrival}a shows the measured distribution of file
open (W) events from the Sprite traces.\footnote{We chose to measure
distributions from the Sprite file traces in order to avoid the
post-processing anomalies present in the NFS traces.}  The illustrated
distribution was truncated at 4 seconds for the sake of clarity, but in
reality it extended as far out as 900 seconds.  Clearly this distribution
is heavy-tailed (which is consistent, since we previously demonstrated that
Sprite open events are self-similar).  In order to model this distribution,
we fit the data against the general form of a Pareto distribution:
\begin{equation}
P(x) = c_3 \: x^{-\alpha}.
\label{pareto_gen}
\end{equation}
Taking the logarithm of both sides of equation \ref{pareto_gen} results
in the linear relation $\log( P(x) ) = \log(c_3) - \alpha \log(x)$.
Thus, a log-log plot of the measured distribution should result in a
linear function with slope $-\alpha$ and intercept $\log(c_3)$.  Figure
\ref{open_w_interarrival}b illustrates the log-log plot of
distribution \ref{open_w_interarrival}a.  The least-squares fit of
this plot resulted in an estimated $\alpha$ value of $1.105$ and $c_3$
value of $52.66$.  These values were then substituted into equation
\ref{pareto_gen}, and the resulting distribution overlayed on top of
figure \ref{open_w_interarrival}a.  The strong resemblance between
this generated distribution and the observed data indicates that the
choice of a Pareto distribution as a model for file open inter-arrival
times is reasonable.  Note that for the purposes of modeling, only the
$\alpha = 1.105$ value is important, since $c_3$ is only an indicator
of the number of events in our measured distribution, and is
replaced by a normalization constant in the model.

\begin{figure*}[tbh]
\epsfxsize 0.65\hsize
\begin{center}
\makebox{
\epsfbox[50 50 662 226]{./figures/synth-client.eps}
}
\end{center}
\caption{{\bf Textured dot strip plot:}  All synthesized file system
events generated for client 15 over 50,000 seconds.}
\label{fig:synth-client}
\end{figure*}

Given the value $\alpha$, we can now generate file open events within ON
periods.  To generate the file close events to match the open events, we
need the distribution of times between file open events and their
corresponding closes.  A similar analysis revealed that this distribution
(for the Sprite traces) was also well represented by a Pareto distribution
with $\alpha = 1.131$.  The distribution of file sizes (measured at the
time of close (W) events) was also seen to be heavy-tailed.  Analysis of
this distribution resulted in an estimated $\alpha=1.481$.

\subsubsection{Model Results}

To test the validity of our model, we synthesized file system events
for 20 clients and aggregated them to obtain the overall
traffic for the server.  The textured plot for all events generated by
a representative individual client (number 15) is shown in figure
\ref{fig:synth-client}.  The plot looks remarkably similar to the ones
encountered by us during our studies.  To verify that the OFF period
lengths for this source indeed follow the Pareto distribution, we generated
a qq-plot and Hill plot for a synthesized client.  The estimate of $\alpha$
that we measured using both techniques was approximately 1.25, which is the
same value that had been used as a parameter to our model.

%\begin{figure*}[tbh]
%\epsfxsize 0.75\hsize
%\begin{center}
%\makebox{
%\epsfbox[0 0 529 202]{./figures/synth_qq_hill.eps}
%}
%\end{center}
%\caption{{\bf Analysis of synthesized ON/OFF sources:}  (a) shows the
%qq-plot and (b) the Hill plot generated for synthesized client number 15.}
%\label{fig:synth-hill-qq}
%\end{figure*}

To test the behaviour of the aggregate traffic, we performed R/S analysis
and variance-time analysis.  The value for the Hurst parameter calculated
from both is 0.615 and 0.697 respectively --- this shows that the aggregate
synthesized traffic is self-similar.  The strength of our model therefore
lies in being able to exhibit the same bulk properties as those of the
traces input to it.

\subsection{ON/OFF Summary}

We have shown that:

\begin{itemize}
\item file system clients from both the NFS and Sprite file system
traces show ON/OFF behaviour.
\item the distribution of ON/OFF period lengths in both traces
is heavy-tailed, and therefore the traces show the Noah effect.
\item it is possible to use this ON/OFF behaviour as the motivation for a
simple packet train model that can be used to synthesize traffic that
exhibits self-similar behaviour.
\end{itemize}
@


1.3
log
@attaaack!
@
text
@d3 2
a4 3
The self-similar behaviour of short-term file system traffic has now been
convincingly demonstrated.  However, we have not yet attempted to explain
the underlying cause of this observed phenomenon.  Willinger {\it et
d11 7
a17 14
self-similar total traffic.  An individual source is classified as being an
ON/OFF source if the traffic from that source appears to contain highly
variably lengthed ON and OFF periods; an ON period contains much activity,
while an OFF period has a complete lack of activity.  The Noah effect
refers to the high variability of the ON and OFF periods. If the
distribution of ON and OFF period lengths from individual sources is
heavy-tailed,
\footnote{A heavy-tailed distribution is typically one
which exhibits infinite variance.  An example of a heavy-tailed
distribution is the Pareto distribution, whose general form is $P(x) =
\beta a^\beta x^{-\beta-1}$ with $a,\beta \geq 0$ and $x \geq a$.  The
Pareto distribution has infinite variance for values of $\beta < 1$.}
then the aggregate traffic exhibits the Noah effect, and can be shown
to exhibit self-similarity.
d116 1
a116 1
uniform, then the aggregation of many such sources gives rise to a
d172 1
a172 1
\epsfxsize 0.80\hsize
d235 2
a236 2
To test the validity of our model, we synthesized file system event
time series for 20 clients and aggregated them to obtain the overall
d244 1
a244 1
same value that had been used as parameter to our model.
@


1.2
log
@Many changes to modify spin of paper.
@
text
@d3 1
a3 1
The self-similar nature of short-term file system traffic has now been
d14 1
a14 1
variable lengthed ON and OFF periods; an ON period contains much activity,
d33 1
a33 1
\subsection{ON/OFF Behavior in the Short-term Traces}\label{onoffbe}
d48 1
a48 1
\epsfysize 0.30\vsize
d61 2
a62 2
of the Sprite traces that was analyzed was extended from a 4 hour subset to
an approximately 41 hour subset; access privilege information was also
d76 4
a79 4
clear that the ON periods for NFS block read events are much sharper
and more dense than for Sprite file open (W) events.  This difference
is easily explainable.  First and foremost, files are known to be read
far more frequently than they are written; from table
d81 6
a86 7
opened with write or RW privileges, while 86.6\% of files are opened
with read-only privilege.  Similarly, \cite{Bake91}
reported that 88\% of files within the Sprite traces were
opened with read-only privilege.   Secondly, many file read and
write events occur in between a given file open and close pair.  The
total amount of read and write events therefore greatly outnumbers the
amount of open or close events.
d158 4
a161 5
We can model individual an individual client's activity as a set of
ON/OFF periods, i.e. a packet train with heavy-tailed train lengths and
inter-train arrival times.  We can then aggregate many such synthesized
clients, and the resulting traffic should exhibit the desired self-similar
behaviour.
d221 1
a221 1
\epsfxsize 0.70\hsize
d268 1
a268 1
from both is 0.615 and 0.697 respectively - this shows that the aggregate
a281 3
\item the Hurst parameters derived from calculated Hill estimates
$\hat{\alpha}_n$ are consistent with those calculated using variance-time
analysis and R/S analysis.
@


1.1
log
@Added confidence intervals.  Added On/off model section.
@
text
@d3 6
a8 7
The self-similar nature of file system traffic has now been convincingly
demonstrated using both short-term and long-term file system traces.
However, we have not yet attempted to explain the underlying cause of this
observed phenomenon.  Willinger {\it et al.}\cite{Will95} proposed a
physical explanation of observed self-similarity in Ethernet LAN traffic,
based on theory developed initially by Mandelbrot\cite{Mand65} and then
Taqqu and Levy\cite{Taqq86}.
d48 1
d91 12
a102 12
\begin{figure*}[tbh]
\epsfxsize 0.75\hsize
\begin{center}
\makebox{
\epsfbox[0 0 521 422]{./figures/hill_qq.eps}
}
\end{center}
\caption{{\bf Hill and qq-plots:} (a) and (c) illustrate Hill and
qq-plots from Sprite data, while (b) and (d) illustrate similar
Poisson distributed synthetic data for the sake of comparison.}
\label{hill_qq_pic}
\end{figure*}
d111 5
a115 2
open (W) events, using a threshold value of 60 seconds.  The resulting
number of ON and OFF periods was $182$ and $181$, respectively.
d129 4
a132 6
Once the ON and OFF periods from a given source have been identified,
we can verify the presence of the Noah effect using two techniques,
one heuristic and the other statistically more robust.  The first
technique makes use of complementary cumulative distribution plots, or
``qq-plots.''\cite{Krat95} The idea is simple: if we assume that the
period length distribution under analysis obeys equation
d140 14
a153 45
Plotting the measured complementary cumulative period length
distribution $P(U > u)$ versus period length $u$ in a log-log plot
should thus yield a straight line with slope $-\alpha$, for large
enough values of $u$.

The observed linearity of the qq-plot in figure \ref{hill_qq_pic}a
clearly demonstrates that the observed ON-period lengths for Sprite
host 42's open (W) events follow a heavy tailed distribution.  For the
sake of comparison, a qq-plot for synthesized Poisson distributed
period lengths are shown in figure
\ref{hill_qq_pic}b.

The second method for identifying the Noah effect is through the use
of a {\it Hill plot}.  Given an ON/OFF process with a complementary
cumulative period length distribution satisfying equation
\ref{heavytail_onoff}, let the set of observed periods be $U_1, U_2,
\ldots, U_n$, with the corresponding order statistics $U_{(1)} \leq
U_{(2)} \leq \ldots \leq U_{(n)}$. The Hill estimate for $\alpha$ is
given by:
\begin{equation}
\hat{\alpha}_n = \left(
       \frac{1}{k} \sum_{i=0}^{i=k-1} ( \log U_{(n-i)} -
                                       \log U_{(n-k)} )
            \right),
\end{equation}
for some $1 < k \leq n$.  The plot of the estimated $\hat{\alpha}_n$
value versus the number of periods $k$ used in the estimation is
called a Hill plot.

A typical Hill plot shows instability for small values for $k$. It
then becomes stable for intermediate values of $k$ and finally
decreases slowly as more lower order terms (not belonging to the tail)
are added.  Ideally, we should observe that $\hat{\alpha}$ stabilizes
with a value between 1 and 2 for a Pareto distribution of $1 < \alpha
< 2$.  Indeed, figure \ref{hill_qq_pic}c shows a fairly stable
$\hat{\alpha}$ value of approximately 1.25 up until a $k$ value of 80,
followed by a gradual decrease, as expected.  For the sake of
comparison, figure \ref{hill_qq_pic}d shows a Hill plot for the same
synthesized Poisson distributed period lengths as were used in figure
\ref{hill_qq_pic}c.

Both the Hill and qq-plot analysis therefore confirm that the observed
ON and OFF periods lengths are Pareto distributed.  This is consistent,
since we have already shown that the aggregate traffic of all observed
ON/OFF sources is self-similar in nature.
d251 16
a266 18
lengths for this source indeed follow the Pareto distribution, we
generated a qq-plot (figure \ref{fig:synth-hill-qq}a) and Hill plot
(figure \ref{fig:synth-hill-qq}b) for synthesized client 15.  The Hill
estimate stabilizes at a value of approximately 1.25, which is
the same value that had been used as parameter to our model.  The
qq-plot also verifies this result.

\begin{figure*}[tbh]
\epsfxsize 0.75\hsize
\begin{center}
\makebox{
\epsfbox[0 0 529 202]{./figures/synth_qq_hill.eps}
}
\end{center}
\caption{{\bf Analysis of synthesized ON/OFF sources:}  (a) shows the
qq-plot and (b) the Hill plot generated for synthesized client number 15.}
\label{fig:synth-hill-qq}
\end{figure*}
d270 2
a271 2
from both is 0.615 and 0.697 respectively - this clearly shows that the
aggregate synthesized traffic is self-similar.  The strength of our model
d277 1
a277 1
To summarize, we have shown that:
d288 2
a289 2
simple packet train model that can be used to synthesize self-similar
traffic.
@

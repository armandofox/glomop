head	1.7;
access;
symbols
	v15b:1.7
	v10b3:1.7
	v10b2:1.6
	v10b1:1.6;
locks; strict;
comment	@ * @;


1.7
date	97.10.30.02.02.05;	author aspolito;	state Exp;
branches;
next	1.6;

1.6
date	97.08.28.01.16.32;	author aspolito;	state Exp;
branches;
next	1.5;

1.5
date	97.08.09.00.10.27;	author aspolito;	state Exp;
branches;
next	1.4;

1.4
date	97.08.04.23.03.04;	author aspolito;	state Exp;
branches;
next	1.3;

1.3
date	97.07.10.23.11.42;	author aspolito;	state Exp;
branches;
next	1.2;

1.2
date	97.07.07.21.24.27;	author aspolito;	state Exp;
branches;
next	1.1;

1.1
date	97.06.21.02.34.55;	author lcddave;	state Exp;
branches;
next	;


desc
@@


1.7
log
@*** empty log message ***
@
text
@#ifndef TRANS_H
#define TRANS_H

typedef SDWord ConID;
typedef DWord RequestID;
typedef DWord ChunkID;
typedef DWord DataSize;
typedef DWord CompType;
typedef VoidHand ChunkHand;


#define TRANS_NO_COMP 1
#define TRANS_ERR_CON_CLOSED  1
#define MAX_CONNECTIONS 4
#define FIRST_CONNECTION 0

typedef struct {
  ConID conID;
  RequestID requestID;
  ChunkID chunkID;

  DataSize metaSize;
  DataSize dataSize;

  VoidHand metaHand;
  VoidHand dataHand;

  /* and now some stuff for database evilness... */
  ULong metaID;
  ULong dataID;
} Chunk;

typedef Chunk* ChunkPtr;

#define transNewChunk (firstUserEvent - 1)

typedef struct {
  enum events    eType;
  Boolean        penDown;
  SWord          screenX;
  SWord          screenY;
  union transData {
    struct transGeneric {
      Word data1;
      Word data2;
      Word data3;
      Word data4;
      Word data5;
      Word data6;
      Word data7;
      Word data8;
    } generic;
    struct {
      ChunkHand chunkHand;
    } newChunk;
  } data;
} transEvent;

typedef transEvent *transEventPtr; 

typedef void (*DataCallback)(DataSize *, DataSize *, void *);

Err StartTrans();
Err StopTrans();
Err SendChunk(ChunkPtr chunk);
void CheckNetwork();
ConID OpenConnection(char * host, unsigned short port, DmOpenRef db);
void CloseConnection(ConID conID, Boolean final);
Err DestroyChunk(ChunkHand ch);
void RegisterNotifyCallback(ConID conID, DataCallback cb, DataSize *total, 
		      DataSize * sofar, void * ptr);

#endif /* TRANS_H */


@


1.6
log
@OFFLINE MODE WORKS
@
text
@d68 1
a68 1
void CloseConnection(ConID conID);
@


1.5
log
@bug fixes and offline cache
@
text
@d4 1
a4 1
typedef DWord ConID;
@


1.4
log
@dl status bar added
@
text
@d70 1
a70 1
void RegisterCallback(ConID conID, DataCallback cb, DataSize *total, 
@


1.3
log
@FIXED OBNIXOUS HANDLE BUGS THAT WERE KILLING THE PILOT.
@
text
@d61 2
d70 2
d74 2
@


1.2
log
@browser works with new transport layer
@
text
@d27 4
a30 1
  
d67 1
@


1.1
log
@.
@
text
@d14 2
d22 4
a25 1
  DataSize size;
d61 2
a62 2
void CheckNetwork(ConID conID);
ConID OpenConnection(char * host, unsigned short port);
@

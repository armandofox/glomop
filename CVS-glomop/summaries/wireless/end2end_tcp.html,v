head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.12.11.03.07.01;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.12.11.03.07.01;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>

<title>

Session Layer on top of TCP

</title>

<body>

<a href=index.html><i>Back to index</i></a>

<h1>

Improving End-to-End Performance of TCP Over mobile Internetworks</h1>

<strong>

Raj Yavatkar and Namrata Bhagawat, U. of Kentucky

</strong>



<p><b>One-line summary:</b>

Split the TCP connection by giving the client a (new, custom) session-layer 
protocol on top of TCP, but accessed using the TCP API (sockets etc).

</p>



<h2>Overview/Main Points</h2>

<ul>

<li> A problem in wireless: MTU sizes smaller than for wired network, so 
packets traversing wired network are smaller than they need to be

<li> Want to maintain compatibility/transparency to existing apps and wired 
infrastructure

<li> Approach: Split TCP by using MHP, a session layer protocol understood at 
MSR and MH (which has modified socket library that connects using session 
protocol when application requests TCP)

<li> MHP is a reliable session layer; maintain state across handoffs

<li> Testbed: Desktop WS¹s "simulating" wireless (lossy, small MTU, bursty 
errors); test program: big FTP

</ul>



<h2>Relevance</h2>



Differs from I-TCP primarily in that I-TCP addresses mobility but not the 
inherent problems of wireless links.



<h2>Flaws</h2>

<ul>

<li> MH-to-MH is then <b>3</b> separate connections!

<li> MTU argument is flimsy; any router in wired Internet could also fragment 
packets. They don¹t discuss why they think this is not relevant.

<li> Complexity of maintaining hard state across HO¹s

<li> Test program pretty specific

</ul>



<hr>

<a href=index.html><i>Back to index</i></a>



</body></html>
@


1.1.1.1
log
@cs294-7 wireless networks summaries
@
text
@@

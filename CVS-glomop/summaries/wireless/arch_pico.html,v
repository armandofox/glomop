head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.12.11.03.07.01;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.12.11.03.07.01;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<title>
Picocellular Networks
</title>
<body>
<a href=index.html><i>Back to index</i></a>
<h1>
An Architecture and Communication Protocol for Picocellular Networks
</h1>
<strong>
Rohit Ghai and Suresh Singh
</strong>

<p><b>One-line summary:</b>
As cell size decreases, the number of handoffs and therefore handoff
overhead within a wireless picocellular networks increases;  a method
for reducing handoff overhead and buffer space required using
multicast groups and mobile trajectory prediction is described, as well as
a network architecture that supports this technique.
</p>

<h2>Overview/Main Points</h2>

<UL>

     <LI><B>Picocells</B>: Picocells (indoor, O(10m)) offer greater
	  frequency re-use, lower power transmitters, and higher
	  throughput.  There will also be many more handoffs between cells;
	  overcoming the overhead associated with handoffs therefore is the
	  critical design element in a picocellular network.

     <LI><B>&quotDumb&quot Handoff</B>:  The wrong way to do handoff
	  is to require old basestations to forward data received
	  during handoffs for open connections to the new basestation.
	  The number of forwarded messages can be shown to be NxMxR,
	  where N is the number of packets that arrive at the old BS
	  during and after a handoff, M is the number of mobile users per
	  cell, and R is the number of cells in the network.

     <LI><B>&quotSmart&quot Handoff</B>:  BS's (called mobility support
	  stations or MSSs in this story) no longer retain intelligence,
	  but rely on a centralized authority called a supervisory
	  host (SH).  The supervisory host calculates the mobile's
	  likely trajectory, and forms a multicast group for MSSs
	  that the mobile is likely to handoff to in the near future.  All
	  packets are multicast to this group;  MSSs that do not
	  currently host the mobile buffer packets in anticipation
	  of a handoff;  such buffered packets are tossed when the MSSs
	  receive an update of the mobile's ackowledged sequence numbers.

     <LI><B>Delayed Buffering</B>:  By keeping track of how long a mobile
	  has spent in previous cells, the SH can guess how long the
	  mobile is likely to remain in the current cell.  The SH therefore
	  can let MSSs in the mobiles multicast group know when they
	  should start buffering in anticipation of the handoff.  This
	  reduces the buffer space required at the MSSs, but increases
	  handoff delay when the SH's guess is wrong.

     <LI><B>Network Architecture</B>:  A connection-oriented network
	  architecture is also described in this paper.  Virtual circuits
	  are set up between end-points.  The communication is optimized
	  for the case of two mobiles in the same network region managed
	  by a one SH (the <i>ACTIVE_LOCAL</I> connection state).
	  Communication with a mobile under a foreign SH is in the
	  <i>ACTIVE_REMOTE</i> state.  <i>POINT</I> means that a SH is
	  forwarding packets for a mobile that moved out of its network
	  region.  <i>ACTIVE_LOCAL</i> destinations are easy to find
	  since the common SH is omniscient.  <i>ACTIVE_REMOTE</I>
	  destinations are found by broadcasting LOCATE packets.
	  Finally, a <i>NASCENT</I> connection is one in the process of
	  being established.

</UL>

<h2>Relevance</h2>
Handoff latency and overhead is a serious issue in picocellular (and even
microcellular) wireless networks.  The multicast group approach is
well-known and has been demonstrated to work.

<h2>Flaws</h2>

<UL>

     <LI> The network architecture described is centralized, connection
	  oriented, and has broadcast route-finding as a common case.
	  These are all bad properties (IMHO) for a wireless network -
	  the handoff work in the paper is much more interesting than the
	  network architecture work.

     <LI> The buffering approach was justified with some rather dubious
	  analytical calculations.  The queuing model used for buffering
	  packets is known to be weak.  The numbers chosen were totally
	  unbased in reality.  The probability distributions used were
	  ad-hoc.  No measurements of any real-life working implementation
	  were presented.  (Possibly because there is not an implementation
	  in existence?)

     <LI> From the paper:  <i>&quotDuring our experiments we noted that, on
	  occasion, packets do not necessarily get delivered to an MH in
	  either the current cell or even the next one...&quot</i>  They
	  don't talk about fading or packet loss at all in this model, nor
	  any other known bad property of wireless links.

</UL>

<hr>
<a href=index.html><i>Back to index</i></a>

</body></html>
@


1.1.1.1
log
@cs294-7 wireless networks summaries
@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.11.14.07.51.58;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.11.14.07.51.58;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<title>
Odyssey
</title>
<body>
<a href=index.html><i>Back to index</i></a>
<h1>
A Programming Interface for Application-Aware Adaptation in Mobile Computing</h1>

<strong>
Brian D. Noble, Morgan Price, M. Satyanarayanan, CMU
</strong>

<p><b>One-line summary:</b>
API for negotiating with server to get one of k fixed representations of an object; extensions to Unix FS to add datatypes and a cache manager for the server.  "Static GloMop".
</p>

<h2>Overview/Main Points</h2>
<ul>
<li>Applications can track changes in bandwidth, latency, disk space, CPU, power, money (collectively, its "environment"); and adapt to changes
<li>App can request to be notified of changes in specific attributes
<li>App makes policy-change requests (datatype specific!) to server
<li>Unix FS extended by adding type info (at the volume level--gack); group of same typed volumes is a codex
<li>Generic cache manager (viceroy) is a control point for managing type-specific cache managers (wardens).  Viceroy is like proxy FE. 
<li> Wardens implement standard and datatype-specific access methods and policies, based on datatype.
<li>E.g. QuickTime warden has SwitchTracks operation which implements policy change.
<li>GRASS warden provides access to logical (Unix) files on servers, and has a notion (not well explained) of "quality" level.
</ul>

<h2>Relevance</h2>
Obvious.

<h2>Flaws</h2>
Static rather than dynamic (Satya says on-the-fly processing is "an optimization"); a festival of terminology; extensions to Unix FS are evil.  Odyssey is about what you'd expect from a FS-centric group.

<hr>
<a href=index.html><i>Back to index</i></a>

</body></html>
@


1.1.1.1
log
@
@
text
@@

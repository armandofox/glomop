head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.11.14.07.51.57;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.11.14.07.51.57;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<HTML>
<HEAD>
    <TITLE>Lessons from Harvest</TITLE>
</HEAD>
<BODY>
<H1>A Hierarchical Object Cache</H1>
USC and UC Boulder; Armando's comments on lessons learned and how they apply
to TCS proxy
<H2>One-line summary</H2>
Various important (and nonobvious) lessons from implementing Harvest cache.
<H2>Main ideas</H2>
<UL>
  <LI>Detailed timing breakdown shows TCP setup is responsible for 15ms
of the 20ms Harvest response time seen by clients.
  <LI>Getting the nonblocking disk I/O and select loop right required tuning
for different systems.
  <LI>Transparency was hardest to get right, due to initial assumption that
URL <I>plus MIME headers</I> gives unique object name; MIME headers are
vastly different for different clients.
  <LI>Timeouts from large MIME headers that required fragmenting sometimes
caused nonmaskable faults to user.
  <LI>Some noncompliant http servers close client connection before reading
all MIME headers!
  <LI>DNS &quot;negative caching&quot; timeouts were too lengthy, causing
users to report that DNS lookups worked fine until Harvest was used.
  <LI>Browser-specific dynamically-generated Web pages cause problems with
hit rates and really require MIME headers to be included in comparison for
correctness.
  <LI>Client and server implementation differences, noncompliance with standards,
and vendor interoperability in general have forced tradeoffs between efficiency/performance,
design cleanliness and operational transparency.
  <LI>Keeping metadata in memory and limiting the VM image size to avoid
page faults was an important win.
  <LI>Monolithic filesystems are the wrong model for the evolving Internet:
feature set is overkill for many applications, implementations are complex
and nonmodular, vendor interoperability is more difficult since components
are &quot;larger&quot; and more tightly coupled to rest of OS...
</UL>
<H2><HR></H2>
<A HREF="index.html">Back to index</A> 
</BODY>
</HTML>
@


1.1.1.1
log
@
@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.11.14.07.51.57;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.11.14.07.51.57;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<HTML>
<HEAD>
    <TITLE>Kerberos Limitations</TITLE>
</HEAD>
<BODY>
<I><A HREF="index.html">Back to index</A></I> 
<H1>Limitations of the Kerberos Authentication System </H1>
<STRONG>Steven M. Bellovin and Michael Merritt, AT&amp;T Bell Labs <BR>
<BR>
</STRONG><B>One-line summary:</B> Kerberos IV is widely distributed and
security is becoming more important, so we need to evaluate its limitations
(lack of features) and weaknesses (attack vulnerabilities), given that it's
being used in some systems whose underlying assumptions differed from MIT
Athena's.  Some problems are fixed in proposed Kerberos V, but not all,
and others are introduced through new mechanisms that have not been thoroughly
analyzed for security.
<H2>Overview/Main Points</H2>
<B>Weaknesses/Limitations (version 4 and 5)</B>
<UL>
<LI>Biggest lose: assumption of secure time system, and resolution of synchronization
required.  Could be fixed by challenge-response protocol during auth handshake.
<LI>Password guessing: no authentication is required to request a ticket,
hence attacker can gather equivalent of /etc/passwd by requesting many tickets.
 Could be fixed by D-H key exchange.
<LI>Chosen plaintext: in CBC, prefix of an encryption is encryption of a
prefix, so attacker can disassemble messages and use just part of a message.
 (Is this true for PCBC?)  Doesn't work in Kerberos IV, since the data block
begins with a length byte and a string, destroying the prefix attack.
<LI>Limitation: Not a host-to-host protocol. (Kerberos 5 is user-to-user;
Kerberos 4 is only user-to-server)
</UL>
<B>Weaknesses in proposed version 5 additions</B>
<UL>
<LI>Inter-realm authentication is allowed by forwarding, but no way to derive
the complete &quot;chain of trust&quot;, nor any way to do &quot;authentication
routing&quot; within the hierarchy of authentication servers.
<LI>ENC_TKT_IN_SKEY of Kerberos 5 allows trivial cut &amp; paste attack
that prevents mutual authentication
<LI>Kerberos 5 CRC-32 checksum is not collision proof (as MD4 is thought
to be)
<LI>K5 still uses timestamps to authentication KRB_SAFE and KRB_PRIV messages;
should use sequence numbers.
</UL>
<B>Recommendations</B>
<UL>
<LI>Add challenge/response as alternative to time-based authentication
<LI>Use a standard encoding for credentials (ASN.1), to avoid message ambiguity;
prevents having to re-analyze each change in light of the redundancy in
the binary encodings of various messages as a possible attack point (like
prefix attack above)
<LI>Explicitly allow for handheld authenticators that answer a challenge
using Kc, rather than just using Kc to decrypt a ticket.
<LI>Multi-session keys should be used to negotiate true one-time session
keys
<LI>Support for special hardware (e.g. keystore)
<LI>Don't distribute tickets without some minimal authentication
<LI>No point in including IP address in credentials, since network is assumed
to be evil
</UL>
<B>Other</B>
<UL>
<LI> Claim: a &quot;smart card&quot; must understand all of Kerberos, otherwise
if it decrypts a ticket and returns it to the host, keys are exposed.  (I
think this is not true for Charon, since we zero out the embedded plaintext
session key of the decrypted ticket, but see below.) 
<LI>What if an attacker grabs the authenticator being transmitted from the
client to Charon?  This authenticator can be encrypted except for the very
first time the transaction is done, when the secure channel hasn't been
set up yet.  I think we should have Ian and/or Steve Bellovin read the Charon
paper.
</UL>
<H2>Relevance</H2>
Kerberos IV is widely disseminated, so even the limitations/weaknesses fixed
in version 5 are worth addressing.  Also, important to note that, just as
for sof tware correctness, any nontrivial change to the system results in
a whole new system whose security properties must be re-derived &quot;from
first principles&quot;, or risk introducing security holes.
<H2>Flaws</H2>
Some of the limitations in Kerberos IV stem from its initial assumptions
in the MIT Athena environment, and some of the formal techniques for security
verification that lead to the discovery of certain attacks were not widely
known when it was designed.  The attacks described on Kerberos 5  suggest
that a thorough verification using formal methods would be wise.<BR>
<HR><I><A HREF="index.html">Back to index</A></I> 
</BODY>
</HTML>
@


1.1.1.1
log
@
@
text
@@

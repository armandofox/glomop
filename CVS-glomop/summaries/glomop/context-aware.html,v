head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	96.11.18.00.14.08;	author fox;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@<html>
<title>
Context-Aware Applications
</title>
<body>
<a href=index.html><i>Back to index</i></a>
<h1>
Context-Aware Computing Applications
</h1>
<strong>
Bill Schilit, Norman Adams, and Roy Want
</strong>

<p><b>One-line summary:</b> A context-aware system is one that can
determine and react to the current physical and computing context of mobile
users and devices, by altering the information presented to users or
commands issued by and on behalf of those users.  </p>

<h2>Overview/Main Points</h2>

<ul>
  <LI> Context-aware computing focuses on mobile-computing in which
       <i>mobile people</i> and not just mobile computers are considered.
       A context-aware system adapts according to location of use,
       neighboring entities, accessible devices, and changes to all of these.
  <LI> Four categories of context-aware applications are presented as two
       orthogonal axis with two points each: fetching information
       vs. giving commands, and manual vs. automatic actions.
       <ul>
	    <li> <B>Proximate selection:</B> this is the manual fetching of
		 context-aware information about input/output devices,
		 non-physical objects and services, or locations.  UI
		 issues of how to emphasize information based on degree of
		 proximity exist.
	    <li> <B>Automatic contextual reconfiguration:</B> this is the
		 automatic selection of information or altering
		 components based on context.  For example, a white-board
                 app may bring up
		 new or existing pages when a person enters a new room, or
		 an OS may decide to spin down a disk when AC power is
		 disconnected.
	    <li> <B>Contextual information and commands:</B> queries on
		 information or commands themselves may be altered by the
		 context of the user.  For example, a migrate button could
		 bring a user's X display to a whiteboard in that user's
		 current room.  Or, a whiteboard may display information
		 relevant to a user because it detected the proximity of
		 that user.
	    <li> <B>Context-triggered actions:</B> these are IF-THEN style
		 rules triggered by contextual information.  For example, a
		 watchdog application will execute arbitrary UNIX shell
		 commands based on rules such as &quotif coffee is made
		 then play the rooster.au sound&quot.  A contextual
		 reminder program raises reminders when a contextual rule
		 is satisfied, like &quotthe next time I see marvin&quot or
		 &quotthe next time I'm in the library&quot.
       </ul>
</ul>

<h2>Relevance</h2>
This work is part of the visionary ubiquitous computing program at Xerox
PARC.  The GloMop research can be thought of as concentrating on a subset
of this framework, specifically the automatic and manual reconfiguration of
computing elements based on the current computing/network context or state.

<h2>Flaws</h2>

<ul>
     <LI> A host of difficulties exist with this framework, such as privacy
	  issues, authentication and security, deciding on the granularity of
	  context changes to recognize or act upon, UI issues for weighting
	  proximity information, networking and OS support for this
	  distribution system spanning many different networking media and
	  computing hosts, etc.  Most of these issues are raised but not
	  addressed in the paper.

</ul>
<hr>
<a href=index.html><i>Back to index</i></a>

</body></html>
@

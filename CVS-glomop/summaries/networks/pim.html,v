head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	97.04.03.18.14.06;	author fox;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@<html>
<title>
PIM
</title>
<body>
<a href="index.html"><i>Back to index</i></a>
<h1>
An Architecture for Wide Area Multicast Routing
</h1>
<strong>
Steve Deering (Xerox), Deborah Estrin (USC), Dino Farinacci (Cisco), Van
Jacobson (LBL), Ching-Gung Liu (USC), Liming Wei (USC)
</strong>

<p><b>One-line summary:</b>
Mcast routing that can dynamically switch between core-based
trees and shortest-path trees to provide efficient behavior for both
sparse and dense mcast groups, using explicit joins (rather than
explicit prunes) and periodic refreshes of soft state in routers.
</p>

<h2>Overview/Main Points</h2>

<ul>
  <li> Motivation:
       <ul>
         <li> link-state and distance-vector mcast routing scale
              poorly for 
              large but sparse groups.
         <li> Explicit pruning scales terribly for large but sparse groups.
         <li> core-based trees trade less router state for longer
              delivery paths and traffic concentration; shortest-path
              delivery trees trade more router state for shorter paths
              and traffic dispersal.
         <li> CBT's work well for sparse groups, SPT's for dense
              groups.  Want a way to flexibly choose between them
              without breaking compatibility/interoperability or tearing
              down the group and recomputing its routes.
       </ul>
  <li> Requirements:
       <ul>
         <li> efficient sparse group support
         <li> high quality data distribution (application can choose low
              delay delivery if needed)
         <li> unicast routing protocol independence (why?)
         <li> interoperability w/existing mcast routing
         <li> robustness: no single point of failure or hard state
       </ul>
  <li> Sparse group support: designate some routers as RP's (rendezvous
       points) for subtree below them. 
  <li> To join an mcast group RP-tree:
       <ul>
         <li> receiver sends PIM-join upstream to nearest RP (may be
              1 or more router hops away)
         <li> RP is in the mcast tree of an upstream source.  When the
              source starts sending, RP will receive a PIM-register
              message.
         <li> At that point it forwards the original PIM-join towards
              the source.
         <li> Note that the RP is now acting as the forwarding agent for
              packets going to the receiver.
       </ul>
  <li> To switch from RP-tree to shortest-path tree:
       <ul>
         <li> PIM-join-SPT message sent upstream towards RP.
         <li> RP propagates message up to mcast source S.
         <li> S then starts forwarding multicast directly on a
              shortest-path tree to the receiver (which probably
              circumvents RP).
         <li> Once receiver starts receiving mcast packets that were not
              sent through RP, it sends RP a PIM-prune message, which
              (a) is forwarded to S, and (b) causes the RP to set up a
              "negative cache" entry for the receiver (i.e. no longer
              forward mcast packets for that receiver).
       </ul>
  <li> Fault tolerance:
       <ul>
         <li> Reachability beacons periodically broadcast downstream
              from  RP's.  If receivers detect an RP has gone away, they
              can target some other RP.
         <li> Since PIM messages are periodically refreshed, they don't
              need to be positively acked.
         <li> Therefore all state in routers is effectively soft state,
              though a few mcast packets may be missed if an RP reboots.
       </ul>
</ul>

<h2>Relevance</h2>

Adaptive mcast routing that leverage the best of both CBT and SPT, and
uses the more efficient explicit-join rather than explicit-prune.  A
step forward for efficiency and scalability of wide area multicast.


<h2>Flaws</h2>

<ul>
  <li> No discussion of how policy (when to switch) might be
       implemented.
  <li> Might the intermediate routers want to control this policy
       (i.e. "Please switch from RP to SP because I am running out of
       routing table entries!")  There seems to be no way for them to do
       this since everything is strictly receiver-driven (all messages
       originate at receivers).
</ul>
<hr>
<a href="index.html"><i>Back to index</i></a>

</body></html>
@

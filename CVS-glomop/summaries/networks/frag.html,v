head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	97.04.03.08.02.10;	author fox;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@<html>
<title>
Fragmentation
</title>
<body>
<a href="index.html"><i>Back to index</i></a>
<h1>
Fragmentation Considered Harmful
</h1>
<strong>
Christopher A. Kent, Jeffrey C. Mogul, DEC WRL
</strong>

<p><b>One-line summary:</b>
Although designers of IP intended for fragmentation to be a
"transparent" lower-layer mechanism to facilitate interoperation of
different networks, in practice its effects are visible to 
upper layers in various evil ways.
</p>

<h2>Overview/Main Points</h2>

<ul>
  <li> Poor performance: <i>Deterministic fragment loss</i> can occur
       when specific frag(s)
       always lost, e.g. some router can't handle back-to-back
       consecutive packets.  Eventually causes livelock.
  <li> Efficient Reassembly difficult: no way to tell at IP layer how
       many other fragments follow, or length of entire dgram.  If total
       size too large to fit in buffers, you lose.
  <li> Avoiding fragmentation:
       <ul>
         <li> Always send small datagrams.  How small?
         <li> Guess path MTU "using a heuristic" (e.g. always send
              minimum-size if going through a gateway; breaks for proxy-ARP)
         <li> Discover path MTU (authors propose a protocol)
         <li> guess/discover MTU and backtrack if wrong: many roundtrips
              may pass before progress is made.
         <li> What if packet routing is nondeterministic, or multiple
              routes exist to destination?
       </ul>
  <li> Path MTU's must be maintained per connection, to allow
       applications to choose among multiple routes (when available) for
       different traffic types, etc.  Since many (most?) networks are
       subnetted, knowing the MTU of some host doesn't necessarily tel
       you MTU of other hosts on same network.
  <li> Authors propose a probe mechanism to discover various quantities
       that can be used to modify network-layer behaviors: bottleneck
       bandwidth and delay, longest queue length, error rate, hop
       count.  They believe that future networks should be designed so
       that this info can be captured <i>for every packet</i>.
  <li> IP implementation things that could help:
       <ul>
         <li> Proper use of "time exceeded" ICMP message could be set to
              indicate that reassembly timer expired (some fragments
              didn't arrive, etc.)  Few IP implementations know how to
              handle this.
         <li> "Fragmentation warning" ICMP message could be sent to
              originating host if router fragments a packet.  Danger: unless
              source host receives the message and acts on it,
              fragmentation will continue and much bandwidth will be
              wasted.  (In general, this seems like a bad idea for a
              best-effort network.)
       </ul>
  <li> Use of transparent fragmentation at a lower layer: authors
       suggest this because deterministic frag loss unlikely, and
       fragmented packets will be transparently "reassembled" as they
       leave some router, allowing more efficient use of larger MTU's
       downstream.  To me this seems a patent violation of e2e.
  <li> Some protocols, e.g. NFS, do intentional fragmentation.  Authors
       denounce as a bad idea, and I agree.
  <li> Summary recommendations not requiring protocol changes:
       <ul>
         <li> Restrict dgrams to 576 bytes if going through a GW.
              (Seems naive to me, given how many packets go through at
              least one GW even on "local" networks)
         <li> Transparent fragmentation (I think violating e2e this way
              is asking for trouble)
       </ul>
</ul>

<h2>Relevance</h2>

Fragmentation is not as "transparent" as IP layer would have you believe.

<h2>Flaws</h2>

<ul>
  <li> How many of the arguments against are a result of a poor choice
       of <i>implementation</i> of fragmentation in IP, as opposed to
       the <i>concept</i> of
       fragmentation?  (e.g. what if all frags contained
       total dgram length?)
  <li> IMHO, collecting (via probes) the info as authors suggest, and
       using it to regulate behavior at the network layer, doesn't seem
       compellingly useful and seems to violate the end-to-end argument
       (and to collect on every packet, as authors suggest, requires
       router cycles and endpoint state that are not obviously worth
       allocating).
  <li> In general, the "band-aids" suggested seem fraught with peril,
       and authors haven't argued that the "harm" (and frequency!) of
       fragmentation is sufficient to merit these risky tactics.
</ul>
<hr>
<a href="index.html"><i>Back to index</i></a>

</body></html>
@

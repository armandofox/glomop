head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	97.03.18.22.28.49;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Added ARIES summary
@
text
@<html>
<title>
Aries
</title>
<body>
<a href="index.html"><i>Back to index</i></a>
<h1>
ARIES: A Transaction Recovery Method Supporting Fine-Granularity
Locking and Partial Rollbacks Using Write-Ahead Logging
</h1>
<strong>
C. Mohan, Don Haderle, Bruce Lindsay, Hamid Pirahesh, and
Peter Schwarz
</strong>

<P><i>Summary by: Steve Gribble and Armando Fox</i>

<p><b>One-line summary:</b>
Extraordinarily intricate and delicate logic necessary for fully general,
robust, and fine-grained recovery and rollback of transactions.
</p>

<h2>Overview/Main Points</h2>

<ul>
     <li> This paper is far too detailed to provide a succint summary.  The
	  highest-level points are:

	  <ul>
	       <li> ARIES records in a <i>log</i> the progress of the
		    transaction, and any actions (including UNDO/REDO)
		    which cause changes to recoverable data objects.
	       <li> ARIES uses write-ahead logging (WAL) - an updated page
		    is written back to the same location from where it was
		    read (<i>in-place updating</i>), and WAL guarantees
		    that log records representing changes to the data must
		    already be on stable storage before the in-place
		    updating of DB data can occur.
	       <li> Some terms and concepts which are important:
		    <ul>
			 <li> forward-processing: updates performed when
			      system is in normal processing mode (SQL
			      calls)
			 <li> partial rollback: ability to set up
			      savepoints during transaction, and request
			      roll back of changes performed by transaction
			      to savepoint
			 <li> total rollback: all updates of transaction
			      are undone
			 <li> normal undo: total or partial rollback when
			      system is in normal operation
			 <li> restart undo: transaction rollback during
			      restart recovery after system failure
			 <li> compensation log records (CLRs) are logs of
			      updates performed during rollback - in ARIES,
			      CLRs are viewed as redo-only log records.
			 <li> page-oriented redo occurs if log record whose
			      update is being redone describes the page of
			      the database that was modified. logical redo
			      is higher-level;  performing a redo may
			      require accessing several pages.
		    </ul>
	  </ul>
     <li> ARIES &quot;features&quot;:
	  <ol>
	       <li> simplicity (!!!!!)
	       <li> operation logging (and value logging)
	       <li> flexible storage management
	       <li> partial rollbacks
	       <li> flexible buffer management (make least number of
		    assumptions about buffer management policies in ARIES)
	       <li> recovery independence - the recovery of one object
		    should not force the concurrent recovery of another
		    object.
	       <li> logical undo - the ability, during undo, to affect a
		    page that is different from the one modified during
		    forward processing (allows higher level of concurrency)
	       <li> parallelism and fast recovery - exploit parallelism
		    during the different stages of restart recovery and
		    during media recovery (multiprocessors are your
		    friends)
	       <li> minimal overhead - good performance during normal and
		    recovery processing
	  </ol>
</ul>

<h2>Relevance</h2>
The canonical paper on transaction recovery.  Shows in gory, gory detail
what is required for industrial strength transaction recovery techniques.

<h2>Flaws</h2>

<ul>
     <li> It's hard to grok, let alone convince yourself that it is correct
     <li> Even if the descriptions are correct, I seriously doubt that
	  anyone besides superman could build an implementation that is
	  correct.  And sadly, the failure mode cannot help but be
	  disastrous...
     <li> No mention is made of the tradeoffs between correctness in all
	  situations and performance.  Can one made some simplifying
	  assumptions about what failures will not occur, or will occur
	  rarely, and use that to optimize performance?
</ul>
<hr>
<a href="index.html"><i>Back to index</i></a>

</body></html>
@

head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	98.08.03.17.58.23;	author fox;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@<html> <head>
<title>ARPA Workshop on Active Networks</title>
</head>

<body bgcolor="#fefeff">
<img src="http://ninja.cs.berkeley.edu/images/logotrans.gif" align=right>
<h1>ARPA Workshop on Active Networks</h1>
<h3>Meeting notes</h3>

<center>
[
 <a href="#newproj">New Project talks</a> |
 <a href="#chall">Grand Challenge brainstorms</a>
]
</center>
<hr>

<a name="newproj">
<h3>New project talks</h3>

<ul>
     <li> PANDA - Peter Reiher, UCLA
	  <ul>
	       <li> <b>One sentence summary:</b> help us deploy GloMo ideas
		    in AN environment.
	       <li> deploy/combine active network services
	       <li> recognize data types, transparently adapt data in
		    transit at AN nodes.  Legacy: GloMo traveller project
	       <li> Apps: multicase videoconf, URL remapping, caching in
		    the network, mobile computer replication support.
		    Caching with Lixia Zhiang
	       <li> want to adapt encrypted data
	       <li> want advice on which AN system they should use as their
		    base.  want advice on sample applications
	  </ul>
	  <p>

     <li> Active Network Aplications - Tom Anderson, UW
	  <ul>
	       <li> <b>One sentence summary:</b> help us deploy WebOS ideas
		    in AN environment.
	       <li> apps:
	       <ul>
		    
		    <li> active naming: name = mobile code to flexibly access
			 service/data.  Unifies URNs, replica load balancing,
			 distillation, mobility, etc.
		    <li> internet measurement: coordinated multipoint
			 measurement to determine link latency, bandwidth, drop
			 rate, queueing delay, and policy, etc.
		    <li> detour: intelligent border routers for aggregated
			 congestion control and adaptive multipath routing.
			 Improve latency, bandwidth, drop rate, predictability,
			 etc.
	       </ul>
	       <li> naming: dynamic binding to service/data.  Active name
		    is program that invokes a service or acquires data.
		    Network version of continuation-passing (3-way RPC).
		    Goal: rent-a-server selection, etc.
	       <li> packing routing:  is indirect path better?  Want to
		    replicate Vern Paxson traceroute measurements to see if
		    indirect route A-&gt;X-&gt;B is better than direct
		    route A-&gt;B.
	       <li> border routers: multipath adapting routing based on
		    measurements.  Accumulate knowledge of network
		    behaviour, as opposed to individual clients discovering
		    (slowstart).
	       <li> Tom's analogy:  IBM FS that contiguously allocated
		    files.  People built own FS on top of IBM's.
		    Demonstrate how much Internet is losing, demonstrate
		    better with AN.  Revolution will follow.
	  </ul>
	  <p>
	  
     <li> Active Networking for Storage - David Nagle, CMU
	  <ul>
	       <li> <b>One sentence summary:</b> help us deploy NASD ideas
		    in AN environment.
	       <li> want to merge AN and network storage
	       <li> network storage (NASD):
		    <ul>
			 <li> eliminate FS server - fundamental bottleneck
			 <li> object store interface (SCSI-4) to drive.
			      Objects
			      supported by in-drive FS.  Drive itself
			      understands crypto capabilities.
			 <li> file manager (separate node) provides policy
			 <li> active disks:  ship code to disks to exploit
			      device cycles.
		    </ul>
	       <li> AN + NASD:  dynamically composed, adaptive storage
		    protocols.  Net components aware of NASD objects:
		    caching, reliability, security, etc.
	  </ul>
	  <p>
	  
     <li> Agent Base Architecture for supporting Aware Security - Roy
	  Cambell, UC Berkeley
	  <ul>
	       <li> <b>One sentence summary:</b> security!
	       <li> oooohh...active nets are scary places....need powerful,
		    flexible, reactive security architectures.
	       <li> blah blah, policy representation framework.
	       <li> global vs. local capabilities - access to node
		    resources, independent of execution environment.
	       <li> this guy said absolutely nothing of substance.  Point
		    dave wagner and ian goldberg to this guy.
	  </ul>
	  <p>
	  
     <li> Scalable, High PErformance Active Network Node - Dan Decasper and
	  Guru Parulkar, ARL Washington U, TIK ETH Zurich
	  <ul>
	       <li> <b>One sentence summary:</b> we want to build AN
		    hardware.
	       <li> goal: platform for AN supporting gigabit traffic
	       <li> platform: scalable hardware platform, distributed code
		    caching, streamlined software platform.
	  </ul>
	  <p>
	  
     <li> Enabling High-Performance Active Networks using Secure Exokernel
	  Implementation - Stephen Schwab, TIS Labs at Network Associates
	  <ul>
	       <li> <b>One sentence summary:</b> we will use exokernel
		    to build high-performance, secure, flexible AN nodes.
	       <li> Goal:  build high-performance node, look at system
		    software (ensure solid security base, flexible security
		    mechanisms, but maintain performance (gigabit++)).
		    Exokernel gives them good enough starting point.
	       <li> approach: build specialized AN node OS.  Features:
		    control access to AN resources, separation between
		    distinct active protocol invocations, mechanisms for
		    controlled sharing, enforce resource usage limits.
	       <li> exokernel: user-level apps manage physical resources.
			      (library OS.)
	       <li> Concentrate on mapping of active protocol
		    packets/sessions to resource rights.  Keep mapping in
		    security cache, that security validator can use for
		    subsequent packets or even protocol invocations.
	       <li> security subsystem:
		    <ul>
			 <li> security manager: import active code, map
			      external authentication/authorization into
			      local access rights based on policy.
			 <li> resource control: CPU, bandwidth, memory.
		    </ul>
	       <li> Plan: check out xok.  prototype on xok.
	  </ul>
	  <p>
	  
     <li> New Cryptographic Techniques for Active Networks - Sandra Murhpy,
	  TIS Labs at Network Associates
	  <ul>
	       <li> <b>One sentence summary:</b> break end-to-end crypto so
		    we can do smart things in AN?
	       <li> Ian and Dave: Sandra is responsible for the AN security
		    architecture document.  Track it down and debunk?
	       <li> old world: if any part of path needs protection, do
		    cryptography end-to-end.  Firewalls starting to break
		    that.  Even so, protection rigidly placed in network on
		    predetermination of risk.
	       <li> Claim: clashes with dynamic/flexible nature of AN.
		    <ul>
			 <li> intermediate nodes need access to the
			      contents of packet, so need to be involved in
			      cryptographic association
			 <li> can be done if can establish circuit with
			      stored state in intermediate nodes - securing
			      a flow of packets.
			 <li> circuits can't be assumed - AN: path through
			      net determined as packets in flight
			 <li> crypto must deal with common paths with some
			      wandering packets, datagram-like packet
			      forwarding.
		    </ul>
	       <li> Observation: active code can do crypto computing as
		    well as net service computing.  Crypto can adapt to
		    environment it encounters.  boundaries can be defined
		    from POV of packet, and dealt with automatically.
	       <li> crypto associations: source-to-dest, per-hop,
		    source-to-each-hop, all nodes.  When do we do key
		    transers?  Considerations: performance.  Who all agrees
		    on keys?
	       <li> develop new techniques for:  doing encrypt/crypto along
		    the way.  Use to build new security services.
	  </ul>
	  <p>
	  
     <li> From Internet to Active Net - John Guttag, MIT
	  <ul>
	       <li> <b>One sentence summary:</b> programming model for AN,
		    plus lots of application ideas.
	       <li> activities: programming model for AN (dynamic
		    deployment, security, multiplexing, soft state, ...),
		    infrastructures to support model (binary
		    checking/transforming, ANTS, PAN, PANTS...).
	       <li> performance matters on end-to-end basis, not per-router
		    performance.
	       <li> Services/apps (Jon Santos, Ulana Legedza):
		    <ul>
			 <li> online auction:  auctioneer notifies network
			      of bidding status, network stores info at
			      some routers, routers reject irrelevant
			      bids, rather than forcing auctioneer to do it
			      - less bandwidth, faster response.
			 <li> quote server: ARs cache quotes, and return if
			      quote satisfies client-specified freshness
			      criteria.
			 <li> web caching for warm pages...
			 <li> &quot;radioactive networks&quot; - adapt
			      protocols based on transmission layer, and to
			      needs of protocol (eg. broadcast headers at
			      higher power).  Configuration of ad hoc
			      networks?  Security?  Dynamic resource
			      allocation (power, spectrum, computation)?
			      Demo:  mobile remote access point - secure
			      data, voice, and video.
		    </ul>
	  </ul>
	  <p>
	  
     <li> Active Signaling Protocols - Bob Braden, ISI/USC
	  <ul> 
	       <li> <b>One sentence summary:</b> portable, active signaling
		    software.
	       <li> Apply active net ideas to signaling: portable signaling
		    software, dynamic installation of new versions,
		    customization of features for users/classes
	       <li> Java foo
	       <li> versioning of protocols, version tree, etc.
	  </ul>
	  <p>
	  
     <li> SwitchWare - Carl A. Gunter, UPenn
	  <ul>
	       <li> <b>One sentence summary:</b> formal methods for AN.
	       <li> Domain Specific Languages (DSLs) make format methods
		    (more) feasible
		    <ul>
			 <li> PLAN - packet language for AN - script
			      instead of packet header
			 <li> keynote - language for trust management
			      compliance verification
			 <li> Query Certificate Manager (QCM) - language
			      for policy-directed certificate retrieval
		    </ul>
	  </ul>
</ul>

<hr>
<a name="chall"></a>
<h3>Grand Challenge Brainstorms</h3>

<h4>Industry Convergence</h4>
<ul>
     <li> Different risk-reward curves for industry, startup, academia
     <li> Get risk low enough so that industry reps can convince higher-ups
     <li> What is convergence?  People can buy COTS AN.
     <li> &quot;application pull&quot; (cost reduction, new functionality)
	  will be driving force of convergence
     <li> why will it happen?  Apps get faster, or more functional, or
	  faster time to market.  (Order of magnitude improvement in any is
	  necessary.)
     <li> how to make it happen?  Java everywhere.  Define what JVM libs
	  must exist.  give code (a reference EE).  
</ul>

<h4>Applications</h4>
<ul>
     <li> trap: saying &quot;but couldn't you do this by persuading cisco
	  to put it in the router?&quot;.  Better approach to do AN and do
	  it yourself rapidly.
     <li> aggregation:  voting, sensor fusion
     <li> dissemination: multi-tiered video
     <li> many-to-many: distributed simulation, games
     <li> downloading per-user software
     <li> security: real-time deployment of incident-specific diagnostics,
	  bypassing corrupted nodes by multi-path delivery, isolating locus
	  of corruption.
     <li> interesting thoughts:
	  <ul>
	       <li> smart spaces == distributed simulation?  app: what is
		    geographically (not cybergraphically) close to me?
	       <li> is active ntes the next stage of plug and play?
	  </ul>
     <li> virtual ISP?
     <li> firewalls?
     <li> net management? zero-cost, zero-risk
</ul>

<h4>Environments</h4>
<ul>
     <li> dependency:  demonstrate and measure apps -&gt; widespread
	  deployment -&gt; available nodeOS platforms -&gt; nodeOS
	  interface
     <li> challenge: consensus.
	  <ul>
	       <li> environments: (P)ANTS, PLAN, JANE, Netscript
	       <li> NodeOSs: Linux w/ Kernel hacks, Scout, NetBSD/FreeBSD,
		    Nemesis, OSToolkit, XOK, SANE, L4
	  </ul>
</ul>

<hr>
<address><a href="http://www.cs.berkeley.edu/~gribble/">Steve
Gribble</a> / <i><a   
HREF="mailto:gribble@@cs.berkeley.edu">gribble@@cs.berkeley.edu</a></i></address>
<!-- hhmts start -->
Last modified: Sun Jul 19 16:10:14 1998
<!-- hhmts end -->
</body> </html>
@

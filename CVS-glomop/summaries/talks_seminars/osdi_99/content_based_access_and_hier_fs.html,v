head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	99.02.26.17.32.37;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	99.02.26.17.30.04;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.2
log
@whoops
@
text
@<html> <head>
<title>Integrating Content-based Access Mechanisms with Hierarchical File
Systems</title>
</head>

<body>
<h2>Integrating Content-based Access Mechanisms with Hierarchical File
Systems<p>
Burra Gopal and Udi Manber (both formerly Arizona)</h2>

<h3>Paper summary</h3>
<ul>
     <li> Old way:  grep in lots of files (slow search, lots of
	  iterations).  New way:  search engines, with 
	  iterative searches refined at human level (fast search, lots of
	  iterations).
     <li> New OS challenge:  provide convenient access to vast amounts of
	  information.
     <li> Strict naming good, hierarchy natural, but not sufficient.
	  Content is important to.
     <li> starting point:  semantic file system (gifford et al 1991).
	  Create virtual directory - name is query, content is symlink to
	  results.  problem:  throws away hierarchical file system
	  completely.
     <li> mix two worlds:
	  <ul>
	       <li> start with regular FS and add semantic features
	       <li> glimpse query system adds semantic directories to FS.
		    Choice of scope of queries, scope consistency.  (Change
		    file, add file, etc., reflected in real FS and in
		    future queries.)
	  </ul>
     <li> semantic directory:
	  <Ul>
	       <li> has associated query.  creates symbolic links to files
		    matching the query.
	       <li> add/remove symbolic links at any time, makes them
		    permanent/prohibiteds.  Adds/removes reflected in all
		    future queries in same directory.
	       <li> scope consistency:  what about foo/bar?  bar has scope
		    only in foo.  but, user can modify stuff and violate
		    these scope constraints.
	       <li> no data consistency:  can modify FS files and query
		    won't be automatically reexecuted - need explicit query
		    recast from user.
	       <li> semantic mount point: interface for interpreting
		    queries (cf syntactic - interface for interpreting path
		    names).  E.g., can connect yahoo query system through a
		    mount.  Now can share classification methodologies, not
		    just data.
	  </ul>
</ul>

<h3>Questions from audience</h3>
<ul>
     <li> 
</ul>
<h3>Steve's thoughts</h3>
<ul>
     <li> worried about wrong problems (permanance of user operations and
	  scope consistency etc, instead of unification of semantic
	  expectations between old FS and new semantic FS)
     <li> correct initial premise - changing notion of view of data from
	  name to content (or at least adding notion to people's
	  vocabulary).
     <li> grr...no implementation details...grr...
</ul>

<hr>
<address><a href="http://www.cs.berkeley.edu/~gribble/">Steve
Gribble</a> / <i><a   
HREF="mailto:gribble@@cs.berkeley.edu">gribble@@cs.berkeley.edu</a></i></address>
<!-- hhmts start -->
Last modified: Thu Feb 25 10:27:01 1999
<!-- hhmts end -->
</body> </html>
@


1.1
log
@more good stuff - osdi 1999
@
text
@d3 1
a3 1
Systems
@

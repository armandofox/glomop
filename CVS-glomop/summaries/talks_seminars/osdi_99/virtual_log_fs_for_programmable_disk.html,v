head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	99.02.26.17.30.07;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.1
log
@more good stuff - osdi 1999
@
text
@<html> <head>
<title>Virtual Log Based File System for a Programmable Disk</title>
</head>

<body>
<h2>Virtual Log Based File System for a Programmable Disk<p>
Randy Wang, Tom Anderson, David Patterson</h2>

<h3>Paper summary</h3>
<ul>
     <li> goal:  what's the minimal latency of writing a random 4K block to
	  a disk surface?
     <li> answer:  if you allow writes near disk head instead of doing
	  seeks, limited by disk bandwidth and not disk seek latency.
     <li> trouble: disk controller and FS at odds with each other, trying
	  to guess each other's behaviour.  IDISK:  move part of FS into
	  disk controller.
     <li> Old way to do it:  host guesses where to write, tells disk, and
	  the disk does it.  New way to do it:  host tells disk where to
	  write, but disk writes where it knows it should, and maintains
	  mapping so that host is none-the-wiser.
	  <ul>
	       <li> mapping: implement as table.  Write to disk in pieces
		    (write anywhere).  Recover table after crash by
		    organizing these pieces in a virtual log.
	       <li> how do you avoid double writing? (Once for data, once
		    for table update.)  Implement LFS on top of virtual
		    log.
	  </ul>
</ul>

<h3>Questions from audience</h3>
<ul>
     <li> Haven't you created two filesystems, instead of splitting across
	  FS and storage system?  Yeah, we have to figure out the interface
	  between the two.
     <li> Databases don't need fast writes, thank you very much.  We have
	  our own logs that spool out to dedicated sequential write disks.
	  Oh yeah?  Let's fight.
     <li> read performance BS-o-meter:  you have a new map as level of
	  indirection, but didn't show any additional read overhead.  True
	  - answer is implement LFS on top of virtual log, and now don't
	  need to introduce any additional data structures.
</ul>
<h3>Steve's thoughts</h3>
<ul>
     <li> 
</ul>

<hr>
<address><a href="http://www.cs.berkeley.edu/~gribble/">Steve
Gribble</a> / <i><a   
HREF="mailto:gribble@@cs.berkeley.edu">gribble@@cs.berkeley.edu</a></i></address>
<!-- hhmts start -->
Last modified: Tue Feb 23 10:30:29 1999
<!-- hhmts end -->
</body> </html>
@

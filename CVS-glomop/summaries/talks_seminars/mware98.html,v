head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	98.10.27.02.53.09;	author fox;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML>
<HEAD>
   <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
   <META NAME="GENERATOR" CONTENT="Mozilla/4.5b2 [en] (Win95; I) [Netscape]">
   <TITLE>Middleware 98 Hilites</TITLE>
</HEAD>
<BODY>

<CENTER>
<H1>
<B>Middleware 98 tidbits</B></H1></CENTER>

<H2>
<B>Integrity &amp; security</B></H2>

<UL>
<LI>
<B>Auto synthesis of transactional component connectors:</B>&nbsp; Refine
basic ACID properties (by writing as logical predicates) by talking about
the pre/post xact state of all components that participate in an xact.
I.e. get distributed ACID commit.</LI>

<LI>
<B>Secure Architectures:</B> independent security mechanism on top of Python-based
object system w/GSSAPI (?).</LI>
</UL>

<H2>
Web session</H2>

<UL>
<LI>
<B>Caching dynamic documents (cookies, cgi, etc.):&nbsp; </B>Pei Cao, Wisc.&nbsp;
Idea: treat page as content+code, run code at caching proxy in Java.&nbsp;
Code part can have (eg) associated <I>logging</I> object for sending stats
back to svr.</LI>

<UL>
<LI>
What kinds of applets aren't bound to origin server?&nbsp; (dynamic content
gen from DB, cgi-bin, etc)&nbsp; More precisely, what's the value of executing
these at the cache (instead of at the client)?&nbsp; Answer: better document
distribution for groups of clients getting things like My Yahoo.</LI>
</UL>

<LI>
<B>Saperlipopette:</B>&nbsp; Eval tools for analyzing various pieces of
a caching proxy (storage size, replace policy, consistency policy, cooperation
with other caches...) &amp; choosing optimization tradeoffs.</LI>
</UL>

</BODY>
</HTML>
@

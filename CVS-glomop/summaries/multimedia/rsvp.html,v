head	1.3;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.3
date	97.04.29.17.22.32;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	96.12.15.21.35.09;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	96.11.14.07.52.32;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.11.14.07.52.32;	author fox;	state Exp;
branches;
next	;


desc
@@


1.3
log
@added mariposa
@
text
@<html>
<title>Summary: RSVP</title>
<body>
<h1>RSVP: A New Resource Reservation Protocol</h1>
Zhang et al. (Xerox PARC/USC)

<p><a href="#content">Summary</a> |
<a href="#relevance">Relevance</a> |
<a href="#rating">Rating</a> |
<a href="./">Back to Index</a></p>

<hr><a name=content><h2>Content Summary</h2>

RSVP is a modular reservation protocol that sits on top of existing
routing and transport protocols (e.g. TCP).  Its unique contributions
include separation of packet filtering from reservation; maintenance of
soft (easily reconstructible after disruption) state at intermediate
switching nodes that helps avoid redundant reservation; and periodic
refresh of path information along a reservation path which if timed out
results in freeing of orphaned resources.  (This last feature is
supposed to use adaptive timeout, NYI.)  The authors suggest that path
maintenance is essentially an inverse routing table and this service
could therefore be provided by the underlying routing service.</p> <p>As
a reservation protocol, RSVP provides a reservation mechanism but makes
no policy decisions; in particular, it does not schedule packets or
select routes, asking for only a single accept/reject decision from each
intermediate switch.  One open issue is whether the interface for doing
this admits the use of sophisticated reservation scheduling such as the
<a href="rtsched_wan.html">scheme proposed by Ferrari et al.</a></p>

<h2>Main points</h2>

<ul>
  <li> Being implemented in commodity products. Reserves "any" kind of
       resources. 
  <li> Receiver-oriented, since it's receiver who sees results of
       network behavior and knows its own limitations.
  <li> Can reserve for multiple flows (senders) at once, dynamically "filter"
       which senders you're listening to (allocate bandwidth among
       active set only)
  <li> Reservation messages: "recursion" not iteration.  Upstream
       routers send reservation messages decoupled from downstream
       links.  E.g. if a router has already satisified Delay&lt;100 for
       some client, a requst from another client on same link asking for
       Delay&lt;200 can be trivially satisfied and need not be
       propagated.
       
</ul>

<hr><a name="relevance"><h2>Relevance to Multimedia</h2>

Modularity and simplicity are two of the characteristics that have made
layered Internet protocols (SMTP, FTP, etc.) successful, and may make
RSVP  a popular "substrate" for work on reservation scheduling. 

<hr><a name=rating><h2>Rating</h2>

4 out of 5: A little verbose and atrociously formatted, but the work is
well-circumscribed, based on sound design goals, and satisfies a
well-defined set of needs common to many reservation protocols with a
simple design. 

<hr><!-------------------------------------------------------------------->
<a href="~fox"><img src=../pix/fox_tiny.gif align=bottom alt="Armando's home
page"></a>
<address>Armando Fox (fox@@cs.berkeley.edu)</address>
</html>
@


1.2
log
@Fixed formats in multimedia summaries, added some GloMop summaries and the computers and society subdir
@
text
@d31 19
d52 3
a54 1
Modularity and simplicity are two of the characteristics that have made layered Internet protocols (SMTP, FTP, etc.) successful, and may make  RSVP  a popular "substrate" for work on reservation scheduling.
d58 4
a61 1
4 out of 5: A little verbose and atrociously formatted, but the work is well-circumscribed, based on sound design goals, and satisfies a well-defined set of needs common to many reservation protocols with a simple design.
@


1.1
log
@Initial revision
@
text
@d7 4
a10 4
<p><a href=#content>Summary</a> |
<a href=#relevance>Relevance</a> |
<a href=#rating>Rating</a> |
<a href=./>Back to Index</a></p>
d14 16
a29 5
RSVP is a modular reservation protocol that sits on top of existing routing
and transport protocols (e.g. TCP).  Its unique contributions include
separation of packet filtering from reservation; maintenance of soft (easily reconstructible after disruption) state at intermediate switching nodes that helps avoid redundant reservation; and periodic refresh of path information along a reservation path which if timed out results in freeing of orphaned resources.  (This last feature is supposed to use adaptive timeout, NYI.)  The authors suggest that path maintenance is essentially an inverse routing table and this service could therefore be provided by the underlying routing service.</p>
<p>As a reservation protocol, RSVP provides a reservation mechanism but makes no policy decisions; in particular, it does not schedule packets or select routes, asking for only a single accept/reject decision from each intermediate switch.  One open issue is whether the interface for doing this admits the use of sophisticated reservation scheduling such as 
the <a href=rtsched_wan.html>scheme proposed by Ferrari et al.</a></p>
d31 1
a31 1
<hr><a name=relevance><h2>Relevance to Multimedia</h2>
@


1.1.1.1
log
@
@
text
@@

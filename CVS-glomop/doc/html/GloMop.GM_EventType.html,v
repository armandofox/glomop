head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 dgourley:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     95.08.06.23.07.19;  author dgourley;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     95.08.06.23.07.20;  author dgourley;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<head>
<a name="_top_"></a>
<title>
Class GloMop.GM_EventType
</title>
</head>
<body>
<a name="_top_"></a>
<pre>
<a href="packages.html">All Packages</a>    <a href="GloMop.html">This Package</a>    <a href="GloMop.GM_Error.html#_top_">Previous</a>    <a href="GloMop.GM_QosPrefs.html#_top_">Next</a></pre>
<hr>
<h1>
Class GloMop.GM_EventType
</h1>
<pre>
<a href="java.lang.Object.html#_top_">java.lang.Object</a>
   |
   +----GloMop.GM_EventType
</pre>
<hr>
<dl>
<dt>
public class <b>
GM_EventType</b>
<dt>
extends <a href="java.lang.Object.html#_top_">Object</a>
</dl>
This class represents the various event codes associated with this package. 
The codes themselves represent changes in network properties. A static method
exists for sending an event "callback" to an application.
<hr>
<a name="index"></a>
<h2>
<img src="images/variable-index.gif" width=207 height=38>
</h2>
<dl>
<dt>
<img src="images/blue-ball-small.gif" width=6 height=6>
<b>
<a href="#GM_BANDWIDTH_FLUCTUATION">GM_BANDWIDTH_FLUCTUATION</a>
</b>
<dd>
This member is meant only as an example of how the event codes should be 
enumerated and represented by this class.
</dl>
<h2>
<img src="images/constructor-index.gif" width=275 height=38>
</h2>
<dl>
<dt>
<img src="images/yellow-ball-small.gif" width=6 height=6>
<a href="#GM_EventType()"><b>GM_EventType</b></a>()
<dd>

</dl>
<h2>
<img src="images/method-index.gif" width=207 height=38>
</h2>
<dl>
<dt>
<img src="images/green-ball-small.gif" width=6 height=6>
<a href="#eventCallback(GloMop.GM_EventType, java.lang.Object)"><b>eventCallback</b></a>(GM_EventType, Object)
<dd>
Callback procedure for when a network property of interest changes.
</dl>
<a name="variables"></a>
<h2>
<img src="images/variables.gif" width=153 height=38>
</h2>
<a name="GM_BANDWIDTH_FLUCTUATION">
<img src="images/blue-ball.gif" width=12 height=12>
</a>
<b>
GM_BANDWIDTH_FLUCTUATION
</b>
<pre>
  public static int GM_BANDWIDTH_FLUCTUATION
</pre>
<dl>
<dd>
This member is meant only as an example of how the event codes should be 
enumerated and represented by this class.
</dl>
<a name="constructors"></a>
<h2>
<img src="images/constructors.gif" width=231 height=38>
</h2>
<a name="GM_EventType"></a>
<a name="GM_EventType()">
<img src="images/yellow-ball.gif" width=12 height=12>
</a>
<b>
GM_EventType
</b>
<pre>
  public GM_EventType()
</pre>
<a name="methods"></a>
<h2>
<img src="images/methods.gif" width=151 height=38>
</h2>
<a name="eventCallback(GloMop.GM_EventType, java.lang.Object)">
<img src="images/green-ball.gif" width=12 height=12>
</a>
<a name="eventCallback">
<b>
eventCallback
</b>
</a>
<pre>
  public static void eventCallback(<a href="#_top_">GM_EventType</a> event,
                                   <a href="java.lang.Object.html#_top_">Object</a> clientdata)
</pre>
<dl>
<dd>
Callback procedure for when a network property of interest changes. Args
are an event code and any associated data. The data is currently typed as
Object this is done since all objects inherit from Object and whatever the
form of the client data we can just use a cast. An additional set of args
need to be added to the method to specify how the method should go about
reaching the app(ie. is the app listening on a given port of host X).
</dl>
<p>
<hr>
<pre>
<a href="packages.html">All Packages</a>    <a href="GloMop.html">This Package</a>    <a href="GloMop.GM_Error.html#_top_">Previous</a>    <a href="GloMop.GM_QosPrefs.html#_top_">Next</a></pre>
</body>
</html>
@


1.1.1.1
log
@initial import of docs dir

@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.06.11.03.56.32;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.06.11.03.56.32;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#!/usr/sww/bin/perl5

# copy www.cs http logs to local disk.

# local pathname
$locallog = '/usr/tmp/fox/httplogs';
# url prefix (directory)
$url = '/logs/http/1996/originals';
# logs
@@logs = ("January.gz", "February.gz");

require "/disks/barad-dur/now/pythia/release/perllib/gm_sock.pl";

$crlf = "\r\n";
foreach $log @@logs {
    open(U,">$locallog/$log") or die;
    $s = connectsock gm_sock "http.cs.berkeley.edu",80;
    $s->writesock("GET $url/$log HTTP/1.0$crlf$crlf");
    
    while ($_ = $s->readsock()) { last if /^\s*$/; }
    warn "Getting $log\n";
    # slurp
    print U $_ while ($_ = $s->readsock_raw());
    close U;
}

@


1.1.1.1
log
@Files to read thru CS HTTP logs and construct input for feeding to
steve's simulator, for determining how many distillers a single WS can
support given "typical" web access patterns.  Note that the program
removes the (disproportionately large number of) refs to eric anderson's
pictures page.
@
text
@@

head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     96.06.11.03.55.02;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     96.06.11.03.55.02;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@#!/usr/sww/bin/perl5

BEGIN {
    push(@@INC, "/disks/barad-dur/now/pythia/release/perllib");
    my $uname = `uname` || `/bin/uname` || `/usr/ucb/uname`  ||
        warn "Can't get uname";
    chomp $uname;
    push(@@INC,
         ($ENV{PERLMOD} || "/disks/barad-dur/now/pythia/release/perlmod.") .
         $uname);
    
}

use Times;
require 'gm_sock.pl';

$port = shift;

$lis = listensock gm_sock $port or die &gm_sock::lasterror();

while (1) {
    warn "Listening on port $port\n";
    $acc = $lis->acceptsock();

    $cmd = $acc->readsock();
    print STDERR "Executing $cmd: ";

    @@start = &gtod();
    open(CMD, "$cmd |") or die $!;

# time when first line goes out

    $_ = <CMD>;
    @@startxmit = &gtod();
    $acc->writesock($_);
# get rest of file
    $acc->writesock($_) while ($_ = <CMD>);
    @@end = &gtod();
    $acc->killsock();

    $time = &Times::utimesdiff(@@startxmit,@@start);
    printf STDERR "\nFirst bytes sent: $time\n";
    $endtime = &Times::utimesdiff(@@end,@@startxmit);
    printf STDERR "Last byte sent: $endtime\n";

}
@


1.1.1.1
log
@Get end-to-end timing for PS to HTMl conversion and firing up the
richtext vieiwer, to get estimate of end-to-end latency to view first page
@
text
@@

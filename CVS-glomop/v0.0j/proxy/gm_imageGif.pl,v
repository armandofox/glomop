head	1.5;
access;
symbols
	release:1.4
	Release:1.1;
locks; strict;
comment	@# @;


1.5
date	95.11.13.05.01.32;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	95.10.20.05.53.35;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	95.10.20.03.58.50;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	95.10.20.03.49.53;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	95.08.23.22.25.27;	author dgourley;	state Exp;
branches;
next	;


desc
@@


1.5
log
@modified to work with new OO proxy interface
@
text
@package gm_imageGif;

#
# This sub is a place holder for any initialization that might need to be
# done for the gif type.
#
sub Init {
    my($self) = shift;
    my($proxy) = shift;
    $self = bless {};
    return $self;
}

#
# This sub is a place holder for any shut down call on gif type.
#
sub Shutdown {
    my $self = shift;
    my $proxy = shift;
    1;
}

#
# This sub shows exactly why the toc should be optional.
#
sub FetchTOC {
    my $self = shift;
    my($proxy) = shift;
    local($reqId, $path) = @@_;
    local(@@drtEntries, @@result);
    local(@@imageData);
    
    $self->{TMPPATH}=$path;

    $#drtEntries = -1;
    $proxy->PackageChunk($reqId, 1, 0, "", @@drtEntries);
}

sub FetchChunk {
    my $self = shift;
    my($proxy) = shift;
    local($reqId, $path) = @@_;
    local($tmpLine, $imageData, @@drtEntries);
    local($convertedPath, @@result);
    local($giftogif);

    $path = $self->{TMPPATH};
    if($path =~ /((\w|\.|\W)+)\.gif/) {
        $convertedPath = $1 . ".2gm";
    } else {
        $proxy->send_error($reqId, "gm_imageGifFetchChunk -- failed to reaquire converted image\n"); 
    }
    
    # I am actually doing the type conversion here currently this should be
    # moved up to a higher lvl in the future, this module should not need to
    # know about other image types.

    # $giftogif = "/disks/barad-dur/now/pythia/bin/giftogif";
    $giftogif = $proxy->{Config}->{home};
    $giftogif .= "/giftogif";
    @@result = $proxy->Exec($reqId, "$giftogif 2 g s $path $convertedPath");
    if ($result[0] == 0) {                  # error!
        $proxy->send_error($reqId, $proxy->last_error());
    }

    unless (open(IMAGE, $convertedPath)) {
        &aux::log("Warning: opening $convertedPath: $!");
        return $proxy->PackageChunk($reqId, 1, 1, "", ());
    }
    while($tmpLine = <IMAGE>) {
	$imageData = $imageData . $tmpLine;
    }
    close IMAGE;

    $imageData = $imageData . "\n";

    
    $#drtEntries = -1;		
    $proxy->PackageChunk($reqId, 1, 1, $imageData, @@drtEntries);
}

#
# The following are just place holders for now.
#
sub PutTOC {
    my $self = shift;
    my $proxy = shift;
    1;
}

sub PutChunk {
    my $self = shift;
    my $proxy = shift;
    1;
}

sub AllDone {
    my $self = shift;
    my $proxy = shift;
    1;
}

sub Incomplete {
    my $self = shift;
    my $proxy = shift;
    1;
}

1;
@


1.4
log
@gifs seem to work.   empty inbox is now detected and returned as empty
toc, rather than as an error
@
text
@d7 5
a11 2
sub gm_imageGifInit {
    1;
d17 3
a19 1
sub gm_imageGifShutdown {
d26 2
a27 1
sub gm_imageGifFetchTOC {
d33 1
a33 1
    $TMPPATH=$path;
d39 2
a40 1
sub gm_imageGifFetchChunk {
d47 1
a47 1
    $path = $TMPPATH;
d67 1
a67 1
        &aux'log("Warning: opening $convertedPath: $!");
d85 3
a87 1
sub gm_imageGifPutTOC {
d91 3
a93 1
sub gm_imageGifPutChunk {
d97 3
a99 1
sub gm_imageGifAllDone {
d103 3
a105 1
sub gm_imageGifIncomplete {
@


1.3
log
@foo
@
text
@d8 1
a8 1

d14 2
a15 2
sub gm_imageGifShutDown {

d51 1
d54 1
a54 1
    @@result = $proxy->Exec($reqId, "$giftogif 2 g s $path >$convertedPath ");
d59 4
a62 1
    open(IMAGE, $convertedPath) || die;
d79 1
a79 1

d83 1
a83 1

d87 1
a87 1

d91 1
a91 1

@


1.2
log
@modified imageGif to work with new OO code
@
text
@a0 3
#!/usr/sww/bin/perl


@


1.1
log
@seni stable version of the mime capable proxy
@
text
@d25 1
d33 1
a33 1
    &gm_type'PackageChunk($reqId, 1, 0, "", @@drtEntries);
d37 1
d41 1
d47 1
a47 1
        &gm_pconnect'send_error($reqId, "gm_imageGifFetchChunk -- failed to reaquire converted image\n"); 
a52 2
    @@result = &gm_type'Exec($reqId, "/disks/barad-dur/now/java/bin/giftogif 2 g s $path >$convertedPath ");

d54 6
d71 1
a71 1
    &gm_type'PackageChunk($reqId, 1, 1, $imageData, @@drtEntries);
@

head	1.2;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.2
date	96.03.09.23.54.11;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	96.03.09.23.52.56;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.03.09.23.52.56;	author fox;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the real Times.pm is now here
@
text
@package Times;

require Exporter;
require DynaLoader;

@@ISA = qw(Exporter DynaLoader);
# Items to export into callers namespace by default. Note: do not export
# names by default without a very good reason. Use EXPORT_OK instead.
# Do not simply export all your public functions/methods/constants.
@@EXPORT = qw(
gtod
);
bootstrap Times;

# Preloaded methods go here.

sub Times::timecmd {
    my($stime,$etime,$ttime);
    my($cmd) = shift;
    my($ntimes) = shift || 5;
    my $status;
    
    for (1..$ntimes) {
        @@stime = &Times::gtod();
        if ($status = system($cmd)) {
            return (-$status);
        }
        @@etime = &Times::gtod();
        $ttime += &Times::utimesdiff(@@etime,@@stime);
    }
    return $ttime/$ntimes;
}

sub Times::utimesdiff {
    my ($t,$u) = &Times::timesdiff(@@_);
    return $t + $u * 1e-6;
}

sub Times::timesdiff {
    my($t1,$u1,$t2,$u2)= @@_;
    # switch times if necessary
    if (($t1 < $t2) || (($t1 == $t2) && ($u1 < $u2))) {
        $tmp = $t1; $t1 = $t2; $t2 = $tmp;
        $tmp = $u1; $u1 = $u2; $u2 = $tmp;
    }
    my $t = $t1-$t2;
    my $u = $u1-$u2;
    if ($u < 0) {
        $t--;
        $u = -$u;
    }
    return ($t,$u);
}

# Autoload methods go after __END__, and are processed by the autosplit program.

1;
__END__
@


1.1
log
@Initial revision
@
text
@d17 38
@


1.1.1.1
log
@gettimeofday() and related support as a Perl 5 extension.
@
text
@@

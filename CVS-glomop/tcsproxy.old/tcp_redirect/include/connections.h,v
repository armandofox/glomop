head	1.3;
access;
symbols
	Yatin-final:1.3
	Yatin:1.3.0.6
	pre-yatin-merge:1.3
	transend-beta2:1.3
	fox-dev:1.3
	tcp_redirect-ng:1.3
	transend-beta-latest:1.3
	Aggregators:1.3
	NoAggregators:1.3
	iang:1.3.0.4
	transend-beta:1.3.0.2;
locks; strict;
comment	@ * @;


1.3
date	97.04.27.03.14.43;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	97.04.26.01.19.14;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	97.04.25.19.03.56;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Aaaugh.
@
text
@#ifndef CONNECTIONS_H
#define CONNECTIONS_H

#define INCOMING 0    /* client to tcp_redirect */
#define OUTGOING 1    /* tcp_redirect to proxy */

#define READ_BLOCKSIZE 8192

typedef unsigned char fd_read_buf[READ_BLOCKSIZE];

typedef struct conn_struct {
  int direction, other_fd;
  int forged_outgoing;    /* 1 if connect succeeded, 0 otherwise */
  int otherdir_open;      /* 1 if other fd is still open */

  struct sockaddr_in remote_host;
  
  int data_len;
  fd_read_buf data;
} conn_st;

void initialize_incoming(void);
void handle_incoming(int listen_fd, fd_set *rfd, fd_set *efd);
void conn_read(int fd);
void conn_write(int fd);
void conn_except(int fd);

#endif
@


1.2
log
@Foo!
@
text
@d7 1
a7 1
#define READ_BLOCKSIZE 4096
d9 1
a9 1
typedef unsigned char fd_read_buf[4096];
d14 1
@


1.1
log
@More changes..
@
text
@d4 6
a9 2
#define INCOMING 0
#define OUTGOING 1
d12 1
a12 1
  int fds[2];
d14 5
@

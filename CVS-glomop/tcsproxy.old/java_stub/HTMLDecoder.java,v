head	1.1;
branch	1.1.1;
access;
symbols
	Yatin-final:1.1.1.1
	Yatin:1.1.1.1.0.6
	pre-yatin-merge:1.1.1.1
	transend-beta2:1.1.1.1
	fox-dev:1.1.1.1
	java_stub-ng:1.1.1.1
	transend-beta-latest:1.1.1.1
	Aggregators:1.1.1.1
	NoAggregators:1.1.1.1
	iang:1.1.1.1.0.4
	transend-beta:1.1.1.1.0.2
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.04.24.19.50.57;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.04.24.19.50.57;	author fox;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@import java.io.*;

class HTMLDecoder
{
  protected InputStream in;

  public HTMLDecoder(InputStream input)
  {
    in = input;
  }

  public void decode() throws IOException
  {
    byte b = (byte)in.read();

    while (b != -1) {
      if (b == 0) {
        b = (byte)in.read();
        if (b == 0) {    // End tag.
          b = (byte)in.read();    // End tag ID.
//          System.out.println("End tag: " + (b - 1));
        }
        else {    // Start tag.
//          System.out.print("Start tag: " + (b - 1));
          b = (byte)in.read();
          while (b != 0) {
            // Now b is attribute ID.
//            System.out.print(" " + (b - 1) + "=");
            // Get the value.
            StringBuffer value = new StringBuffer();
            while ((b = (byte)in.read()) != 0) {
              value.append((char)b);
            }
//            System.out.print(value);
            b = (byte)in.read();    // Get next byte.
          }
//          System.out.println();
        }
        b = (byte)in.read();    // Get next byte.
      }

      else {    // Plain text.
        StringBuffer text = new StringBuffer();
        do {
          text.append((char)b);
        } while ((b = (byte)in.read()) != 0 && b != -1);
//          System.out.println(text);
      }
    }
  }
}


          
          
          

      @


1.1.1.1
log
@
@
text
@@

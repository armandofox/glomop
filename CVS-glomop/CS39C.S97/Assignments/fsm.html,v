head	1.7;
access;
symbols;
locks; strict;
comment	@# @;


1.7
date	97.05.05.21.33.41;	author fox;	state Exp;
branches;
next	1.6;

1.6
date	97.05.05.21.26.20;	author fox;	state Exp;
branches;
next	1.5;

1.5
date	97.04.25.21.52.44;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	97.04.25.17.47.19;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	97.04.18.01.55.55;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	97.04.17.04.08.13;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.04.03.08.00.46;	author fox;	state Exp;
branches;
next	;


desc
@@


1.7
log
@*** empty log message ***
@
text
@<html> <head>
<title>CS39C FSM Assignment</title>
</head>

<body>
<h1>Introduction</h1>

The goal of this assignment is to close the conceptual gap
between "raw hardware" (vacuum tubes or transistors) and machines that
can actually execute programs.  In particular, we'll explore four
questions:

<ol>
  <li> How do you get from "raw hardware" (such as transistors or vacuum
       tubes) to <i>logic gates</i> (circuits) that can make simple yes/no
       decisions? 
  <li> How do you use gates to build <i>combinational logic circuits</i> that
       can perform 
       nontrivial computations?
  <li> How do you use combinational logic circuits to build a machine
       that can execute a fixed program?
  <li> What would you need to add to allow the machine to execute a
       stored program?
</ol>

Question 1 will be the subject of an in-class whirlwind tutorial on
transistors and logic gates.  Questions 2 and 3 will form the part of
the project that you will do; we'll do a "human level simulation" of
your design in class.  Question 4 will be a subject of discussion, and
depending on time, maybe part of the project as well.<p>

In particular, you'll design a working circuit for an electronic
combination door lock, and we'll do a "human simulation" of the design
(each student gets to play the role of a gate or other part of the
circuit, and we'll literally "walk through" the simulation in real life).
<p>

You can work in <i>groups of up to three</i> on this project.  <p>

Here are the assignments that go with the project.  <i>Note the due
dates.</i> 

<font size="+1">
<ol>
  <li> In-Class Tutorial on Transistors and
       Gates
  <li> <a href="fsm1.html">Combinational Logic Design</a> (due 
       on 4/23; you can hand it in on 4/24 in class, but I recommend you
       get started on the next part before this date.)
  <li> <a href="fsm2.html">Introduction to Finite State Machines</a>
       (due in class on 5/1)
  <li> <a href="fsm3.html">Latches, and Putting It All Together</a>
</ol>
</font>

<hr>
<address></address>
<!-- hhmts start -->
<!-- hhmts end -->
</body> </html>
@


1.6
log
@*** empty log message ***
@
text
@d52 1
a52 2
  <li> <a href="fsm3.html">Finite State Machine for Gumball Dispenser</a> (due
       5/8, in class, where we'll do a human-level simulation)
@


1.5
log
@*** empty log message ***
@
text
@d53 1
a53 1
       5/1, in class, where we'll do a human-level simulation)
@


1.4
log
@*** empty log message ***
@
text
@d51 1
a51 2
       (due 4/28 by 5PM, drop off at Computer Science Division main desk
       in 390 Soda)
@


1.3
log
@added FSM assignment files phase 2
@
text
@d53 1
a53 1
  <li> <a href="fsm3.html">Finite State Machine for Door Lock</a> (due
@


1.2
log
@*** empty log message ***
@
text
@d28 3
a30 2
the project that you will do.  Question 4 will be a subject of
discussion, and depending on time, maybe part of the project as well.<p>
d38 1
a38 4
You can work in groups of <i>no more than 4</i> on this project.  In general,
everyone should collaborate for most parts of the project; a few
sections are specifically identified where division of labor might be
useful.
d45 5
a49 3
  <li> <a href="fsm0.html">Review: In-Class Tutorial on Transistors and
       Gates</a> (background reading, for your benefit)
  <li> <a href="fsm1.html">Combinational Logic Design</a> (due 4/24, in class)
d53 2
a54 2
  <li> <a href="fsm2.html">Finite State Machine for Door Lock</a> (due
       5/1, in class)
@


1.1
log
@added FSM assignment
@
text
@d8 1
a8 1
The goal of this assignment is to completely close the conceptual gap
d22 2
a23 1
  <li> What else is needed to allow the machine to execute a stored program?
d26 9
a34 4
The first question will be the subject of an in-class demo.  The
remaining three are for you to do.  In particular, you'll build a
working circuit for an electronic combination lock, using parts we'll
provide (courtesy EECS Dept.)
d37 7
a43 15
The deliverables for this project are as follows:
<ul>
  <li> <b>By 4/10</b>: Read the introductory material below so you'll
       understand the in-class demo.
  <li> <b>By 4/17</b>: Writeup and demonstration of your working
       combinational-logic 
       circuit for the Seven-Segment Display Decoder.
  <li> <b>By 4/24:</b> Writeup and demonstration of your <i>finite state
       machine</i>  that implements a 
       working electronic-combination-lock circuit.
</ul>

You will work in groups on this project.  In general, everyone should
collaborate for most parts of the project; a few sections are
specifically identified where division of labor might be useful.
d47 8
a54 3
  <li> <a href="fsm0.html">Introductory Material (Read By 4/10!)</a>
  <li> <a href="fsm1.html">Combinational Logic</a> (due 4/17)
  <li> <a href="fsm2.html">Finite State Machine for Door Lock</a> (due 4/24)
@

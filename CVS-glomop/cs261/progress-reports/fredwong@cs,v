head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	98.11.20.19.41.56;	author daw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@From davidwu@@cs.berkeley.edu  Fri Nov 13 00:34:01 1998
Return-Path: davidwu@@cs.berkeley.edu
Received: from dilbert.cs.berkeley.edu (dilbert.CS.Berkeley.EDU [128.32.131.87]) by joseph.cs.berkeley.edu (8.8.5/local) with ESMTP id AAA02756 for <cs261-homeworks@@joseph.cs.berkeley.edu>; Fri, 13 Nov 1998 00:34:01 -0800
Received: from localhost (davidwu@@localhost) by dilbert.cs.berkeley.edu (8.8.8/8.6.9) with SMTP id AAA14027; Fri, 13 Nov 1998 00:33:44 -0800 (PST)
X-Authentication-Warning: dilbert.cs.berkeley.edu: davidwu owned process doing -bs
Date: Fri, 13 Nov 1998 00:33:44 -0800 (PST)
From: David Wu <davidwu@@cs.berkeley.edu>
To: cs261-homeworks@@joseph.cs.berkeley.edu
cc: fredwong@@cs.berkeley.edu
Subject: progress
Message-ID: <Pine.BSF.3.96.981113003227.14018A-100000@@dilbert.cs.berkeley.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Status: RO


Sniffer Detection Progress
--------------------------

	We have implemented code to check that exploits the ARP bug to
detect sniffers (works on Linux, but FreeBSD checks against the bug).  We
have also implemented the framework for trying timing attacks to detect
sniffers.  We have the code for sending and receiving various packets
(i.e. TCP fragments, ICMP echo-replies, etc.), and now we are looking at
what is the best packets to send and what replies to look for (as well as
the timing characteristics).  We are also still looking for other ways to 
detect sniffers.  We're also interested in looking at other sniffers
besides sniffit and e-sniff so that we can determine what kinds of packets
we can send to cause measurable response delays.


@

head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	98.09.24.04.32.31;	author daw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@NFS exports

too many trusted accounts
  ... and interactions with NFS root-squishing

trickiness with setting up ftp servers

example with ftp, and static return value from getpwnam()

tftp

rpcinfo, portmapper, mountd, NIS

rexd

port scanning
  and stealth port scanning

.rhosts
  and comments in the .rhosts file

X windows security
  what you can do if you get access
  xhost
  magic cookies
  bug with prng in magic cookies

sendmail, my my
  mailing to programs
  aliases mailing to programs
  mailing to files
  errors to programs

transitive trust

shadow passwords

SATAN

survey on internet hosts
  "shall we dust moscow?"
  study of 1700 interesting net sites
    (banks, govt agencies, newspapers, e-commerce, etc.)
  control group of 500 random net sites
  very weak survey: only non-invasive holes, only stuff that SATAN detects,
    nothing sophisticated -- only old vulnerabilities
  interesting ones less secure -- twice as insecure!
  60% of interesting ones insecure to trivial bugs
    another 9--25% ran wu-ftpd or sendmail
  only 3 out of >2000 even noticed



stealth scanning?
krsh port bouncing, web browser port bouncing, ...
denial of service: RSTs, smurf, ping o' death, echo attacks, land, etc.
  ping of death:
    if (data.length > 65536)
       drop;
    so send fragments so packet has total length 65537, say
    works with any IP/ICMP packet, not just ping
  smurf:
    target->x.y.z.255: icmp request [or anything else]
  echo attack:
    target->target: udp source 7 dst 7: foo
    or worse:
    x.y.z.255->x.y.z.255: udp source 7 dst 7: foo
  land:
    127.0.0.1->target: SYN(s)
    target->127.0.0.1: SYN(t)|ACK(s)
    127.0.0.1->target: ACK(s) [because seq # t was outside the window]
    127.0.0.1->target: ACK(s)
    ...

lessons
  theme of "threat amplification"
  address-based authentication BAD
  denial of service really hard to stop: if attacker can generate packets
    more cheaply than you can handle them, you lose
  in Internet security, network protocols provide very little security;
    you really desperately need crypto
@

head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	98.10.05.03.52.17;	author daw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@From ronathan@@cs.berkeley.edu  Sun Oct  4 07:21:29 1998
Return-Path: ronathan@@cs.berkeley.edu
Received: from nobozo.CS.Berkeley.EDU (nobozo.CS.Berkeley.EDU [128.32.34.58]) by joseph.cs.berkeley.edu (8.8.5/local) with ESMTP id HAA12586 for <cs261-homeworks@@joseph.cs.berkeley.edu>; Sun, 4 Oct 1998 07:21:28 -0700
Received: from Ronathan.netcom.com (ali-ca10-05.ix.netcom.com [209.110.226.69]) by nobozo.CS.Berkeley.EDU (8.8.8/8.6.3) with SMTP id HAA27182 for <cs261-homeworks@@joseph.cs.berkeley.edu>; Sun, 4 Oct 1998 07:18:26 -0700 (PDT)
Message-Id: <3.0.5.32.19981004071610.007bd680@@nobozo.cs.berkeley.edu>
X-Sender: ronathan@@nobozo.cs.berkeley.edu
X-Mailer: QUALCOMM Windows Eudora Light Version 3.0.5 (32)
Date: Sun, 04 Oct 1998 07:16:10 -0700
To: cs261-homeworks@@joseph.cs.berkeley.edu
From: Ron Avnur <ronathan@@cs.berkeley.edu>
Subject: homework -- OOPS
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Status: RO

Hi,
	I accidentally forgot to mail my homework in on Friday and just realized
it.  I'm really sorry, but it was totally complete - I had actually mailed
it to myself on Thursday morning.  Please let me know if you can still
accept it and if you want to see my mail spool . . .

Sorry again,
Ron

>Date: Thu, 1 Oct 1998 10:42:22 -0700 (PDT)
>From: Ron Avnur <ronathan@@postgres.Berkeley.EDU>
>To: Ron Avnur <ronathan@@postgres.Berkeley.EDU>
>Subject: cs261 homework
>X-Status: 
>
>Q1:
>1.  ftpd/gnutar interaction.
>ftp should run as a very limited user with very limited access.
>Therefore, any programs run on the machine by the user would be limited in
>the damage they can do.  This is an example of Least Privilege
>
>2.  Imprefect bookkeeping in sendmail
>the sendmail daemon should run as a user with very little privilege.
>Thus, if a program does run, it can't do much damage by having minimal
>access.  Again, least privilege is being used.
>
>
>3.  Complete mediation in Java
>A java applet or application always has zero access, when mediation
>occurs, then it receives access to that particular resource for just the
>task that has been requested, nothing more.  Once the task (mkdir) is
>done, then access is revoked until it is checked again in the future.
>Once again, I'm using least privilege and making the process run at the
>very minimum as much as possible and only giving limited (time) access to
>resources.
>
>
>4.  Tractorbeaming wu-ftpd
>In order to perform a privileged critical section, a daemon must ask some
>"super process" to do the work on its behalf.  Therefore, the ftp server
>never actually becomes root.  By separating the privileges of processes,
>then a hacker must gain access to the "super process" to gain root access.
>A signal to stop a transfer, for example, would cause the ftp daemon to
>ignore the "super process'" result or ask it to stop.
>
>
>Q2:
>
>I don't know if applets are allowed to, but it could open up a URL and
>leak information in the requesting URL.
>The applet can link back to the server where it came from, say for
>something innocent like telling the server that its still alive.  By
>varying the frequency between checking in with the server, it could
>transfer data.  Likewise, the size of the check-back packet could differ
>to send messages.
>
>Q3:
>
>1.  With only strong authentication, packet hijacking is still possible.
>
>2.  Since all blocks are encripted with the same key and the blocks are
>all the same length, any two blocks that contain the same data will also
>look the same encripted.  I could wait for a user to begin a telnet
>session, and then steal the blocks for letters he types in once the
>session is established.  Its rather easy to predict the first few commands
>a user will send accross.  I could save the blocks for the letters I need,
>and later hijack packets and put in my saved letters in the order I want.
>
>3.  The only difference here is that two blocks that looks the same
>unencripted won't look the same after encription.  However, blocks are
>large enough to contain an entire message (like "pine" or "ls") so I could
>steal those and proceed like above.
>
>4.  In order to fix this, I would suggest authenticating each packet,
>using some MAC.
>
>
>Q4:
>1.  With authenticated positive entries, I don't see any way to pose as
>someone else without breaking into another DNS server.  However, denial of
>service attacks to and from target.com are still possible.  I could
>continuously send DOES NOT EXIST responses to every outgoing and incoming
>message that is routed by target.com's DNS.
>
>2.  In order to save space on the DNS, I would build the data structures
>hierarchically, simalr to the process that is used to generate an IP from
>names.  "edu" would have a list of names that exist and don't.  For each
>of those names, I would have a list of exists and don't exists.  That
>would save the space of writing out a complete name for each entry
>(positive or not).  Another optimization would be to not keep lists for
>names that are already negative.  For example, if brkeley.edu does not
>exist, then neither will cs.brkeley.edu.
>
>
>
>Ron Avnur                         | CONTROL Project
>mailto:ronathan@@cs.berkeley.edu   | http://control.cs.berkeley.edu
>(510)642-1863                     | U.C. Berkeley Computer Science Division
>
>
>
>
>
>
>
>

@

head	1.8;
access;
symbols;
locks; strict;
comment	@% @;


1.8
date	98.09.04.17.29.47;	author daw;	state Exp;
branches;
next	1.7;

1.7
date	98.09.04.17.04.25;	author daw;	state Exp;
branches;
next	1.6;

1.6
date	98.09.04.17.03.20;	author daw;	state Exp;
branches;
next	1.5;

1.5
date	98.09.04.02.18.01;	author daw;	state Exp;
branches;
next	1.4;

1.4
date	98.09.04.02.16.03;	author daw;	state Exp;
branches;
next	1.3;

1.3
date	98.09.04.02.02.06;	author daw;	state Exp;
branches;
next	1.2;

1.2
date	98.09.04.01.11.55;	author daw;	state Exp;
branches;
next	1.1;

1.1
date	98.09.02.22.43.40;	author daw;	state Exp;
branches;
next	;


desc
@@


1.8
log
@*** empty log message ***
@
text
@\documentclass{slides}
\usepackage{times}
\usepackage{landscape}
\raggedright
\addtolength{\textheight}{1in}
\addtolength{\topmargin}{-1.3in}
\addtolength{\textwidth}{1in}
\pagestyle{plain}
\newcommand\dolengths{ %
\setlength{\topsep}{0in}
\setlength{\parsep}{0in}
\setlength{\parskip}{.1in}
\setlength{\itemsep}{0in}
}
\newcommand\bi{\begin{itemize}}
\newcommand\ei{\end{itemize}}
\newcommand\vf{\vspace*{\fill}}
\newcommand\bs[1]{\begin{slide}{} \vf \centerline{\Large #1} \vf \vf}
\newcommand\es{\vf \vf \end{slide}}
\begin{document}

\dolengths
\begin{slide}{}
{
\Large
\begin{center}
Lecture 4

Security principles, \\
military security, \\
the Orange Book, \\
and the advent of networks
\end{center}
}
\end{slide}

\bs{\bf Orthogonal Security}
\bi
\item Orthogonal security: security mechanisms should be implemented
	orthogonally to the systems they protect
\item Examples:
	\bi
	\item Wrappers to transparently improve system security,
	e.g. {\tt tcp\_wrappers}, {\tt securelib}, sandboxing, etc.
	\item Intrusion detection systems
	\item IP security, and out-board encryptors
	\ei
\item Advantages:
	\bi
	\item Simpler $\Rightarrow$ higher assurance
	\item Applicable to legacy, black-box, untrusted code
	\item Can be composed into multiple layers to provide
	more complete or redundant security
	\ei
\ei
\es

\bs{\bf Open Design}
\begin{quote}
``Drive your car to a master mechanic. Tell them that you want
a full diagnostic performed on the engine. Tell them that
they're to do that, but they can't open the hood to get at it.
They will look at you funny.'' \\
\hfill ---Marcus Ranum
\end{quote}

\bi
\item ``Security through obscurity'' is \emph{dangerous}.  This has been known
since 1853.
\item For security-critical code, you want as many people looking at it
as possible
\item Remember: the black hats trade info much more readily than the
white hats, so security information must be distributed to the white
hats (and everyone else) as quickly as possible
\item CERT does this \emph{badly}
\ei
\es

\bs{Open Design, cont.}
\bi
\item Strong vs.\ weak argument for open design:
\bi
\item Weak: Don't \emph{rely} on security through obscurity, because your
secrets will leak out eventually
\item Strong: Your system will actually \emph{benefit} from having everyone
examine its strength
\ei
%\item Designing static vs.\ changing systems:
%\bi
%\item Don't only make your system secure \emph{now}; also know that there
%will be bugs you will need to fix
%\item You need a design that allows these bugs to be discovered, and
%the fixes deployed gracefully
%\ei
\ei
\es

\bs{Open Design, cont.}
\bi
\item But being open doesn't automatically make you secure!
\item Firewall-1 was open source for years before anyone actually bothered
to look at it
\ei
\begin{center}
\begin{tabular}{|c||c|c||}
\hline
& Closed & Open \\
& Systems & Systems \\
\hline
\hline
Insecure & cellphones, & Firewall-1, \\
Systems & backdoors & Kerberos, X11\\
\hline
Secure & Military & pgp, \\
Systems & applications & ssh\\
\hline
\hline
\end{tabular}
\end{center}
\es

\bs{A shift of topics}
{
\large
\begin{center}
Military security, \\
the Orange Book, \\
what worked, \\
and what didn't
\end{center}
}
\es

\bs{Military security}
Military computer security types traditionally worry a lot about
\bi
\item Confidentiality: the military keeps lots of high-grade secrets.
\item High assurance: lives are on the line!
\item Insider threats: with millions of insiders,
you start to get worried about spies.  (Walker, etc.)
\ei
\vskip 0.5in
The Orange Book: a specification for
designing and certifying military-use trusted systems. \\
Intended to encourage commercial developers to build systems
that the military could trust.
\es

\bs{Military security, cont.}
To understand some of the Orange Book, it helps to understand
how military security folks are coming from.
\vskip 0.5in
Background:
\bi
\item Hierarchical authority structures.
\item Existing precedents from paper document handling: \\
	classification markings, codewords, need-to-know,
	specialized procedures, etc.
\item Serious concerns about personnel security.
\item Lots of pre-existing laws and regulations.
\item Dedicated and highly secure communications lines.
\ei
\es

\bs{Orange Book concepts}
Some extraordinarily useful concepts from the Orange Book:
\bi
\item Reference monitors:
a mechanism that implements access control, which is
	\bi
	\item tamper-proof,
	\item simple enough to trust,
	\item and ensures complete mediation
	\ei
\item Trusted computing base (TCB):
the smallest subset of the system which must be trusted
if it is to be secure
\item Assurance: how do you know the TCB does what it claims?
\item Multi-level security, mandatory access control, and covert channels.
\item Object reuse limitations: objects must be zeroized before reuse.
\item Heavy audit logs.
\item Trusted path.
\ei
\es

\bs{Trusted computing base}
\bi
\item often a useful question to ask of any system: can you point to its TCB?
\item e.g., in Java, the TCB includes the JVM, the
bytecode verifier, the security manager, the classloader, \ldots
	\bi
	\item not a good sign for Java's security.
	\ei
\ei
\es

\bs{Object reuse}
Some spectacular failures:
\bi
\item MS Word doesn't zero disk blocks before writing to
them, so sending a Word document to someone else may leak
confidential data.  Oops!
\item Kerberos 4 also has object reuse vulnerabilities:
in some cases, it will send a packet containing data from an
unsanitized buffer.
\ei
\es

\bs{Trusted path}
\bi
\item Trusted path means when you see a ``login:'' prompt,
knowing it's really the trusted login program and not a Trojan horse surrogate.
	\bi
	\item e.g. in NT, pressing CTRL-ALT-DEL gives you a
	guaranteed-good login prompt
	\ei
\item More generally, ``trusted path'' is about how you bootstrap trust.
\ei
\es

\bs{Mandatory access control}
\bi
\item Motivation: subjects are not entirely trusted.
\item Intended to prevent attacks by insiders
(both untrusted users and untrusted code).
\item Based on pre-existing classification procedures:
	\begin{quote}
	No person may have access to classified
	information unless: (a) that person has been determined to
	be trustworthy, i.e., granted a personnel security
	clearance -- MANDATORY, and (b) access is necessary for the
	performance of official duties, i.e., determined to have a
	need-to-know -- DISCRETIONARY.
	\end{quote}
\item All data is tagged with a classification level
(UNCLASSIFIED, SECRET, TOP SECRET, \ldots) and optionally a list
of codewords (NOFORN, ULTRA, \ldots).
\item Codewords allow for compartmentalization (need-to-know).
\item Information cannot flow ``down'' without proper authorization
(de-classification by an authorized security officer).
\ei
\es

\bs{The lattice model}
Mathematically, the MAC policy above lends itself to a lattice model.
\bi
\item Let $C$ be the set of classifications, $W$ the set of codewords.
\item A label $l$ is $l=(l_c,l_w)$ with $l_c \in C$, $l_w \subset W$.
\item You get the partial ordering $\le$ on tags by
\[ l \le l' \qquad \Leftrightarrow \qquad
	l_c \le l_{c'} \mbox{ and } l_w \subset l_{w'} \]
\item Informal policy: you may not read ``up'' or write ``down''
\item Formal rules for access by a subject with tag $l$
to an object with tag $l'$:
\begin{quote}
read allowed only if $l \ge l'$; \qquad
write allowed only if $l \le l'$.
\end{quote}
\item Only trusted software may violate these rules.
\ei
\es

\bs{MAC and integrity}
A serious problem with mandatory access control:
\bi
\item The policy above assures only confidentiality, not integrity.
\item Note that it allows an unclassified user to tamper with even
the most sensitive data!
\item Can obviously ensure integrity with a lattice model, too
	\bi
	\item but the rules are the dual: you may not write up or read down
	\ei
\item And if you try for both mandatory confidentiality and integrity,
the access rules degenerate to the trivial condition
that $l = l'$, which is too inflexible.
\item Moral: you can't have your cake and eat it too.
\ei
\es

\bs{What goes up may never come down\ldots}
\bi
\item In practice, the tendency is for objects to migrate up the lattice,
and soon everything takes on the highest classification level possible.
\item A few simple thought experiments:
	\bi
	\item
	Imagine an Excel spreadsheet containing only unclassified data.
	You add a single classified field somewhere near the end.
	Then you try to print the first page, which contains only
	unclassified fields, to an unclassified printer.
	Will the system let you?
	\item When sending messages from low to high, how do you handle ACKs?
	\item What's the security label on the program counter register?
	\ei
\ei
\es

\bs{What goes up may never come down\ldots (cont)}
\bi
\item You end up needing to build ``trusted'' data pumps which
can de-classify data.
	\bi
	\item requires either human intervention or solving
	a nearly AI-complete problem
	\item and thus is a very difficult problem
	\ei
\item This is yet another serious problem with MAC.
\ei
\es

\bs{Covert channels}
A covert channel is a stealthy way to send information
from high to low:
\bi
\item e.g. by CPU load: to send a ``1'' (``0''), spin-loop (sleep) for a second;
to receive, measure CPU load for a second.
\item All sorts of crazy covert channels: monitor disk head timings,
amount of free memory, etc.
\item Theoretically, the {\em non-interference} property is sufficient
to prevent covert channels.
\item In practice, you end up isolating all programs with different security
labels, and eliminating all resource sharing/multiplexing from your OS.
	\bi
	\item Once you're done, does it really deserve to be called an OS
	anymore?
	\ei
\item In real life, eliminating covert channels is mind-bogglingly difficult.
\ei
This is yet another serious problem with MAC.
\es

\bs{Assurance}
\bi
\item Arguably the most important criterion of all!
	\bi
	\item After all, a false sense of security is worse than no
	security at all
	\ei
\item Note that the Orange Book ties assurance into the certification levels;
its more recent European cousin makes assurance and features orthogonal.
\ei
\es

\bs{Problems with the Orange Book}
It doesn't fit the commercial world, and in some ways it is just plain silly.
\es

\bs{Problems with the Orange Book}
\bi
\item Certification takes many years. \\
\begin{quote}
In a market living on Internet time scales
where time-to-market dominates, this is unthinkably deadly.
\end{quote}
\item Certification is linked to hardware configuration.
\begin{quote}
You end up with obsolete hardware, too.
\end{quote}
\item Any fix, patch, version rev., or change in hardware configuration
requires a re-certification.
\begin{quote}
Oops, there goes another year\ldots
\end{quote}
\item If you want to buy a B1-system, you end up with some 386
running 10-year old software, and it'll cost you \$100k for the privilege.
\ei
\es

\bs{Problems with the Orange Book}
\bi
\item The security policy is all wrong.
\item The Orange Book is heavily concerned about confidentiality
and insider threats.
\item But most commercial enterprises trust all insiders.
	\bi
	\item Anyhow, defending against employees leaking information by
	covert channels is silly, when they can easily walk out with
	floppies in their briefcase.
	% Or send them via a company FEDEX account! :-)
	\ei
\item And availability and integrity controls are more important
than confidentiality in many cases.
\ei
\es

\bs{Problems with the Orange Book}
\bi
\item The threat model is all wrong.
\item In a B1 firewall, you turn off all web access:
	\bi
	\item just in case some spy on a secret network does something
	totally goofy like going to the web page
\begin{verbatim}
http://www.kgb.gov.su/the/attack/begins/at/midnight
\end{verbatim}
	\item so you end up telling your users to {\em go home} and use an
	AOL account.
	\ei
\item Anyhow, worrying about covert channels is just plain silly:
	\bi
	\item nobody in their right mind is going to try to steal information
	from disk head timings when they can have Aldridge Ames for \$100k!
	\ei
\ei
{\small Credits: Marcus Ranum}
\es

\bs{Problems with the Orange Book}
Interestingly, the Orange Book applies only to
non-networked computers.  This is very explicit.
\begin{quote}
Once you plug that C2-certified NT box into a network, it loses
its certification!
\end{quote}
\es

\bs{Results?}
{\bf Software glitches leave Navy Smart Ship dead in the water}
\vskip 0.5in

July 13, 1998:
In September 1997, the Yorktown suffered a systems failure during
maneuvers off the coast of Cape Charles, VA., apparently as a result of
the failure to prevent a divide by zero in a Windows NT application. The
zero seems to have been an erroneous data item that was manually
entered. Atlantic Fleet officials said the ship was dead in the water
for about 2 hours and 45 minutes.
\vskip 1in
\begin{quote}
To first order,
noone buys multilevel certified systems anymore;
everyone is using a Windoze 95 or NT box.
\end{quote}
\es

\bs{Lessons}
\bi
\item Worrying about covert channels is the wrong mindset.
	\bi
	\item Much safer: simply never let untrusted programs get access
	to confidential information.
	\ei
\item MAC probably doesn't help much against untrusted insiders.
	\bi
	\item But it can help stop Trojan horses.
	\ei
\ei
\es

\bs{Networks}
So what happens when you introduce networks anyway?
\vskip 0.5in
Answer: the whole game changes.
\es

\bs{Networks and centralized control}
\bi
\item Networks eliminate all hope of centralized control.
	\bi
	\item unless you magically ensure that your network is secure,
	and only trusted machines are connected to it
	\item and even if you can, it is totally fragile.
	\ei
\item This dooms all hope for multi-level systems or mandatory access control.
	\bi
	\item Do you label each packet with its classification level?
	\ei
\ei
\es

\bs{Networks and the threat model}
In practice, just about the only reasonable threat model
is to assume that the network is totally under the control
of the adversary.
\vskip 0.5in
Why?
\bi
\item Hard to ensure physical security of network links.
\item Multiplexed access means the wire may go right into the enemy's doorstep.
% fiber to the home also means fiber to the home of your enemy
\item Every piece of infrastructure (routers, nameservers, \ldots)
introduces single points of failure.
\item When every computer on the net has access to every other,
scaling is your enemy.
	\bi
	\item This makes it especially critical that all public services
	be perfect.
	\ei
\ei
\es

\bs{Networks}
Networks require new tools:
\bi
\item Techniques for dealing with scale.
\item Techniques for secure communications, and for managing trust.
\ei
The answer to the latter is cryptography.  More next week\ldots
\es


\end{document}
@


1.7
log
@*** empty log message ***
@
text
@d144 3
a146 1
designing and certifying military-use trusted systems.
d290 1
a290 1
	unclassified fields, to a classified printer.
d405 1
d413 1
a413 1
it's certification!
d415 33
@


1.6
log
@*** empty log message ***
@
text
@d18 1
a18 1
\newcommand\bs[1]{\begin{slide}{} \vf \centerline{\Large #1} \vf \vf \dolengths}
d22 1
@


1.5
log
@*** empty log message ***
@
text
@d15 1
a15 1
\newcommand\bi{\dolengths \begin{itemize}}
d18 1
a18 1
\newcommand\bs[1]{\begin{slide}{} \vf \centerline{\Large #1} \vf \vf}
@


1.4
log
@*** empty log message ***
@
text
@d399 1
a399 1
	from disk head timings when they can have Al Ames for \$100k!
@


1.3
log
@*** empty log message ***
@
text
@d252 4
a255 4
	\bi
	\item[read]  allowed only if $l \ge l'$
	\item[write] allowed only if $l \le l'$
	\ei
d264 1
a264 1
\item Note that it allows an unclassified user to modify even
d268 1
a268 1
	\item But rules are the dual: you may not write up or read down
a277 1
An even more serious problem with MAC:
d279 18
a296 12
\item In practice, the tendency is that very quickly everything takes
on the highest classification level.
\item A simple thought experiment:
\begin{quote}
Imagine an Excel spreadsheet containing only unclassified data.
You add a single classified field somewhere near the end.
Then you try to print the first page, which contains only
unclassified fields, to a classified printer.
Will the system let you?
\end{quote}
\item Or consider sending message from low to high;
how do you handle ACKs?
d304 1
d362 1
a362 1
running 10-year old software, and it'll cost you \$20k for the privilege.
d374 1
a374 1
	covert channels is just silly, when they can easily walk out with
d389 1
a389 1
	totally goofy like visiting
d394 1
a394 1
	AOL account!
d396 1
a396 1
\item Anyhow, worrying about covert channels is just silly:
d405 2
a406 2
Interestingly, the Orange Book explicitly applies only to
non-networked computers.
d442 2
a443 1
\item Multiplexed access means the wire may pass through the enemy's desk.
@


1.2
log
@*** empty log message ***
@
text
@d15 1
a15 1
\newcommand\bi{\begin{itemize} \dolengths}
d51 1
a51 1
	\item Can be composed into multiple layer to provide
d67 1
a67 1
\item ``Security through obscurity'' is \emph{bad}.  This has been known
d80 19
d121 1
a121 20
\bs{Open Design, cont.}
\bi
\item Strong vs.\ weak argument for open design:
\bi
\item Weak: Don't \emph{rely} on security through obscurity, because your
secrets will leak out eventually
\item Strong: Your system will actually \emph{benefit} from having everyone
examine its strength
\ei
\item Designing static vs.\ changing systems:
\bi
\item Don't only make your system secure \emph{now}; also know that there
will be bugs you will need to fix
\item You need a design that allows these bugs to be discovered, and
the fixes deployed gracefully
\ei
\ei
\es

\bs{A shift of emphasis}
d142 2
a143 2
The Orange Book: specifications for the
construction of military-use trusted systems.
d148 1
a148 1
how military security folks think about the world.
d150 1
a150 1
Background on military viewpoints:
d174 1
a174 2
if system security is to work
% a useful question to ask of any system: can you point to its TCB?
d183 23
d209 7
a215 2
knowing it's really the trusted login program and not a Trojan horse surrogate
\item More generally, how do you bootstrap trust?
d247 1
a247 1
\[ l \le l' \qquad \rightrightarrow \qquad
d363 1
a363 1
\item The Orange Book is primarily concerned about confidentiality
d372 2
a373 2
\item And authenticity and availability is often far more important
than confidentiality in many commercial environments.
a397 1

d399 2
a400 2
Interestingly, the Orange Book explicitly deals only
with non-networked computers.
d405 4
d410 36
a445 1
So what happens when you introduce networks anyway?
d449 6
a455 1

@


1.1
log
@*** empty log message ***
@
text
@d121 267
@

head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	98.10.07.22.36.50;	author daw;	state Exp;
branches;
next	;


desc
@@


1.1
log
@*** empty log message ***
@
text
@old intrusion detection
o  single-host intrusion detection vs. network intrusion detection
o  misuse detection vs. recognizing typical legitimate behavior
o  "with help from computers you're monitoring" vs. "without help"
   (i.e. this is non-orthogonal vs. orthogonal distinction)

network intrusion detection
o  motivation:
   o  very hard to protect systems against attack, plus scalability problems
   o  defense in depth
   o  outgoing attacks (not a security issue but a liability issue)
   o  insider attacks  (if you put IDS on internal links)
      insider attacks just mean from inside -- can be to inside or to outside
o  definition: when most people say IDS, they really mean "attack detection",
   usually
o  design considerations
   o  high volume
   o  real-time notification?
   o  extensible
   o  log for later use
   o  watch out for denial of service
o  main contributions of bro paper
   o  don't get confused by adversarially-constructed input
   o  use specially-developed event-driven little language
      for policy specificatino
   o  getting false alarm rate down is really important
   o  log all syn/fin/rst packets for offline analysis
o  bro assumes one or other side is trusted (doesn't matter which)
o  don't get overloaded
   o  fail safe
   o  watch out for denial of service attacks
o  don't get confused ("subterfuge")
   o  rox^Hot
   o  fragments
   o  overlapping TCP packets
   o  TTL games
   o  ENID
   o  different OS's behave differently (overlapping IP fragments, TCP segments)
   o  insertion (make a packet appear that IDS missed)
      e.g. send a udp packet with bad checksum (solaris)
   o  deletion (make a IDS see a packet that the end hosts don't)
   o  IDS has limited memory space (wait a long time between packets)

@

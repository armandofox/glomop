head	1.3;
access;
symbols
	Yatin-final:1.3
	Yatin:1.3.0.2
	pre-yatin-merge:1.3
	transend-beta2:1.2
	fox-dev:1.2.8.1
	frontend-ng:1.2
	transend-beta-latest:1.2
	Aggregators:1.2
	NoAggregators:1.2
	iang:1.2.0.4
	transend-beta:1.2.0.2
	SOSP:1.2
	merged_preintegrate:1.2
	heisenbug:1.2
	PRE_INTEGRATION:1.2
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	97.08.30.21.34.26;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	96.10.28.02.06.01;	author fox;	state Exp;
branches
	1.2.8.1;
next	1.1;

1.1
date	96.10.25.00.25.20;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.10.25.00.25.20;	author fox;	state Exp;
branches;
next	;

1.2.8.1
date	97.08.11.04.12.57;	author fox;	state Exp;
branches;
next	;


desc
@@


1.3
log
@reintegrated from branch fox-dev; bug remaining in dispatch.c which should always return a DistillerStatus and not an HTTP_Status
@
text
@#include <config_tr.h>
#include <stdio.h>
#include <unistd.h>

#define NTASKS 4*60

int
main(ac,av)
     int ac;
     char *av[];
{
  int res;
  int j;
  task_t done[NTASKS];

  if ((res = make_threads(NTASKS>>2)))
    exit(1);

  for (j=0; j<NTASKS; j++) {
    done[j].task_id = j;
    done[j].task_result_ptr = (void *)j;
    fprintf(stderr, "Dispatching task %d...\n",j);
    dispatch(&done[j]);
  }
  while (1) {
    sleep(1);
    for (j=0; j < NTASKS; j++) {
      if ((int)(done[j].task_result_ptr) > 0) {
        fprintf(stderr,"task %d = %d\n", j, (int)(done[j].task_result_ptr));
        done[j].task_result_ptr = (void *)(-1);
      }
    }
  }
}
@


1.2
log
@HTTPd thread can accept socket connections, queue them to be handled,
and have them successfully picked up, done and deallocated.
@
text
@d1 1
a1 1
#include <proxy.h>
@


1.2.8.1
log
@armandos development version for rebuilding the frontend - do not use
@
text
@d1 1
a1 1
#include <config_tr.h>
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
#define NTASKS 4*MAX_THREADS
d16 1
a16 1
  if ((res = make_threads()))
@


1.1.1.1
log
@
@
text
@@

head	1.4;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	96.10.25.00.24.55;	author fox;	state dead;
branches;
next	1.3;

1.3
date	96.10.11.02.29.15;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	96.10.11.00.43.32;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	96.10.09.00.59.57;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.10.09.00.59.57;	author fox;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@/*
 *  log.c
 *  Error logging and debugging
 */

#include <debug.h>
#include <stdarg.h>
#include <stdio.h>

static int debug_mask = DBG_ALL;

void set_debug_mask(mask)
     int mask;
{}
  

void _proxy_errlog(const char *file,const int line,char *str,...)
{
  va_list ap;
  va_start(ap,str);
  fprintf(stderr, "%s(%d): ", file, line);
  vfprintf(stderr, str, ap);
  fprintf(stderr, "\n");
  va_end(ap);
}

void _proxy_debug(const char *file, const int line, int what, char *str, ...)
{
  va_list ap;
  va_start(ap,str);
  if (what & debug_mask) {
    fprintf(stderr, "Dbg %s(%d): ", file, line);
    vfprintf(stderr, str, ap);
    fprintf(stderr, "\n");
  }
  va_end(ap);
}
      
void proxy_shutdown(void)
{
  fprintf(stderr,"Shutting down...\n");
  exit(1);
}
@


1.3
log
@*** empty log message ***
@
text
@@


1.2
log
@*** empty log message ***
@
text
@d39 5
@


1.1
log
@Initial revision
@
text
@d7 2
d10 1
a10 1
static const int debug_mask = DEBUG_ALL;
d17 1
a17 4
void _proxy_errlog(file,line,str)
     const char *file;
     const int line;
     char *str;
d19 6
a24 1
  fprintf(stderr, "%s(%d): %s", file, line, str);
d27 1
a27 5
void _proxy_debug(file, line, what, str)
     const char *file;
     const int line;
     int what;
     char *str;
d29 8
a36 2
  if (what & debug_mask)
    fprintf(stderr, str);
@


1.1.1.1
log
@front end of proxy: main control code
@
text
@@

head	1.2;
access;
symbols
	Yatin-final:1.2
	Yatin:1.2.0.6
	pre-yatin-merge:1.2
	transend-beta2:1.2
	fox-dev:1.2
	transend-beta-latest:1.2
	Aggregators:1.2
	NoAggregators:1.2
	iang:1.2.0.4
	transend-beta:1.2.0.2
	SOSP:1.2
	merged_preintegrate:1.2
	heisenbug:1.2
	PRE_INTEGRATION:1.2;
locks; strict;
comment	@// @;


1.2
date	96.11.28.01.24.52;	author yatin;	state Exp;
branches;
next	1.1;

1.1
date	96.11.28.00.01.02;	author yatin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Modified monitor.tcl to auto-scale the y-axis
Modified ptmnet.cc to send distiller-load information to the monitor agent
@
text
@#include "communication.h"

int main(int argc, char **argv)
{
  MulticastSocket sock;
  char buffer[500], ipAddress[80];
  int len, port=0, ttl=0;

  strcpy(ipAddress, "");
  if (argc!=2) {
    fprintf(stderr, "Usage: %s multicast-addr/multicast-port[/ttl]\n",argv[0]);
    return -1;
  }

  sscanf(argv[1], "%[^/]/%d/%d", ipAddress, &port, &ttl);
  if (sock.CreateSender(ipAddress, port, ttl)==FALSE) {
    printf("Couldn't create multicast socket\n");
    return 1;
  }

  while(1) {
    printf("--> ");
    gets(buffer);
    if (strcmp(buffer, "quit")==0 || strcmp(buffer, "exit")==0) break;

    len = strlen(buffer);
    while(len > 0 && (buffer[len-1]=='\n' || buffer[len-1]=='\r')) 
      buffer[--len] = '\0';

    int read=0, write = 0;
    while(read <= len) {
      if (buffer[read]=='\\' && buffer[read+1]=='n') { 
	buffer[write] = '\n';
	read += 2;
      }
      else {
	if (buffer[read]==';') {
	  buffer[write] = '\001';
	}
	else {
	  buffer[write] = buffer[read];
	}
	read++;
      }
      write++;
    }

    if (sock.Write(buffer, strlen(buffer)+1)==FALSE) {
      printf("Write error\n");
    }
  }

  return 0;
}

@


1.1
log
@Doing a complete checking after adding TimeChart to the Monitor GUI
@
text
@d3 1
a3 1
int main()
d6 2
a7 2
  char buffer[500];
  int len;
d9 8
a16 1
  if (sock.CreateSender("224.6.6.6", 6666, 1)==FALSE) {
@

head	1.18;
access;
symbols
	Yatin-final:1.17.2.1
	Yatin:1.17.0.2
	pre-yatin-merge:1.17
	transend-beta2:1.17
	fox-dev:1.15
	transend-beta-latest:1.9
	Aggregators:1.9
	NoAggregators:1.9
	iang:1.8.0.4
	transend-beta:1.8.0.2
	SOSP:1.7
	merged_preintegrate:1.4
	heisenbug:1.4
	PRE_INTEGRATION:1.4
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.18
date	98.01.16.22.15.58;	author yatin;	state Exp;
branches;
next	1.17;

1.17
date	97.08.05.00.09.06;	author gribble;	state Exp;
branches
	1.17.2.1;
next	1.16;

1.16
date	97.08.04.23.12.48;	author gribble;	state Exp;
branches;
next	1.15;

1.15
date	97.07.31.01.48.10;	author fox;	state Exp;
branches
	1.15.4.1;
next	1.14;

1.14
date	97.07.26.00.29.46;	author fox;	state Exp;
branches;
next	1.13;

1.13
date	97.07.22.01.06.49;	author yatin;	state Exp;
branches;
next	1.12;

1.12
date	97.07.16.08.15.34;	author fox;	state Exp;
branches;
next	1.11;

1.11
date	97.06.12.21.22.07;	author fox;	state Exp;
branches;
next	1.10;

1.10
date	97.06.12.18.31.44;	author fox;	state Exp;
branches;
next	1.9;

1.9
date	97.05.14.04.36.08;	author gribble;	state Exp;
branches;
next	1.8;

1.8
date	97.03.17.10.28.07;	author fox;	state Exp;
branches;
next	1.7;

1.7
date	97.01.29.23.55.46;	author fox;	state Exp;
branches;
next	1.6;

1.6
date	97.01.28.03.55.20;	author fox;	state Exp;
branches;
next	1.5;

1.5
date	97.01.08.03.39.16;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	96.11.28.00.01.01;	author yatin;	state Exp;
branches;
next	1.3;

1.3
date	96.11.23.21.40.25;	author yatin;	state Exp;
branches;
next	1.2;

1.2
date	96.11.22.23.07.46;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	96.11.21.23.25.09;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.11.21.23.25.09;	author fox;	state Exp;
branches;
next	;

1.15.4.1
date	97.08.15.08.16.50;	author fox;	state Exp;
branches;
next	;

1.17.2.1
date	97.11.17.22.06.51;	author yatin;	state Exp;
branches;
next	;


desc
@@


1.18
log
@- new wingman frontend
- new wingman aggregators mechanism
- DistillAsync

(merged from branch Yatin-final)
@
text
@# Generated automatically from Makefile.in by configure.
# This Makefile is used to create several test cases for Tcl's load
# command.  It also illustrates how to take advantage of configuration
# exported by Tcl to set up Makefiles for shared libraries.
# SCCS: @@(#) Makefile.in 1.11 96/04/15 09:50:19

CC = @@CC@@
CXX = @@CXX@@
CFLAGS = @@CFLAGS@@
LIBS = @@LIBS@@ @@TCLLIBS@@
INSTALL = @@INSTALL@@

UNAME = $(shell /bin/uname)
ifeq ($(UNAME), Linux)
	SHLIB_LD = $(CC) -shared
else
	SHLIB_LD = $(CC) -G
endif

SHLIB_SUFFIX =		.so
SHLIB_VERSION =		
SRC_DIR =		.
INCLUDEPATH = @@INCLUDEPATH@@
INCLUDES_= $(patsubst %,-I%,$(INCLUDEPATH))
INCLUDES= 		@@TCLINCLUDE@@ $(INCLUDES_)

TCL_VERSION=@@TCL_VERSION@@

MON_SRCS = $(wildcard *.tcl) tudp$(SHLIB_SUFFIX)

CC_SWITCHES = $(CFLAGS) $(INCLUDES) -DTCL_MEM_DEBUG

TARGETS = tudp$(SHLIB_SUFFIX) libmon.a

all: $(TARGETS)

install: $(patsubst %,../sbin/%,$(MON_SRCS)) ../lib/libmon.a

../sbin/%: %
	$(INSTALL)  $< $@@

../lib/%: %
	$(INSTALL)  $< $@@

tudp$(SHLIB_SUFFIX): tudp.c
	$(CC) -c $(CC_SWITCHES) $^
	${SHLIB_LD} tudp.o $(SHLIB_OPTS) -o $@@

libmon.a: monitor.o
	ar rc $@@ $^

monitor.o: monitor.c libmon.h
	$(CC) -c $(CC_SWITCHES) $<

monitortest: monitortest.o ../ptm/multicast.o ../ptm/sockets.o ../ptm/error.o \
	../ptm/database.o ../ptm/eventhan.o ../ptm/threads.o
	$(CXX) -o $@@ $^ $(LIBS)
monitortest.o: monitortest.cc
	$(CC) -c $(CC_SWITCHES) $<
clean:
	rm -f *.o *~ *${SHLIB_SUFFIX} config.cache config.log config.status \
		lib.exp

distclean: clean
	rm -f Makefile

dist:
	gtar -zcf gui.tgz Makefile README *.tcl *.[ch] *.pl monitor.options
@


1.17
log
@Fixed typo in makefile for SHLIB
@
text
@d26 2
a27 2
# Makefile BUG:: TCL_VERSION should not be hardwired!
TCL_VERSION=		7.5
@


1.17.2.1
log
@- Modularized the wingman frontend by splitting wing_go_proc into
  multiple smaller functions

- New aggregator mechanism for wingman proxies. The WingDispatch worker
  receives a request with a special content-type application/x-wingman-agg.
  The body of the request contains the full aggregator url

  The worker should return a valid HTTP response, which might be a
  pilot-ready document (i.e. an x-wingman/* document) or an HTTP
  redirect to a new URL, or whatever it chooses!)

- The WingDispatcher is now expected to weed out unintelligible content-types
  and return a content-type of x-wingman/<integer> to the frontend, where
  <integer> represents the integral content type returned to the pilot client.

- Agglist: this appears at the dispatcher as a special aggregator request
  with a url of agg://agglist/ (this URL is actually defined in the
  gm_options file, so the worker should check against the gm_options
  entry, rather than a hard-coded entry). The worker that handles this
  request *MUST* return a document with content type
  x-wingman/2 and the actual agglist as part of the data.

  For old browsers, the data part of this response is stuffed into an
  appropriate metadata field by the frontend before sending the reply to
  the client (i.e. it is backward compatible). For browsers with the new
  version number, the browser will no longer set any special flags in the
  metadata field of the client request. Instead it will explicitly request
  for the agg://agglist/ url. It'll check the ContentType field in the
  response for content type 2 to match up the correct response.

- Created a new version number for the agglist changes:
  #define CLIENT_VERSION_NEWAGG 0x01050200

- gm_options changes:
  Here are the three new gm_options entries for wingman: (the
  wingman.text.prefetch_href replaces the old prefetch.href entry)

  wingman.about_url: http://www.isaac.cs.berkeley.edu/pilot/wingman/about-
  wingman.agglist_url: agg://agglist/
  wingman.text.prefetch_href: 10

- PTM changes:
  - Background distillers work. Specify the -e flag before the -- in the
    gm_options line for the distiller. The PTM will IMMEDIATELY respawn the
    distiller if it crashes. This mechanism is still very simple and naive
  - Distillers can rename themselves: API function DistillerReregister.
@
text
@d26 2
a27 2

TCL_VERSION=@@TCL_VERSION@@
@


1.16
log
@added tudp($SHLIB_SUFFIX) to the MON_SRCS so that tdup.so would get
installed in sbin/
@
text
@d29 1
a29 1
MON_SRCS = $(wildcard *.tcl) tudp($SHLIB_SUFFIX)
@


1.15
log
@changes to correct behavior of Install targets
@
text
@d29 1
a29 1
MON_SRCS = $(wildcard *.tcl)
@


1.15.4.1
log
@*** empty log message ***
@
text
@d37 1
a37 1
install: $(patsubst %,../sbin/%,$(MON_SRCS)) ../lib/libmon.a ../lib/tudp.so
@


1.14
log
@makefile fixes to have lib/ subdir now work on both.  anonymization added to frontend.  still a lurking stack-stomping bug in httpsupport.c
@
text
@d33 1
a33 3
install: all
	$(INSTALL) $(MON_SRCS) tudp$(SHLIB_SUFFIX) ../sbin/	
	$(INSTALL) libmon.a ../lib/
d35 9
a43 1
all: tudp$(SHLIB_SUFFIX) libmon.a
@


1.13
log
@Modified Makefile.in in gui to get it to compile on Solaris
@
text
@d35 1
@


1.12
log
@makefile changes to get everything to compile with 2 different versions of pthreads, and with tcl/tk that does not already link the gcc library.
@
text
@d14 1
a14 1
ifeq ($(CC), gcc)
a15 1
	SHLIB_OPTS = -lgcc
@


1.11
log
@*** empty log message ***
@
text
@d14 1
a14 1
ifeq ($(UNAME), Linux)
d16 1
a20 1

d41 1
a41 1
	${SHLIB_LD} tudp.o -o $@@
@


1.10
log
@various changes to makefiles to support auto-installation into sbin and bin directories.  perl HTML distiller no longer inserts UI in pages with frames.  PREFS_URL and similar strings are now static char* instead of #defines, but still need them to be initialized in PTM stub so distillers can get at them.  "run" targets are better now, they run stuff from the sbin and bin directories.
@
text
@d34 3
a37 1
	$(INSTALL) $(MON_SRCS) tudp$(SHLIB_SUFFIX) ../sbin/	
@


1.9
log
@mon is now libmon.a, not libmon.so.
@
text
@d11 1
d30 2
d35 1
@


1.8
log
@*** empty log message ***
@
text
@d31 1
a31 1
all: tudp$(SHLIB_SUFFIX) libmon$(SHLIB_SUFFIX)
d37 2
a38 2
libmon$(SHLIB_SUFFIX): monitor.o
	$(SHLIB_LD) $^ -o $@@
@


1.7
log
@fixes to client_lib to compile correctly with new libmon.h
@
text
@d54 3
@


1.6
log
@bug fix to tudp.so, usability fixes to libmon
@
text
@d40 1
a40 1
monitor.o: monitor.c mon.h
@


1.5
log
@Added "dying gasp" functionality to MonitorClient class: whenever a new
monitor is created, globals are set to record its socket id and unit
name, so that the program can respond to signals by jumping to a signal
handler that announces the program's death by sending a death packet.
New functions in monitor.cc: DyingGasp (class method), GaspOnSignals
(instance method), extern "C" void MonitorClientSigHandler (C signal
handler), CurrentMonitorSock and CurrentUnitId (static variables in
monitor.h).  If you can think of a better way to do this, please change
it.

Fixed bug in frontend HTTP request parsing that caused multi-packet
requests not to be read correctly.

Many changes to the monitor, mostly cosmetic, some functional, including
addition of "kill" button (there is now a "death protocol") and more
sane show/hide behavior that is integrated with iconifying.
@
text
@d16 1
a16 1
	SHLIB_LD = $(CC) -r
d26 1
@


1.4
log
@Doing a complete checking after adding TimeChart to the Monitor GUI
@
text
@d30 1
a30 1
all: tudp$(SHLIB_SUFFIX)
d35 6
@


1.3
log
@Updated GUI with new command line options
@
text
@d8 1
d10 1
a10 1
LIBS =			@@TCLLIBS@@ -ldl @@SOCKLIBS@@ -lm -lc
d23 3
a25 1
INCLUDE_DIR = 		@@TCLINCLUDE@@
d28 1
a28 1
CC_SWITCHES = $(CFLAGS) -I$(INCLUDE_DIR) -DTCL_MEM_DEBUG
d36 5
d42 2
a43 1
	rm -f *.o *~ *${SHLIB_SUFFIX} config.cache config.log config.status lib.exp
@


1.2
log
@minor changes to autoconfig stuff
@
text
@d10 9
a18 4
SHLIB_CFLAGS =		-KPIC
#SHLIB_CFLAGS =		
# SHLIB_LD =		/usr/ccs/bin/ld -G -z text
SHLIB_LD =		$(CC) -r
d25 1
a25 2
CC_SWITCHES = $(CFLAGS) -I$(INCLUDE_DIR) -DTCL_MEM_DEBUG \
	${SHLIB_CFLAGS}
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
INCLUDE_DIR = 		/usr/sww/tcl-7.5/include/
@


1.1.1.1
log
@
@
text
@@

head	1.4;
access;
symbols
	Yatin-final:1.4
	Yatin:1.4.0.2
	pre-yatin-merge:1.4
	transend-beta2:1.3
	fox-dev:1.3
	playback-ng:1.3
	transend-beta-latest:1.3
	Aggregators:1.3
	NoAggregators:1.3
	iang:1.3.0.4
	transend-beta:1.3.0.2
	SOSP:1.3
	merged_preintegrate:1.3
	heisenbug:1.3
	PRE_INTEGRATION:1.3;
locks; strict;
comment	@ * @;


1.4
date	97.09.09.23.43.42;	author gribble;	state Exp;
branches;
next	1.3;

1.3
date	96.11.24.07.58.21;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	96.11.24.01.40.33;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	96.11.23.03.27.42;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Much minor hackery....fixed a number of little things.
@
text
@/*
 *     Author: Steve Gribble
 *       Date: Nov. 22nd, 1996
 *       File: http_task.h
 */

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <sys/time.h>
#include <unistd.h>
#include "utils.h"

#ifndef HTTP_TASK_H
#define HTTP_TASK_H

#define PG_CLNT_NO_CACHE       1
#define PG_CLNT_KEEP_ALIVE     2
#define PG_CLNT_CACHE_CNTRL    4
#define PG_CLNT_IF_MOD_SINCE   8
#define PG_CLNT_UNLESS         16

#define PG_SRVR_NO_CACHE       1
#define PG_SRVR_CACHE_CNTRL    2
#define PG_SRVR_EXPIRES        4
#define PG_SRVR_LAST_MODIFIED  8

typedef struct http_task_st {
  unsigned long  dst_host;        /* IP address, network order */
  unsigned short dst_port;        /* destination port, network order */
  char *url;                      /* URL to be fetched, including command,
				     but not including \r\n, e.g.
				     "GET http://foo.bar/ HTTP/1.0" */
  int   urllen;
  unsigned char  client_pragmas;
  unsigned char  server_pragmas;
  time_t         client_if_modified_date;    /* localtime (host order) */
  time_t         server_expires_date;        /* localtime (host order) */
  time_t         server_last_modified_date;  /* localtime (host order) */
} http_task;

int initialize_http_tasks(char *useragent, char *from);
int do_http_task(http_task t, char **retdata, int *retlen);
int do_wingtask(http_task t, char **retdata, int *retlen);
int insert_host_into_url(http_task *t);

#endif










@


1.3
log
@Working on log parsing functionality - almost there..
@
text
@d44 1
@


1.2
log
@Built http_task.c, which goes out and gets a page from an HTTP server.
@
text
@d34 1
d44 1
@


1.1
log
@Building in task stuff..
@
text
@d9 1
d29 10
a38 8
  long  dst_host;
  short dst_port;
  char *url;
  unsigned char client_pragmas;
  unsigned char server_pragmas;
  long int      client_if_modified_date;
  long int      server_expires_date;
  long int      server_last_modified_date;
d41 2
a42 1
int do_http_task(http_task t, int keep_data, char **retdata, int *retlen);
d45 10
@

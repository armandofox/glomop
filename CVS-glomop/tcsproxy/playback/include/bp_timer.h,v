head	1.2;
access;
symbols
	Yatin-final:1.2
	Yatin:1.2.0.6
	pre-yatin-merge:1.2
	transend-beta2:1.2
	fox-dev:1.2
	playback-ng:1.2
	transend-beta-latest:1.2
	Aggregators:1.2
	NoAggregators:1.2
	iang:1.2.0.4
	transend-beta:1.2.0.2
	SOSP:1.2
	merged_preintegrate:1.2
	heisenbug:1.2
	PRE_INTEGRATION:1.2;
locks; strict;
comment	@ * @;


1.2
date	96.11.23.02.54.23;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	96.11.21.01.59.22;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Woohoo!  The core timer routines seem to be working ok.
@
text
@/*
 *     Author: Steve Gribble
 *       Date: Nov. 19th, 1996
 *       File: bp_timer.h
 */

#include <sys/time.h>
#include <unistd.h>

#ifndef BP_TIMER_H
#define BP_TIMER_H

typedef void (*bp_timer_proc)(int id, void *data);     /* must be mt-safe */
typedef enum { ABSOLUTE, RELATIVE } bp_ttype;

int bp_timer_init(void);
int bp_timer_add(bp_ttype type, struct timeval t, bp_timer_proc start_p,
		 void *tproc_data);
void bp_dispatch_signal(void);

#endif
@


1.1
log
@Playback engine
@
text
@d13 1
a13 1
typedef void (*bp_timer_proc)(void *data, int id);     /* must be mt-safe */
d17 3
a19 1
int bp_timer_add(bp_ttype type, struct timeval t, bp_timer_proc start_p);
@

head	1.3;
access;
symbols
	Yatin-final:1.3
	Yatin:1.3.0.6
	pre-yatin-merge:1.3
	transend-beta2:1.3
	fox-dev:1.3
	playback-ng:1.3
	transend-beta-latest:1.3
	Aggregators:1.3
	NoAggregators:1.3
	iang:1.3.0.4
	transend-beta:1.3.0.2
	SOSP:1.3;
locks; strict;
comment	@ * @;


1.3
date	97.02.26.10.08.51;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	97.02.25.03.16.54;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	97.02.24.23.23.50;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.3
log
@AAAAAAAGh.  (Ok, almost there now.)
@
text
@/*
 * Author: Steve Gribble
 *   Date: Feb 24th, 1997
 *   File: playback_sched.h
 */

#include "simclient.h"
#include <pthread.h>

#ifndef PLAYBACK_SCHED_H
#define PLAYBACK_SCHED_H

void set_dest_addr_and_port(char *host, char *port);
void set_max_delay(struct timeval maxdelay);
void set_speedup_factor(double sf);

/* You must call initialize_scheduler once for each client_id that you have
   obtained by adding files.  This will allow the scheduler to deduce the
   minimum starting time across all of the client files. */

void initialize_scheduler(unsigned long int client_id, simclient_list *clist);

/* Call this to actually begin scheduling events for a client. */

void inject_client(unsigned long int client_id, simclient_list *clist);
#endif
@


1.2
log
@Getting closer..
@
text
@d13 3
a15 4
typedef struct playback_sched_st {
  unsigned long int client_id;
  struct timeval    sched_time;
} playback_sched_item;
d17 3
a19 6
typedef struct playback_items_st {
  playback_sched_item *item_array;
  unsigned int         max_num_in_array;
  unsigned int         cur_num_in_array;
  unsigned int         cur_offset_into_array;
  pthread_mutex_t      array_mutex;
d21 1
a21 3
  simclient_list      *clist;
  struct timeval       start_time_offset;
} playback_items;
d23 3
a25 4
int initialize_playback_items(playback_items *init_me, int num,
			      simclient_list *clist,
			      struct timeval start_time);
int inject_file(playback_items *into_me, unsigned long int client_id);
@


1.1
log
@Scheduler (eventually).
@
text
@d7 3
d15 1
a15 1
  struct timeval    relative_time;
d20 7
a26 1
  unsigned int         num_in_array;
d29 4
a32 2
int initialize_playback_items(playback_items *init_me);

@

head	1.1;
branch	1.1.1;
access;
symbols
	Yatin-final:1.1.1.1
	Yatin:1.1.1.1.0.8
	pre-yatin-merge:1.1.1.1
	transend-beta2:1.1.1.1
	fox-dev:1.1.1.1
	html_munger-ng:1.1.1.1
	transend-beta-latest:1.1.1.1
	Aggregators:1.1.1.1
	NoAggregators:1.1.1.1
	iang:1.1.1.1.0.6
	transend-beta:1.1.1.1.0.2
	SOSP:1.1.1.1
	merged_preintegrate:1.1.1.1
	heisenbug:1.1.1.1
	PRE_INTEGRATION:1.1.1.1
	release_19960207:1.1.1.1.0.4
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.1
date	96.10.25.02.37.15;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.10.25.02.37.15;	author fox;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@#!/usr/local/bin/perl
# $Id: excerpt.pl,v 1.2 1996/02/07 15:32:24 connolly Exp $
#
# Excerpt relevant portions of FLEX generated C code
#

$opt = shift(@@ARGV);

if($opt eq 'tables'){
    while(<>){
	($p = 1, print STDERR "**START: ", $_)
	    if /EXCERPT TABLES: START/;
	($p = 0, print STDERR "***STOP: ", $_)
	    if /EXCERPT TABLES: STOP/;

	($p = 1, print STDERR "**START: ", $_)
	    if /^\#define YY_END_OF_BUFFER /;
	($p = 0, print STDERR "***STOP: ", $_)
	    if /last_accepting_state/;

	$q1 = $1 if /yy_current_state >= (\d+)/;
	$q2 = $1 if /yy_current_state\] != (\d+)/;

	print if $p;
    }

    print "#define FLEX_MAGIC_STATE $q1\n";
    print "#define FLEX_MAGIC_STATE2 $q2\n";
}elsif($opt eq 'actions'){
    while(<>){
	($p = 1, print STDERR "**START: ", $_)
	    if /EXCERPT ACTIONS: START/;
	($p = 0, print STDERR "***STOP: ", $_)
	    if /EXCERPT ACTIONS: STOP/;

	($p = 1, print STDERR "**START: ", $_)
	    if /^#define INITIAL/;

	($p = 1, print STDERR "**START: ", $_)
	    if /^case 1:/;

	print if ($p && !(/yy_hold_char/ && /undo effects/));
    }
}else{
    die "usage: $0 tables|actions <foo.c >bar.c";
}

@


1.1.1.1
log
@SGML lexer from http://www.w3.org/pub/WWW/MarkUp/SGML/sgml-lex/sgml-lex-19960207.tar.gz
@
text
@@

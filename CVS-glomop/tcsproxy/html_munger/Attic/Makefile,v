head	1.4;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.4
date	96.11.06.07.45.43;	author fox;	state dead;
branches;
next	1.3;

1.3
date	96.11.06.07.45.07;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	96.10.26.00.29.11;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	96.10.25.02.40.20;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.10.25.02.40.20;	author fox;	state Exp;
branches;
next	;


desc
@@


1.4
log
@*** empty log message ***
@
text
@# Generated automatically from Makefile.in by configure.
LEXLIBPATH = ./sgml-lex-19960207
LEXLIB = sgml_lex
LEXLIBEXT=a
DISTLIBPATH = .
DISTLIB = dist
DISTLIBEXT=a
OTHERLIBS =  -lpthread -lsocket -lnsl
CC = gcc
INCLUDEPATH = $(LEXLIBPATH) include  .. ../client_lib/include ../ptm/include
INCLUDE = $(patsubst %,-I%,$(INCLUDEPATH))
CFLAGS = -Wall -pedantic -g -O $(INCLUDE)
PERL = perl5

all: html_munge

html_munge: src/munge.o $(LEXLIBPATH)/lib$(LEXLIB).$(LEXLIBEXT) $(DISTLIBPATH)/lib$(DISTLIB).$(DISTLIBEXT)
	$(CXX) -o $@@ munge.o -L$(LEXLIBPATH) -l$(LEXLIB) -L$(DISTLIBPATH) -l$(DISTLIB) $(OTHERLIBS)

test_html_munge: src/munge.o src/test_munge.o $(LEXLIBPATH)/lib$(LEXLIB).$(LEXLIBEXT)
	$(CC) -o $@@ munge.o test_munge.o -L$(LEXLIBPATH) -l$(LEXLIB)

test: test_html_munge
	./test_html_munge in.html _%_ > out.html
	$(PERL) -pi.bak -e 's/\s+/\n/g' in.html out.html
	diff in.html out.html

%.o: %.c
	$(CC) $(CFLAGS) -c $<

$(LEXLIBPATH)/lib$(LEXLIB).$(LEXLIBEXT):
	$(MAKE) -C $(LEXLIBPATH) lib$(LEXLIB).$(LEXLIBEXT)

clean:
	-/bin/rm -f *.o *~ html_munge test_html_munge
@


1.3
log
@fast lexer works with front-end
@
text
@@


1.2
log
@html munger works, with new makefile and timing info in place
@
text
@d1 8
a8 3
LIBPATH = ./sgml-lex-19960207
LIB = sgml_lex
LIBEXT = a
d10 4
a13 1
CFLAGS = -Isrc -I$(LIBPATH)
d17 10
a26 2
html_munge: src/munge.o $(LIBPATH)/lib$(LIB).$(LIBEXT)
	$(CC) -o $@@ munge.o -L$(LIBPATH) -l$(LIB)
d31 2
a32 2
$(LIBPATH)/lib$(LIB).$(LIBEXT):
	$(MAKE) -C $(LIBPATH) lib$(LIB).$(LIBEXT)
d35 1
a35 1
	-/bin/rm -f *.o html_munge
@


1.1
log
@Initial revision
@
text
@d1 3
a3 27
# $Id: Makefile,v 1.14 1996/02/07 16:59:33 connolly Exp $
#
# Makefile for Basic SGML scanner
#
# Targets:
#	libsgml_lex.a    -- lexer library (see sgml_lex.h)
#	sgml_lex         -- test harness
#       test             -- build and run test harness
#       sgmllexmodule.o -- python module
#       dist             -- build distribution

PACKAGE = sgml-lex
RELEASE = 19960207

# Tools not included in this directory:
#
# Perl (tested with perl5.002 beta)
PERL = perl
# flex (tested with flex 2.5.2)
FLEX = flex
# rm
RM = rm
# Tar (gnu tar)
GNUTAR = tar
ZIP = zip

# CC
d5 1
a5 49
#
# Config options
#
CDEBUGFLAGS = -g
CFLAGS = $(CDEBUGFLAGS) $(CWARNFLAGS)
CWARNFLAGS = -ansi -Wall -Werror -pedantic-errors
# not too stable yet... @@#

LFLAGS=-p -s -t -8 -b
# -p -> report performance statistics
# -s -> no "default rule"
# -t -> write to stdout rather than lex.yy.c
# -8 -> 8-bit clean scanner
# -b -> backup info

OBJS = sgml_lex.o sgml_dumpevent.o
LIB = libsgml_lex.a
BUILD = *.o *.a sgml_lex filter\
	filter.output test.output

DERIVED = sgml.c sgml_act.c sgml_tab.c test.expected lex-test.sgm

PYTHON_SUPPORT=	sgmllexmodule.c \
	sgmllib.py

ORIGINALS = README Makefile \
	sgml-lex.html \
	sgml.l \
	sgml_lex.h sgml_lex.c \
	main.c sgml_dumpevent.c \
	grab-pre.pl excerpt.pl \
	$(PYTHON_SUPPORT)

all: html_munger

html_munger: $(LIB) munge.o
	$(CC) -o $@@ munge.o $(LIB)

# main target/product is sgml_lex library
$(LIB): sgml_lex.o sgml_dumpevent.o
	$(AR) cq $@@ $(OBJS)
	ranlib $(LIB)

python-module: sgmllexmodule.so

PYTHON_INCLUDES=-I/usr/local/include/Py

sgmllexmodule.o: sgmllexmodule.c sgml_lex.h
	$(CC) $(CFLAGS) $(PYTHON_INCLUDES) -c sgmllexmodule.c
d7 1
a7 2
sgmllexmodule.so: sgmllexmodule.o
	ld -shared -o sgmllexmodule.so sgmllexmodule.o
d9 2
a10 5
test: sgml_lex filter lex-test.sgm test.expected
	./sgml_lex -n <lex-test.sgm >test.output
	diff test.expected test.output
	./filter <sgml-lex.html >filter.output
	diff sgml-lex.html filter.output
d12 2
a13 4
#@@@@
problem: filter
	./filter <lex-test.sgm >filter.output
	diff lex-test.sgm filter.output
d15 2
a16 40
# Null filter
filter: filter.o $(LIB)
	$(CC) -o $@@ filter.o $(LIB)

# Test driver
sgml_lex: main.o $(LIB)
	$(CC) -o $@@ main.o $(LIB)

main.o: main.c sgml_lex.h

sgml_dumpevent.o: sgml_lex.h sgml_dumpevent.c

sgml_lex.o: sgml.c sgml_act.c sgml_tab.c sgml_lex.h


#
# You shouldn't generally have to build these...
#
sgml.c: sgml.l
	$(FLEX) $(LFLAGS) sgml.l >$@@ || rm $@@

sgml_tab.c: sgml.c excerpt.pl
	$(PERL) excerpt.pl tables sgml.c >$@@ || rm $@@

sgml_act.c: sgml.c excerpt.pl
	$(PERL) excerpt.pl actions sgml.c >$@@ || rm $@@

lex-test.sgm: sgml-lex.html grab-pre.pl
	$(PERL) grab-pre.pl sgml-lex.html >$@@

test.expected: sgml_lex lex-test.sgm
	./sgml_lex -n <lex-test.sgm >test.expected

$(PACKAGE)-$(RELEASE).tar.gz: $(ORIGINALS) $(DERIVED)
	$(GNUTAR) czvf $@@ $(ORIGINALS) $(DERIVED)

$(PACKAGE)-$(RELEASE).zip: $(ORIGINALS) $(DERIVED)
	$(ZIP) -k $@@ $(ORIGINALS) $(DERIVED)

dist: $(PACKAGE)-$(RELEASE).tar.gz $(PACKAGE)-$(RELEASE).zip
d19 1
a19 4
	$(RM) -f $(BUILD) *~

clobber: clean
	$(RM) -f $(DERIVED)
@


1.1.1.1
log
@html munger/distiller
@
text
@@

head	1.8;
access;
symbols
	Yatin-final:1.8
	Yatin:1.8.0.2
	pre-yatin-merge:1.8
	transend-beta2:1.8
	fox-dev:1.8
	gif_munger-ng:1.7
	transend-beta-latest:1.7
	Aggregators:1.7
	NoAggregators:1.7
	iang:1.7.0.4
	transend-beta:1.7.0.2
	SOSP:1.4
	merged_preintegrate:1.2
	heisenbug:1.2
	PRE_INTEGRATION:1.1;
locks; strict;
comment	@ * @;


1.8
date	97.06.19.00.27.02;	author fox;	state Exp;
branches;
next	1.7;

1.7
date	97.04.26.01.31.52;	author fox;	state Exp;
branches;
next	1.6;

1.6
date	97.03.20.00.47.23;	author gribble;	state Exp;
branches;
next	1.5;

1.5
date	97.03.18.02.27.28;	author gribble;	state Exp;
branches;
next	1.4;

1.4
date	97.01.29.04.13.25;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	97.01.06.05.43.31;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	96.12.13.01.56.07;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	96.12.13.00.18.35;	author fox;	state Exp;
branches;
next	;


desc
@@


1.8
log
@changes and additions to transend.text.piml (pilot markup language html
distiller).  commented the ARGS.h file for distillers.  distillers now
only observe Quality arg if it has a reasonable value.  Changes to main
prefs to make values of FRONT_SHOW_ICON arg agree with perl html distiller.
@
text
@/*
 *  ARGS.h for gif_munge distiller
 *
 *  The Args structure can contain the following:
 *  arg id GIFMUNGE_MODE (int): distillation mode
 *     =0  output should target particular image dimensions (to follow)
 *     >0  output should target this output byte size
 *     <0  this is the (negative) reciprocal of the scale factor
 *  arg id GIFMUNGE_NEWX (int): new pixel dimension for x (negative: for
 *     y); zero means don't do any scaling at all
 *  arg id GIFMUNGE_BPP (int):
 *      Max bits per pixel for output; negative means grayscale
 *  arg id GIFMUNGE_RESCALE (int):
 *      If present, rescale image (using pnmscale) back to original
 *     pixel size before returning it.  (result is "fuzzy" image)
 *  arg id GIFMUNGE_ABSMAX (int):
 *      No matter what, make sure resulting image is no larger than this
 *      X dimension (negative: this Y dimension)
 */

/* the "signature" of the gif_munge distiller: */
/* #define GIFMUNGE_SIG  (('G' << 24) | ('I' << 16) | ('F' << 8) | 'M') */
#define GIFMUNGE_SIG     1000

#define GIFMUNGE_MODE    GIFMUNGE_SIG+1 /* int */
#define GIFMUNGE_NEWX    GIFMUNGE_SIG+2 /* int */
#define GIFMUNGE_BPP     GIFMUNGE_SIG+3 /* int */
#define GIFMUNGE_RESCALE GIFMUNGE_SIG+4 /* int */
#define GIFMUNGE_ABSMAX  GIFMUNGE_SIG+5 /* int */

@


1.7
log
@GIF munger now works and handles transparent gifs correctly
@
text
@d25 5
a29 5
#define GIFMUNGE_MODE    GIFMUNGE_SIG+1
#define GIFMUNGE_NEWX    GIFMUNGE_SIG+2
#define GIFMUNGE_BPP     GIFMUNGE_SIG+3
#define GIFMUNGE_RESCALE GIFMUNGE_SIG+4
#define GIFMUNGE_ABSMAX  GIFMUNGE_SIG+5
@


1.6
log
@ARGS.h now devoid of transparency option
@
text
@d10 1
a10 1
 *     y)
@


1.5
log
@More args changed.
@
text
@a18 1
 *  arg id GIFMUNGE_IGNORE_TRANS (int): bypass transparent images
a29 1
#define GIFMUNGE_IGNORE_TRANS GIFMUNGE_SIG+6
@


1.4
log
@changed distiller interface to use struct DistillerInput/DistillerOutput in frontend,gif_munge,html_munge
@
text
@d19 1
d31 2
@


1.3
log
@Added doc/distillers.txt, which explains how to write your own
distiller.  Gifmunger should now do the right thing even on extremely
large images.  Default args for gifmunger are more sane (16 colors,
scale 0.5 per axis), but output still looks sucky - not sure why the
quantize phase picks such crappy colors.  "test_http" program has been
officially renamed "frontend".  Fixed the "run" targets in toplevel
Makefile.  Added line to configure.in to create a Makefile from
Makefile.in for gui.
@
text
@d22 2
a23 1
#define GIFMUNGE_SIG  (('G' << 24) | ('I' << 16) | ('F' << 8) | 'M')
@


1.2
log
@maybe fixed some global-state initialization related bugs
@
text
@d22 1
a22 1
#define GIFMUNGE_SIG  (('G' << 24) | ('I' << 16))
@


1.1
log
@Changed "int" argument type to be signed rather than unsigned.  Required
addition of INT32 type to config.h.in, and addition of overload
operators '<<', '>>' for type "long int" to IStream and OStream classes
in ptm (mods to packet.{cc,h}).  Added various "make run" targets at top
level.  Minor fixes to monitor's GUI.  Added simple argument parsing to
gif_munge in ARGS.h, which will be the standard filename where distiller
args are defined.  Added tags target to ptm makefile.
@
text
@d28 1
@

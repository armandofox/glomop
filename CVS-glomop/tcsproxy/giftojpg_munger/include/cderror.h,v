head	1.2;
access;
symbols
	Yatin-final:1.2
	Yatin:1.2.0.6
	pre-yatin-merge:1.2
	transend-beta2:1.2
	fox-dev:1.2
	giftojpg_munger-ng:1.2
	transend-beta-latest:1.2
	Aggregators:1.2
	NoAggregators:1.2
	iang:1.2.0.4
	transend-beta:1.2.0.2
	SOSP:1.2;
locks; strict;
comment	@ * @;


1.2
date	97.02.02.05.04.09;	author gribble;	state Exp;
branches;
next	1.1;

1.1
date	97.02.02.04.13.47;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Various tweaks to get giftojpg_munger working on solaris.  Mostly dumb
include headaches with sww's jpeg library.
@
text
@/*
 * cderror.h
 *
 * Copyright (C) 1994, Thomas G. Lane.
 * This file is part of the Independent JPEG Group's software.
 * For conditions of distribution and use, see the accompanying README file.
 *
 * This file defines the error and message codes for the cjpeg/djpeg
 * applications.  These strings are not needed as part of the JPEG library
 * proper.
 * Edit this file to add new codes, or to translate the message strings to
 * some other language.
 */

/*
 * To define the enum list of message codes, include this file without
 * defining macro JMESSAGE.  To create a message string table, include it
 * again with a suitable JMESSAGE definition (see jerror.c for an example).
 */

#ifndef CDERROR_H_INCL
#define CDERROR_H_INCL

#ifndef JMESSAGE

typedef enum {

#define JMESSAGE(code,string)	code ,

JMESSAGE(JMSG2_FIRSTADDONCODE=1000, NULL) /* Must be first entry! */

JMESSAGE(JERR2_BMP_BADCMAP, "Unsupported BMP colormap format")
JMESSAGE(JERR2_BMP_BADDEPTH, "Only 8- and 24-bit BMP files are supported")
JMESSAGE(JERR2_BMP_BADHEADER, "Invalid BMP file: bad header length")
JMESSAGE(JERR2_BMP_BADPLANES, "Invalid BMP file: biPlanes not equal to 1")
JMESSAGE(JERR2_BMP_COLORSPACE, "BMP output must be grayscale or RGB")
JMESSAGE(JERR2_BMP_COMPRESSED, "Sorry, compressed BMPs not yet supported")
JMESSAGE(JERR2_BMP_NOT, "Not a BMP file - does not start with BM")
JMESSAGE(JTRC2_BMP, "%ux%u 24-bit BMP image")
JMESSAGE(JTRC2_BMP_MAPPED, "%ux%u 8-bit colormapped BMP image")
JMESSAGE(JTRC2_BMP_OS2, "%ux%u 24-bit OS2 BMP image")
JMESSAGE(JTRC2_BMP_OS2_MAPPED, "%ux%u 8-bit colormapped OS2 BMP image")

JMESSAGE(JERR2_GIF_BUG, "GIF output got confused")
JMESSAGE(JERR2_GIF_CODESIZE, "Bogus GIF codesize %d")
JMESSAGE(JERR2_GIF_COLORSPACE, "GIF output must be grayscale or RGB")
JMESSAGE(JERR2_GIF_IMAGENOTFOUND, "Too few images in GIF file")
JMESSAGE(JERR2_GIF_NOT, "Not a GIF file")
JMESSAGE(JTRC2_GIF, "%ux%ux%d GIF image")
JMESSAGE(JTRC2_GIF_BADVERSION,
	 "Warning: unexpected GIF version number '%c%c%c'")
JMESSAGE(JTRC2_GIF_EXTENSION, "Ignoring GIF extension block of type 0x%02x")
JMESSAGE(JTRC2_GIF_NONSQUARE, "Caution: nonsquare pixels in input")
JMESSAGE(JWRN2_GIF_BADDATA, "Corrupt data in GIF file")
JMESSAGE(JWRN2_GIF_CHAR, "Bogus char 0x%02x in GIF file, ignoring")
JMESSAGE(JWRN2_GIF_ENDCODE, "Premature end of GIF image")
JMESSAGE(JWRN2_GIF_NOMOREDATA, "Ran out of GIF bits")

JMESSAGE(JERR2_PPM_COLORSPACE, "PPM output must be grayscale or RGB")
JMESSAGE(JERR2_PPM_NONNUMERIC, "Nonnumeric data in PPM file")
JMESSAGE(JERR2_PPM_NOT, "Not a PPM file")
JMESSAGE(JTRC2_PGM, "%ux%u PGM image")
JMESSAGE(JTRC2_PGM_TEXT, "%ux%u text PGM image")
JMESSAGE(JTRC2_PPM, "%ux%u PPM image")
JMESSAGE(JTRC2_PPM_TEXT, "%ux%u text PPM image")

JMESSAGE(JERR2_RLE_BADERROR, "Bogus error code from RLE library")
JMESSAGE(JERR2_RLE_COLORSPACE, "RLE output must be grayscale or RGB")
JMESSAGE(JERR2_RLE_DIMENSIONS, "Image dimensions (%ux%u) too large for RLE")
JMESSAGE(JERR2_RLE_EMPTY, "Empty RLE file")
JMESSAGE(JERR2_RLE_EOF, "Premature EOF in RLE header")
JMESSAGE(JERR2_RLE_MEM, "Insufficient memory for RLE header")
JMESSAGE(JERR2_RLE_NOT, "Not an RLE file")
JMESSAGE(JERR2_RLE_TOOMANYCHANNELS, "Cannot handle %d output channels for RLE")
JMESSAGE(JERR2_RLE_UNSUPPORTED, "Cannot handle this RLE setup")
JMESSAGE(JTRC2_RLE, "%ux%u full-color RLE file")
JMESSAGE(JTRC2_RLE_FULLMAP, "%ux%u full-color RLE file with map of length %d")
JMESSAGE(JTRC2_RLE_GRAY, "%ux%u grayscale RLE file")
JMESSAGE(JTRC2_RLE_MAPGRAY, "%ux%u grayscale RLE file with map of length %d")
JMESSAGE(JTRC2_RLE_MAPPED, "%ux%u colormapped RLE file with map of length %d")

JMESSAGE(JERR2_TGA_BADCMAP, "Unsupported Targa colormap format")
JMESSAGE(JERR2_TGA_BADPARMS, "Invalid or unsupported Targa file")
JMESSAGE(JERR2_TGA_COLORSPACE, "Targa output must be grayscale or RGB")
JMESSAGE(JTRC2_TGA, "%ux%u RGB Targa image")
JMESSAGE(JTRC2_TGA_GRAY, "%ux%u grayscale Targa image")
JMESSAGE(JTRC2_TGA_MAPPED, "%ux%u colormapped Targa image")

  JMSG2_LASTADDONCODE
} ADDON_MESSAGE_CODE_2;

#undef JMESSAGE

#endif
#endif

@


1.1
log
@Holy moley!  GIF->JPG distillation works, and it is BLISTERINGLY fast.
@
text
@d24 2
a27 4
#ifdef JMESSAGE
#undef JMESSAGE
#endif

d30 1
a30 1
JMESSAGE(JMSG_FIRSTADDONCODE=1000, NULL) /* Must be first entry! */
d32 19
a50 19
JMESSAGE(JERR_BMP_BADCMAP, "Unsupported BMP colormap format")
JMESSAGE(JERR_BMP_BADDEPTH, "Only 8- and 24-bit BMP files are supported")
JMESSAGE(JERR_BMP_BADHEADER, "Invalid BMP file: bad header length")
JMESSAGE(JERR_BMP_BADPLANES, "Invalid BMP file: biPlanes not equal to 1")
JMESSAGE(JERR_BMP_COLORSPACE, "BMP output must be grayscale or RGB")
JMESSAGE(JERR_BMP_COMPRESSED, "Sorry, compressed BMPs not yet supported")
JMESSAGE(JERR_BMP_NOT, "Not a BMP file - does not start with BM")
JMESSAGE(JTRC_BMP, "%ux%u 24-bit BMP image")
JMESSAGE(JTRC_BMP_MAPPED, "%ux%u 8-bit colormapped BMP image")
JMESSAGE(JTRC_BMP_OS2, "%ux%u 24-bit OS2 BMP image")
JMESSAGE(JTRC_BMP_OS2_MAPPED, "%ux%u 8-bit colormapped OS2 BMP image")

JMESSAGE(JERR_GIF_BUG, "GIF output got confused")
JMESSAGE(JERR_GIF_CODESIZE, "Bogus GIF codesize %d")
JMESSAGE(JERR_GIF_COLORSPACE, "GIF output must be grayscale or RGB")
JMESSAGE(JERR_GIF_IMAGENOTFOUND, "Too few images in GIF file")
JMESSAGE(JERR_GIF_NOT, "Not a GIF file")
JMESSAGE(JTRC_GIF, "%ux%ux%d GIF image")
JMESSAGE(JTRC_GIF_BADVERSION,
d52 36
a87 36
JMESSAGE(JTRC_GIF_EXTENSION, "Ignoring GIF extension block of type 0x%02x")
JMESSAGE(JTRC_GIF_NONSQUARE, "Caution: nonsquare pixels in input")
JMESSAGE(JWRN_GIF_BADDATA, "Corrupt data in GIF file")
JMESSAGE(JWRN_GIF_CHAR, "Bogus char 0x%02x in GIF file, ignoring")
JMESSAGE(JWRN_GIF_ENDCODE, "Premature end of GIF image")
JMESSAGE(JWRN_GIF_NOMOREDATA, "Ran out of GIF bits")

JMESSAGE(JERR_PPM_COLORSPACE, "PPM output must be grayscale or RGB")
JMESSAGE(JERR_PPM_NONNUMERIC, "Nonnumeric data in PPM file")
JMESSAGE(JERR_PPM_NOT, "Not a PPM file")
JMESSAGE(JTRC_PGM, "%ux%u PGM image")
JMESSAGE(JTRC_PGM_TEXT, "%ux%u text PGM image")
JMESSAGE(JTRC_PPM, "%ux%u PPM image")
JMESSAGE(JTRC_PPM_TEXT, "%ux%u text PPM image")

JMESSAGE(JERR_RLE_BADERROR, "Bogus error code from RLE library")
JMESSAGE(JERR_RLE_COLORSPACE, "RLE output must be grayscale or RGB")
JMESSAGE(JERR_RLE_DIMENSIONS, "Image dimensions (%ux%u) too large for RLE")
JMESSAGE(JERR_RLE_EMPTY, "Empty RLE file")
JMESSAGE(JERR_RLE_EOF, "Premature EOF in RLE header")
JMESSAGE(JERR_RLE_MEM, "Insufficient memory for RLE header")
JMESSAGE(JERR_RLE_NOT, "Not an RLE file")
JMESSAGE(JERR_RLE_TOOMANYCHANNELS, "Cannot handle %d output channels for RLE")
JMESSAGE(JERR_RLE_UNSUPPORTED, "Cannot handle this RLE setup")
JMESSAGE(JTRC_RLE, "%ux%u full-color RLE file")
JMESSAGE(JTRC_RLE_FULLMAP, "%ux%u full-color RLE file with map of length %d")
JMESSAGE(JTRC_RLE_GRAY, "%ux%u grayscale RLE file")
JMESSAGE(JTRC_RLE_MAPGRAY, "%ux%u grayscale RLE file with map of length %d")
JMESSAGE(JTRC_RLE_MAPPED, "%ux%u colormapped RLE file with map of length %d")

JMESSAGE(JERR_TGA_BADCMAP, "Unsupported Targa colormap format")
JMESSAGE(JERR_TGA_BADPARMS, "Invalid or unsupported Targa file")
JMESSAGE(JERR_TGA_COLORSPACE, "Targa output must be grayscale or RGB")
JMESSAGE(JTRC_TGA, "%ux%u RGB Targa image")
JMESSAGE(JTRC_TGA_GRAY, "%ux%u grayscale Targa image")
JMESSAGE(JTRC_TGA_MAPPED, "%ux%u colormapped Targa image")
d89 2
a90 2
  JMSG_LASTADDONCODE
} ADDON_MESSAGE_CODE;
d94 1
@

head	1.16;
access;
symbols
	Yatin-final:1.15
	Yatin:1.15.0.2
	pre-yatin-merge:1.15
	transend-beta2:1.8
	fox-dev:1.8;
locks; strict;
comment	@# @;


1.16
date	98.01.16.22.16.03;	author yatin;	state Exp;
branches;
next	1.15;

1.15
date	97.11.12.00.48.49;	author fox;	state Exp;
branches;
next	1.14;

1.14
date	97.10.24.19.29.18;	author fox;	state Exp;
branches;
next	1.13;

1.13
date	97.10.16.02.58.16;	author iang;	state Exp;
branches;
next	1.12;

1.12
date	97.09.22.20.31.47;	author fox;	state Exp;
branches;
next	1.11;

1.11
date	97.09.08.21.19.38;	author fox;	state Exp;
branches;
next	1.10;

1.10
date	97.09.06.01.37.01;	author fox;	state Exp;
branches;
next	1.9;

1.9
date	97.09.06.01.08.49;	author fox;	state Exp;
branches;
next	1.8;

1.8
date	97.07.30.02.28.20;	author fox;	state Exp;
branches;
next	1.7;

1.7
date	97.07.26.00.29.50;	author fox;	state Exp;
branches;
next	1.6;

1.6
date	97.07.25.01.06.33;	author fox;	state Exp;
branches;
next	1.5;

1.5
date	97.07.24.03.18.58;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	97.07.15.02.43.11;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	97.07.10.23.52.06;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	97.07.10.06.14.49;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.07.09.02.46.04;	author fox;	state Exp;
branches;
next	;


desc
@@


1.16
log
@- new wingman frontend
- new wingman aggregators mechanism
- DistillAsync

(merged from branch Yatin-final)
@
text
@#
#  Simple distiller test harness
#

BEGIN {
    $main::DEBUGGING = 1;

    # find the options file
    my $username = (getpwuid($<))[0] || "user";
    my $optfile;
    for ("../gm_options.$username", "gm_options.$username",
         "../gm_options", "gm_options") {
        $optfile = $_, last if -r;
    }
    $optfile = $ENV{'GM_OPTIONS'} if defined $ENV{'GM_OPTIONS'};
    die "Can't find gm_options.$username or gm_options; setenv GM_OPTIONS "
        . "to override default search rules\n"
            unless $optfile;
    open(O,$optfile) or die "Can't open $optfile: $!\n";
    # look for proxy.perlmod
    while (<O>) {
        (warn("Looking for Perl modules in $1\n"),
         push(@@INC, split(/\s+/,$1)))
            if /^proxy\.perlmod:\s*(.*)$/;
    }
    close O;
    # find xs
    @@xs = qw(../xs/lib  xs/lib);
    for (@@xs) {
        push(@@INC, $_), $xs = $_, last
            if (-d && -r);
    }
    $"=":";                                 #" 
    die "Looking for xs in (@@xs)...where is it???\n"
        unless (-d $xs  &&  -r $xs);
}

sub usage {
    warn "Usage:  $0 [-d] [arg1=val1 ... argN=valN] distillername URL\n";
    0;
}
require 'util.pl';

%arglist = ();
while ($_ = shift @@ARGV) {
    &util::dbg_list(qw(layout)), next
        if /^-d/;
    $arglist{$1} = $2, next
        if (  /^([sif]\d+)="([^"]*)"$/        #" 
    || /^([sif]\d+)=(\S+)$/ ); # 
last;
}
unshift(@@ARGV,$_);

$dist = shift @@ARGV or &usage;
$url = shift @@ARGV or &usage;
$file = shift @@ARGV;

use LWP;
use clib;
use TACCutils;
require $dist;

&DistillerInit;

($stat,$hdrs,$data) = &Clib_Fetch($url,"Pragma: no-cache\r\n\r\n");
die unless $stat == 0;
$hdrs =~ s/\r\n/\r\nLocation: $url\r\n/;
$type = ( $hdrs =~ /content-type:\s*(\S+)/i ? $1 : 'text/html');

($data,$hdrs,$result,$code) = &DistillerMain($data, $hdrs, $type,%arglist);

if ($file) {
    open(FILE, ">$file") or die $!;
    print FILE $data;
    close FILE;
} else {
    print STDOUT $data;
}

warn ( "Warning: DistillerMain returned error code $code\n")
    if $code;



@


1.15
log
@harness can now be called with user profile args
@
text
@d15 1
@


1.14
log
@Added a couple of fields to 'feedback' form.  Fixed bugs and added to
documentation for distiller writing.  Added Dispatcher that allows
user-specified chaining of filters per mime type.  Fixed bug in harness:
it wasn't finding LWP correctly when it lived in a nonstandard place.
Fixed header-generation bug in TACCutils.  Added "stupid TACC tricks"
file, content to be filled in.  safetified DistillerBufferRealloc.
@
text
@d38 1
a38 1
    warn "Usage:  $0 distillername URL\n";
@


1.13
log
@various bugfixes, etc.
@
text
@d7 20
@


1.12
log
@Various example distillers (for class); changes to harness to allow args
to be passed on cmd line, as in 'perl harness i25=1 s9000="foo" ....'
@
text
@d45 1
a45 1
($stat,$hdrs,$data) = &Clib_Fetch($url,'');
@


1.11
log
@DEBUGGING info misplaced, caused harness not to work
@
text
@d22 12
a33 2
&util::dbg_list(qw(layout)),shift @@ARGV
    if $ARGV[0] =~ /^-d/;
d50 1
a50 1
($data,$hdrs,$result,$code) = &DistillerMain($data, $hdrs, $type,());
@


1.10
log
@added robustness checking to various execs, which should aid error behavior
@
text
@d6 1
a14 1
    $main::DEBUGGING = 1;
@


1.9
log
@Removed compile time dependencies: proxy.home and proxy.perlmod are now
config file options, so perl_stub doesn't need to know them at compile
time (it constructs the -I path at runtime from the options file
values).  Options_Find() has been exported to Perl (in
clib.xs) and is emulated for the harness (in clib.pm).  pilotFonts
directory was added for wingman distiller.  PilotFonts module now has an
explicit init_fonts() call that supplies the dir name containing the
pilot fonts.  Added documentation to clib.pm, TACCutils.pm,
PilotFonts.pm and SimpleFont.pm.  removed all path-related dependencies
in existing distillers and unpack_tstr.pl, and added font path error
checking to layout.tcl
@
text
@d49 6
@


1.8
log
@Toplevel Makefile slimmed down.  lib/ subdir and corresponding install
targets added, to prep for binary dist.  client_lib now has
strerror()-style error reporting.  Fixed bug in dispatch.c that caused
prefs call for an aggregator to coredump (strcpy called on null ptr).
text/html distiller more streamlined and correctly "munges" user prefs
form items.  GetOptions moved from clib to TaccUtils.  perl_stub now
passes arguments named "s11", "i2", etc. instead of "11", "2", etc.
@
text
@d6 8
a13 1
    push(@@INC, "../xs/lib");
d30 1
@


1.7
log
@makefile fixes to have lib/ subdir now work on both.  anonymization added to frontend.  still a lurking stack-stomping bug in httpsupport.c
@
text
@a0 1
#!perl 
d22 1
a22 1

a40 4




@


1.6
log
@temporary commit so anthony can make; still tracking memory bug interaction frontend/clientlib
@
text
@d31 1
d33 1
a33 1
($data,$hdrs,$result,$code) = &DistillerMain($data, $hdrs, 'text/html',());
@


1.5
log
@Changed the enum in clib.h to a series of #defines, so that the perl
extension builder automatically makes the values available to perl.
Much work on the perl html munger (using the new lexer): <img> attribute
GMMAGIC is now converted to URL magic in the SRC attribute by the
munger.  MonitorClient_Send and GetOptions are now available to perl
distillers; this required changes to perl_stub and clib.xs.  Bug fix to
tag_from_attribs routine in TACCutils.pm.  Tcl/tk simulator now supports
"reload" and "open", and canvas is resized correctly.  Perl harness now
turns on  perl -w by default.
@
text
@d1 1
a1 1
#!perl -w
@


1.4
log
@makefile changes to link pthreads only at end, which was causing severe bad behaviors under linux since different people were calling different signal()s.  SIGHUP is now used instead of SIGUSR1 to signal components to reinitialize themselves, and SIGTERM is used to kill them gracefully.  Layout stuff for Pilot works but is still inelegant.
@
text
@d1 1
a22 1
$UA = new LWP::UserAgent;
@


1.3
log
@*** empty log message ***
@
text
@d7 1
@


1.2
log
@*** empty log message ***
@
text
@d18 1
d30 12
a41 1
@@pars = &DistillerMain($data, $hdrs, 'text/html',());
@


1.1
log
@minor changes to Layout to fix line break problems - still significant breakage in flowing text aroudn images.  HTML regexp is more robust now
@
text
@d13 3
a15 1

a24 1
#&util::dbg_list(qw(layout));
@

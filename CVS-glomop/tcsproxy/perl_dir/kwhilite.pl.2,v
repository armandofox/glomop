head	1.2;
access;
symbols
	Yatin-final:1.2
	Yatin:1.2.0.2
	pre-yatin-merge:1.2;
locks; strict;
comment	@# @;


1.2
date	97.09.24.00.14.38;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.09.22.20.31.49;	author fox;	state Exp;
branches;
next	;


desc
@@


1.2
log
@kwhilite* files modified for in-class examples. Distill() functionality
in clib.xs still not quite working - this commit will allow me to move
it to purify.  Added stuff to perl_stub makefile so that libperl.so's
directory is added to runtime dynamic lib path.
@
text
@#  Hey emacs, this is a -*- perl -*- program
#  Version 2: use a user-profile argument to determine what to hilite; report
#  errors both to user and to GUI monitor; composition with "default" TranSend
#  html filter.
#

use TACCutils;
use clib;

sub DistillerInit {
    0;                                      # the distOk return code
}

sub DistillerMain {
    my($data,$headers,$type,%args) = @@_;

    # regexp to highlight

    $pattern = $args{"s9000"};

    unless ($pattern) {
        my $errmsg = "No keyword (arg 9000) specified\n";
        &MonitorClient_Send("kwhilite.pl", $errmsg, "Log");
        return(&htmlify($errmsg, "Keyword Hilite Error"),
               "",  "text/html", 0);
    }
    
    $data = &html_regsub($data,
                         "s!($pattern)!<font size=+2 color=red><b>\$1</b></font>!ig");

    # since this is a simple distiller, return an empty string and let the
    # frontend construct the headers.
    $hdrs = "HTTP/1.0 200 OK\r\n" . "X-Route: transend/text/html\r\n\r\n";
    return($data, $hdrs, "text/html", 10);
}


1;

@


1.1
log
@Various example distillers (for class); changes to harness to allow args
to be passed on cmd line, as in 'perl harness i25=1 s9000="foo" ....'
@
text
@d2 3
a4 2
#  A trivial distiller that converts keywords identified by arg id 9000 to be
#  red.
d33 1
a33 1
    $hdrs = "HTTP/1.0 200 OK\r\nX-Route: transend/text/html\r\n\r\n";
@

head	1.4;
access;
symbols
	Yatin-final:1.3
	Yatin:1.3.0.2
	pre-yatin-merge:1.3
	transend-beta2:1.3
	fox-dev:1.3
	transend-beta-reallylatest:1.1.2.2
	transend-beta-latest:1.2
	transend-beta:1.1.0.2;
locks; strict;
comment	@# @;


1.4
date	98.01.24.22.51.17;	author fox;	state dead;
branches;
next	1.3;

1.3
date	97.07.06.19.45.13;	author gribble;	state Exp;
branches;
next	1.2;

1.2
date	97.06.04.02.15.34;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.04.29.18.10.13;	author gribble;	state dead;
branches
	1.1.2.1;
next	;

1.1.2.1
date	97.04.29.18.10.14;	author gribble;	state Exp;
branches;
next	1.1.2.2;

1.1.2.2
date	97.04.29.19.35.30;	author gribble;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Moved all browser/ files to wwwroot/ subdirs.  Added miniserver.pl to
eliminate need for separate webserver; notes about it are attached.
2 fixes to dispatch.c logic:
- for server-like dispatch, correct headers are now generated when the
server-mode worker attempts to do a redispatch. (previously, for this
case, the returned headers would be the headers of the original
*request*, not theserver response headers.)
- special-casing for the Prefs form URL was eliminated because it
interferes with the miniserver worker. (Ambiguity arises if a request
both matches the Prefs URL *and* matches the server-mode worker, and
it's ugly to have the miniserver worker special case this.)  Instead,
the miniserver.pl worker does  a redispatch to transend/text/html for
HTML documents, which should catch this case.  this is probably not the
Right Thing long term.

there is a new worker, miniserver.pl, which acts as a very simple
httpd.  the root of its filesystem is {proxy.home}/wwwroot.  note that
it doesn't currently handle cgi's or server-side includes or anything --
all it can do is serve simple static files.

i have made the following changes:

- new submodule tcsproxy/wwwroot, to hold the "support files" for TACC
  apps including transend and wingman.

- moved the existing support files for transend and wingman, including
  the java_gui stuff, from
  tcsproxy/browser to tcsproxy/wwwroot/transend, tcsproxy/wwwroot/wingman,
  and tcsproxy/wwwroot/java_gui, respectively.  tcsproxy/browser is now empty,
  and i will eventually prune it from the tree.

- updated the paths in the html munger transend.text.html to match the
  new structure.

- new perl_dir application miniserver.pl, and new toplevel file
  mime.types (used to map file suffixes to MIME types).  the application
  does in-memory caching and uses stat() to deduce when files need to be
  reloaded, so for local-disk files it shouldn't be too heavy of a
  load.  that the expectation is  that traffic to the wwwroot directory
   will be modest - this worker would suck for running a high-traffic
  server, since it doesn't bound the size of the in-memory cache or attempt
  to manage memory to keep "hot" items nearby as Harvest does.


the easiest way to make this mechanism work:

- add an entry to your options file:

        dist.myurl/dispatch: sbin/perl_stub -- perl_dir/miniserver.pl

- set frontend.aggString to the prefix of URL's that should be served
  from the "fake" web server.

- be sure frontend.webServerName matches frontend.aggString.  (this is
  necessary because frontend.webServerName is used by workers that want
  to access the "support files".  keeping these two properties separate
  leaves the option of running a separate web server if desired.)

- *** IMPORTANT *** because miniserver doesn't handle forms submission
   in any way, the frontend.prefsFormSubmitURL property must be
   constructed so that it DOES NOT MATCH anything that might be
   requested of miniserver.  this isn't so bad when you remember that
   the prefsFormSubmitUrl can be a totally imaginary server.
   UNFORTUNATELY, the file wwwroot/transend/prefs.html, which is the
   prefs-submission form, has to have some name wired into it; i picked
   "http://transend-prefs.cs.berkeley.edu", so that's what the config
   files will need to say for now.  i know this is kind of hacky.

-  note that for text/html files, miniserver.pl will redispatch to
   transend/text/html; for other files it will do nothing, ie just
   return the file.  i'm not sure this is the right thing all the time,
   though it's certainly right for transend (causes user prefs form to
   be filled in with existing prefs values).
@
text
@<html> <head>
<title>The TranSend Service FAQ</title>
</head>

<body bgcolor="#ffffff"> 

<center>
<table border=0>
<TR>
<TD>
<h1 align="center">Frequently Asked Questions about <BR> the TranSend Service</h1>
</TD>
<TD>
<img src="tlogo_mini.gif" width=80 height=81>
</TD>
</TR>
</table>
</center>

<ol>
<li><a href="#what_is_transend">What is the TranSend Service?</a> <BR>
<li><a href="#how_use_transend">How do I use the TranSend Service?</a> <BR>
<li><a href="#how_work_transend">How does TranSend work?</a> <BR>
<li><a href="#how_fast_transend">How fast is TranSend?</a> <BR>
<li><a href="#transend_slow">TranSend seems slow today.  Why?</a> <BR>
<li><a href="#transend_breaks_page">TranSend breaks my favourite page. 
        Why?  What should I do?</a> <BR>
<li><a href="#transend_bugs">How do I report a bug to the TranSend team?
     </a>
        <BR>
<li><a href="#transend_off_break">I turned off TranSend, but now my web
    surfing seems broken.  What do I do?</a> <BR>
<li><a href="#transend_who">Who created TranSend?</a> <BR>
<li><a href="#transend_pi">What is the 9809471'th digit of Pi?</a> <BR>
</ol>

<HR>

<a name="what_is_transend"><H3>What is the TranSend Service?</H3></a>
To a first order, TranSend is a <i>infrastructure web accelerator</i>.
TranSend was designed to help ease the pain of accessing the web over slow
links such as dial-up modems or ISDN lines.  Transend is infrastructural
because it runs &quot;inside the network&quot; (as opposed to on your home
machine or on web servers).  This allows you to access any web server
through TranSend immediately - neither you nor web server operators need
to modify their software.

<HR>

<a name="how_use_transend"><H3>How do I use the TranSend Service?</H3></a>

Please visit the <a href="http://transend.cs.berkeley.edu/">TranSend web
site</a> for detailed instructions on how to turn on and use the TranSend
service.  Bear in mind that TranSend has been deployed for the Berkeley
campus - preferential treatment will be given to Berkeley students, staff,
and faculty.  If any &quot;spare&quot; resources are available, they will
be given to non-Berkeley users.

<HR>

<a name="how_work_transend"><H3>How does TranSend work?</H3></a>

TranSend speeds up web surfing through a process we call <i>on-demand,
dynamic, data-type specific distillation</i>.  In other words, the TranSend
proxy intercepts all of your web surfing requests, fetches data from web
servers (or from its large, local cache) on your behalf, and then
transforms the data based on your individual preferences before sending the
data over the modem line to you.  This transformation is usually a
semantically lossy compression - for example, the resolution and colour
depth of images is reduced, yielding much smaller images (by a factor of
2-7) at the cost of slightly reduced image quality.
<p>
TranSend runs on a Network of Workstations (or <a
href="http://now.cs.berkeley.edu">NOW</a>) in the UC Berkeley Computer
Science Division.  A NOW is composed of a number of high-performance
workstation computers connected by a fast local-area network.  TranSend is
highly-available and fault tolerant, meaning that TranSend will continue to
operate even during the failure of any of the component machines on which
TranSend runs.

<HR>

<a name="how_fast_transend"><H3>How fast is TranSend?</H3></a>

TranSend is a high-performance, scalable service.  An individual
distillation request is satisfied in less than a second, and because TranSend
runs on many machines, a large number of these requests can be processed in
parallel.  What you as a user cares most about is the time it takes the
data to reach you;  this time is split into three components:

<ol>
     <li> <B>The time it takes TranSend to access the data on your
	  behalf.</b>
	  <P>
	  We are using a very large (9GB) web cache that obtains about a 55
	  percent hit rate.  This means about half the time, TranSend
	  already has the data you ask for.  The other half of the time,
	  TranSend must ask remote web servers for the data;  this usually
	  takes less than a second, but for slow web servers (or poor
	  network connectivity to those servers) this could conceivably
	  take many seconds.
	  <P>
     <li> <B>The time it takes TranSend to transform your data.</b>
	  <P>
	  because of our high performance, parallel architecture, it takes
	  TranSend about 50 milliseconds to transform the average web
	  request.  In this sense, TranSend is blazingly fast.
	  <P>
     <li> <B>The time it takes for the data to arrive at your computer once
	  TranSend has send it to you.</B>
	  <P>
	  as you're no doubt aware, this is the bottleneck in the web -
	  sending data over your phone or ISDN is painfully slow.  Because
	  of the image transformation we perform, this bottleneck will be
	  reduced by a factor of 3 to 7 for most data on the web.
</ol>

<HR>

<a name="transend_slow"><H3>TranSend seems slow today.  Why?</H3></a>

More than likely, it is not TranSend itself that is slow.  If you perceive
slow response time, it is most likely because your network connection to
the TranSend server (running at Berkeley) is congested and slow.  If you
are a Berkeley user, your network connection to TranSend is fast, so the
slow response time is probably because of general Internet congestion or
excess load at the web servers that you are visiting.

<HR>

<a name="transend_breaks_page"><H3>TranSend breaks my favourite page. 
        Why? What should I do?</H3></a>

There are three reasons why your favourite page may appear to be broken:

<ol>
     <li> The page is broken on the web server, and TranSend has had no
	  effect on its &quot;brokenness&quot;.  This is most often the
	  case.  The Netscape browser is amazingly good at dealing with
	  broken web pages and doing reasonable things with them;  our
	  TranSend proxy is currently not as good as your browser, which
	  means that some pages that you are used working may no longer
	  work through TranSend.  We are continually improving this aspect
	  of this service.
	  <P>
     <li> The server is unreachable, and TranSend cannot access your data.
	  This happens all-too often on the Internet.  We minimize the
	  possibility of this happening by using our large local cache, but
	  it does still happen.
	  <P>
     <li> There is a bug in TranSend itself.  We know of a few such bugs
	  (check out <a
	  href="http://transend.cs.berkeley.edu/bugs.html">our bug page</a>
	  for a list), and we're working on them.  Bug reports are always
	  appreciated.
</ol>

Try &quot;Reload&quoting the page after having turned of the TranSend
service.  If the problem is resolved, you've found a bug in TranSend -
please <a href="#transend_bugs">report it to us</a>.  If the problem
persists, it is most likely the fault of the web server itself.  Such
problems should be reported to the administrator of that web site.

<HR>

<a name="transend_bugs"><H3>How do I report a bug to the TranSend
        team?</H3></a>

We have a bug reporting email address that you can use.  Please contact
us at:  <P>
<center>
<a
href="mailto:transend-bugs@@latte.cs.berkeley.edu">transend-bugs@@latte.cs.berkeley.edu</a>
</center>

<HR>
     
<a name="transend_off_break"><H3>I turned off TranSend, but now my web
    surfing seems broken.  What do I do?</H3></a>

More likely than not, your local web cache is polluted with transformed
data.  Go to your options menu, find the web cache options (is it located
in the Network Preferences submenu in Netscape), and clear both your memory
and disk caches.  Resume browsing, and the problem should be resolved.

<HR>

<a name="transend_who"><H3>Who created TranSend?</H3></a>

TranSend was created as part of the <a
href="http://www.cs.berkeley.edu/~fox/glomop">GloMop</a> and <a
href="http://daedalus.cs.berkeley.edu">Daedalus</a> research efforts at the
University of California at Berkeley Computer Science Division.  TranSend
was researched, designed, and implemented by graduate students:

<ul>
<li> <address><a href="http://www.cs.berkeley.edu/~fox/">Armando
Fox</a> / <i><a   
HREF="mailto:fox@@cs.berkeley.edu">fox@@cs.berkeley.edu</a></i></address>

<li> <address><a href="http://www.cs.berkeley.edu/~gribble/">Steve
Gribble</a> / <i><a   
HREF="mailto:gribble@@cs.berkeley.edu">gribble@@cs.berkeley.edu</a></i></address>

<li> <address><a href="http://www.cs.berkeley.edu/~yatin/">Yatin
Chawathe</a> / <i><a   
HREF="mailto:yatin@@cs.berkeley.edu">yatin@@cs.berkeley.edu</a></i></address>

<li> Research advisor:
     <address><a href="http://www.cs.berkeley.edu/~brewer/">Professor Eric
     Brewer</a> / <i><a
     HREF="mailto:brewer@@cs.berkeley.edu">brewer@@cs.berkeley.edu</a></i>
     </address> 
</ul>

with the help of undergraduate researchers:

<ul>
  <li> Anthony Polito / <a
       href="mailto:aspolito@@csua.berkeley.edu">aspolito@@csua.berkeley.edu</a>
  <li> Ben Ling / <a href="mailto:bling@@cs.berkeley.edu">bling@@cs.berkeley.edu</a>
  <li> Andrew Huang / <a href="mailto:achuang@@cs.berkeley.edu">achuang@@cs.berkeley.edu</a>
</ul>


<HR>

<a name="transend_pi"><H3>What is the 9809471'th digit of Pi?</H3></a>

4, of course.  <i>(Editor's note: <b>pi</b> is our favourite TranSendental
number.  We apologize in advance for this awful joke.)</i>

<HR>

@


1.3
log
@Took out Tcl/Tk promise.
@
text
@@


1.2
log
@changes to Makefile.in at toplevel to fix xs make, and removed __INSTRUMENT__ def from ptm makefile.in
@
text
@a33 1
<li><a href="#transend_get">Can I obtain the TranSend proxy software?</a> <BR>
a224 9

<HR>

<a name="transend_get"><H3>Can I obtain the TranSend proxy software?</H3></a>

The GloMop team intends on releasing the TranSend software under the same
terms as the Berkeley Tcl/Tk licence.  Once we are satisfied that the
software and service are stable, we will be releasing the software to the
public at large.  Watch this site for our release announcement.
@


1.1
log
@file faq.html was initially added on branch transend-beta.
@
text
@d1 244
@


1.1.2.1
log
@more.
@
text
@a0 81
<html> <head>
<title>The TranSend Service FAQ</title>
</head>

<body bgcolor="#ffffff"> 

<center>
<table border=0>
<TR>
<TD>
<h1 align="center">Frequently Asked Questions about <BR> the TranSend Service</h1>
</TD>
<TD>
<img src="tlogo_mini.gif" width=80 height=81>
</TD>
</TR>
</table>
</center>

<ol>
<li><a href="#what_is_transend">What is the TranSend Service?</a> <BR>
<li><a href="#how_use_transend">How do I use the TranSend Service?</a> <BR>
<li><a href="#how_work_transend">How does TranSend work?</a> <BR>
<li><a href="#how_fast_transend">How fast is TranSend?</a> <BR>
<li><a href="#transend_slow">TranSend seems slow today.  Why?</a> <BR>
<li><a href="#transend_breaks_page">TranSend breaks my favourite page. 
        Why?</a> <BR>
<li><a href="#transend_off_break">I turned off TranSend, but now my web
    surfing seems broken.  What do I do?</a> <BR>
<li><a href="#transend_who">Who created TranSend?</a> <BR>
<li><a href="#transend_get">Can I obtain the TranSend proxy software?</a> <BR>
<li><a href="#transend_pi">What is the 9809471'th digit of Pi?</a> <BR>
</ol>

<HR>

<a name="what_is_transend"><H3>What is the Transend Service?</H3></a>

<HR>

<a name="how_use_transend"><H3>How do I use the Transend Service?</H3></a>

<HR>

<a name="how_work_transend"><H3>How does TranSend work?</H3></a>

<HR>

<a name="how_fast_transend"><H3>How fast is TranSend?</H3></a>

<HR>

<a name="transend_slow"><H3>TranSend seems slow today.  Why?</H3></a>

<HR>

<a name="transend_breaks_page"><H3>TranSend breaks my favourite page. 
        Why?</H3></a>

<HR>

<a name="transend_off_break"><H3>I turned off TranSend, but now my web
    surfing seems broken.  What do I do?</H3></a>

<HR>

<a name="transend_who"><H3>Who created TranSend?</H3></a>

<HR>

<a name="transend_get"><H3>Can I obtain the TranSend proxy software?</H3></a>

<HR>

<a name="transend_pi"><H3>What is the 9809471'th digit of Pi?</H3></a>

4, of course.  <i>(Editor's note: <b>pi</b> is our favourite TranSendental
number.  We apologize in advance for this awful joke.)</i>

<HR>

@


1.1.2.2
log
@faq for proxy
@
text
@d27 1
a27 4
        Why?  What should I do?</a> <BR>
<li><a href="#transend_bugs">How do I report a bug to the TranSend team?
     </a>
        <BR>
d37 1
a37 8
<a name="what_is_transend"><H3>What is the TranSend Service?</H3></a>
To a first order, TranSend is a <i>infrastructure web accelerator</i>.
TranSend was designed to help ease the pain of accessing the web over slow
links such as dial-up modems or ISDN lines.  Transend is infrastructural
because it runs &quot;inside the network&quot; (as opposed to on your home
machine or on web servers).  This allows you to access any web server
through TranSend immediately - neither you nor web server operators need
to modify their software.
d41 1
a41 8
<a name="how_use_transend"><H3>How do I use the TranSend Service?</H3></a>

Please visit the <a href="http://transend.cs.berkeley.edu/">TranSend web
site</a> for detailed instructions on how to turn on and use the TranSend
service.  Bear in mind that TranSend has been deployed for the Berkeley
campus - preferential treatment will be given to Berkeley students, staff,
and faculty.  If any &quot;spare&quot; resources are available, they will
be given to non-Berkeley users.
a46 18
TranSend speeds up web surfing through a process we call <i>on-demand,
dynamic, data-type specific distillation</i>.  In other words, the TranSend
proxy intercepts all of your web surfing requests, fetches data from web
servers (or from its large, local cache) on your behalf, and then
transforms the data based on your individual preferences before sending the
data over the modem line to you.  This transformation is usually a
semantically lossy compression - for example, the resolution and colour
depth of images is reduced, yielding much smaller images (by a factor of
2-7) at the cost of slightly reduced image quality.
<p>
TranSend runs on a Network of Workstations (or <a
href="http://now.cs.berkeley.edu">NOW</a>) in the UC Berkeley Computer
Science Division.  A NOW is composed of a number of high-performance
workstation computers connected by a fast local-area network.  TranSend is
highly-available and fault tolerant, meaning that TranSend will continue to
operate even during the failure of any of the component machines on which
TranSend runs.

a50 33
TranSend is a high-performance, scalable service.  An individual
distillation request is satisfied in less than a second, and because TranSend
runs on many machines, a large number of these requests can be processed in
parallel.  What you as a user cares most about is the time it takes the
data to reach you;  this time is split into three components:

<ol>
     <li> <B>The time it takes TranSend to access the data on your
	  behalf.</b>
	  <P>
	  We are using a very large (9GB) web cache that obtains about a 55
	  percent hit rate.  This means about half the time, TranSend
	  already has the data you ask for.  The other half of the time,
	  TranSend must ask remote web servers for the data;  this usually
	  takes less than a second, but for slow web servers (or poor
	  network connectivity to those servers) this could conceivably
	  take many seconds.
	  <P>
     <li> <B>The time it takes TranSend to transform your data.</b>
	  <P>
	  because of our high performance, parallel architecture, it takes
	  TranSend about 50 milliseconds to transform the average web
	  request.  In this sense, TranSend is blazingly fast.
	  <P>
     <li> <B>The time it takes for the data to arrive at your computer once
	  TranSend has send it to you.</B>
	  <P>
	  as you're no doubt aware, this is the bottleneck in the web -
	  sending data over your phone or ISDN is painfully slow.  Because
	  of the image transformation we perform, this bottleneck will be
	  reduced by a factor of 3 to 7 for most data on the web.
</ol>

a54 7
More than likely, it is not TranSend itself that is slow.  If you perceive
slow response time, it is most likely because your network connection to
the TranSend server (running at Berkeley) is congested and slow.  If you
are a Berkeley user, your network connection to TranSend is fast, so the
slow response time is probably because of general Internet congestion or
excess load at the web servers that you are visiting.

d58 1
a58 31
        Why? What should I do?</H3></a>

There are three reasons why your favourite page may appear to be broken:

<ol>
     <li> The page is broken on the web server, and TranSend has had no
	  effect on its &quot;brokenness&quot;.  This is most often the
	  case.  The Netscape browser is amazingly good at dealing with
	  broken web pages and doing reasonable things with them;  our
	  TranSend proxy is currently not as good as your browser, which
	  means that some pages that you are used working may no longer
	  work through TranSend.  We are continually improving this aspect
	  of this service.
	  <P>
     <li> The server is unreachable, and TranSend cannot access your data.
	  This happens all-too often on the Internet.  We minimize the
	  possibility of this happening by using our large local cache, but
	  it does still happen.
	  <P>
     <li> There is a bug in TranSend itself.  We know of a few such bugs
	  (check out <a
	  href="http://transend.cs.berkeley.edu/bugs.html">our bug page</a>
	  for a list), and we're working on them.  Bug reports are always
	  appreciated.
</ol>

Try &quot;Reload&quoting the page after having turned of the TranSend
service.  If the problem is resolved, you've found a bug in TranSend -
please <a href="#transend_bugs">report it to us</a>.  If the problem
persists, it is most likely the fault of the web server itself.  Such
problems should be reported to the administrator of that web site.
a61 12
<a name="transend_bugs"><H3>How do I report a bug to the TranSend
        team?</H3></a>

We have a bug reporting email address that you can use.  Please contact
us at:  <P>
<center>
<a
href="mailto:transend-bugs@@latte.cs.berkeley.edu">transend-bugs@@latte.cs.berkeley.edu</a>
</center>

<HR>
     
a64 5
More likely than not, your local web cache is polluted with transformed
data.  Go to your options menu, find the web cache options (is it located
in the Network Preferences submenu in Netscape), and clear both your memory
and disk caches.  Resume browsing, and the problem should be resolved.

a68 36
TranSend was created as part of the <a
href="http://www.cs.berkeley.edu/~fox/glomop">GloMop</a> and <a
href="http://daedalus.cs.berkeley.edu">Daedalus</a> research efforts at the
University of California at Berkeley Computer Science Division.  TranSend
was researched, designed, and implemented by graduate students:

<ul>
<li> <address><a href="http://www.cs.berkeley.edu/~fox/">Armando
Fox</a> / <i><a   
HREF="mailto:fox@@cs.berkeley.edu">fox@@cs.berkeley.edu</a></i></address>

<li> <address><a href="http://www.cs.berkeley.edu/~gribble/">Steve
Gribble</a> / <i><a   
HREF="mailto:gribble@@cs.berkeley.edu">gribble@@cs.berkeley.edu</a></i></address>

<li> <address><a href="http://www.cs.berkeley.edu/~yatin/">Yatin
Chawathe</a> / <i><a   
HREF="mailto:yatin@@cs.berkeley.edu">yatin@@cs.berkeley.edu</a></i></address>

<li> Research advisor:
     <address><a href="http://www.cs.berkeley.edu/~brewer/">Professor Eric
     Brewer</a> / <i><a
     HREF="mailto:brewer@@cs.berkeley.edu">brewer@@cs.berkeley.edu</a></i>
     </address> 
</ul>

with the help of undergraduate researchers:

<ul>
  <li> Anthony Polito / <a
       href="mailto:aspolito@@csua.berkeley.edu">aspolito@@csua.berkeley.edu</a>
  <li> Ben Ling / <a href="mailto:bling@@cs.berkeley.edu">bling@@cs.berkeley.edu</a>
  <li> Andrew Huang / <a href="mailto:achuang@@cs.berkeley.edu">achuang@@cs.berkeley.edu</a>
</ul>


a71 5

The GloMop team intends on releasing the TranSend software under the same
terms as the Berkeley Tcl/Tk licence.  Once we are satisfied that the
software and service are stable, we will be releasing the software to the
public at large.  Watch this site for our release announcement.
@

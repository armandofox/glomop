head	1.2;
access;
symbols
	Yatin-final:1.2
	Yatin:1.2.0.2
	pre-yatin-merge:1.2;
locks; strict;
comment	@# @;


1.2
date	97.10.26.03.23.38;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	97.10.24.19.29.16;	author fox;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@=head1 TACCtics For Writing Workers (or: Stupid TACC Tricks)

=head1 General Debugging Tips

=over 4

=item Use the Monitor

Use the MonitorClient_Send function to send verbose output to the
Monitor window.  The Monitor is actually completely extensible in that
you can define your own graphical reporting behaviors on the fly;
additional Monitor documentation is forthcoming.

Open the windows for the other entities reported by the Monitor and see
what they have to say.  Was the PTM unable to launch a distiller? Is the
Front End in pain?  etc.

=item Use the test harness

The test harness is a reasonable sanity check: if your filter doesn't
work with it, it's not likely to work on its own.

=item Use Perl

Filters in C/C++ are a bear to debug, although you can certainly use
I<gdb> and set appropriate breakpoints.  Caveat programmer.


=back
@


1.1
log
@Added a couple of fields to 'feedback' form.  Fixed bugs and added to
documentation for distiller writing.  Added Dispatcher that allows
user-specified chaining of filters per mime type.  Fixed bug in harness:
it wasn't finding LWP correctly when it lived in a nonstandard place.
Fixed header-generation bug in TACCutils.  Added "stupid TACC tricks"
file, content to be filled in.  safetified DistillerBufferRealloc.
@
text
@d3 27
@

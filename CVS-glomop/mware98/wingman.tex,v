head	1.29;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@% @;


1.29
date	98.06.04.20.46.59;	author gribble;	state Exp;
branches;
next	1.28;

1.28
date	98.06.04.00.32.44;	author fox;	state Exp;
branches;
next	1.27;

1.27
date	98.06.03.20.51.05;	author gribble;	state Exp;
branches;
next	1.26;

1.26
date	98.06.03.19.22.35;	author gribble;	state Exp;
branches;
next	1.25;

1.25
date	98.06.03.06.38.38;	author aspolito;	state Exp;
branches;
next	1.24;

1.24
date	98.06.03.06.33.43;	author aspolito;	state Exp;
branches;
next	1.23;

1.23
date	98.06.03.01.04.37;	author gribble;	state Exp;
branches;
next	1.22;

1.22
date	98.06.03.00.57.30;	author gribble;	state Exp;
branches;
next	1.21;

1.21
date	98.06.02.20.35.09;	author gribble;	state Exp;
branches;
next	1.20;

1.20
date	98.05.27.20.15.58;	author gribble;	state Exp;
branches;
next	1.19;

1.19
date	98.05.26.19.37.09;	author gribble;	state Exp;
branches;
next	1.18;

1.18
date	98.03.21.00.52.13;	author gribble;	state Exp;
branches;
next	1.17;

1.17
date	98.03.21.00.38.22;	author fox;	state Exp;
branches;
next	1.16;

1.16
date	98.03.20.21.53.03;	author gribble;	state Exp;
branches;
next	1.15;

1.15
date	98.03.20.02.07.19;	author fox;	state Exp;
branches;
next	1.14;

1.14
date	98.03.20.01.48.22;	author fox;	state Exp;
branches;
next	1.13;

1.13
date	98.03.19.22.52.48;	author gribble;	state Exp;
branches;
next	1.12;

1.12
date	98.03.19.19.21.27;	author fox;	state Exp;
branches;
next	1.11;

1.11
date	98.03.18.22.33.30;	author fox;	state Exp;
branches;
next	1.10;

1.10
date	98.03.15.00.59.15;	author fox;	state Exp;
branches;
next	1.9;

1.9
date	98.03.14.08.56.52;	author fox;	state Exp;
branches;
next	1.8;

1.8
date	98.03.12.19.27.02;	author fox;	state Exp;
branches;
next	1.7;

1.7
date	98.03.11.20.45.13;	author gribble;	state Exp;
branches;
next	1.6;

1.6
date	98.03.11.00.36.22;	author fox;	state Exp;
branches;
next	1.5;

1.5
date	98.03.11.00.13.02;	author fox;	state Exp;
branches;
next	1.4;

1.4
date	98.03.08.03.24.23;	author fox;	state Exp;
branches;
next	1.3;

1.3
date	98.03.06.02.00.55;	author fox;	state Exp;
branches;
next	1.2;

1.2
date	98.03.05.01.31.40;	author fox;	state Exp;
branches;
next	1.1;

1.1
date	98.03.04.23.15.27;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.04.23.15.27;	author fox;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Armando's mods.
@
text
@\documentclass{ifip}
\usepackage{epsfig}
\usepackage{harvard}
\usepackage{times}
\usepackage{url}

\author{Armando Fox, Ian Goldberg, Steven D. Gribble, David C. Lee, \\
        Anthony Polito, and Eric A. Brewer}
\affiliation{445 Soda Hall}

\address{University of California at Berkeley \\
         Berkeley, CA, USA 94720-1776 \\
         1-510-643-9475, 1-510-642-5775 (fax)\\
         \{fox,iang,gribble,lcddave,aspolito,brewer\}@@cs.berkeley.edu
}

\begin{document}


\chapter{Experience With Top Gun Wingman: A Proxy-Based Graphical Web
Browser for the 3Com PalmPilot}


\input{abstract}

%   major foci: adaptive middleware
%         Web/middleware integration
%         thin client lessons        

\keywords{middleware, adaptive, proxy, Palm Pilot, topgun wingman}

\input{intro}
% Motivation/goals of paper [AF] - 1 pg [currently 1.25]

%   This is not a port of desktop browser to PDA
%   Describe adaptive middleware proxy (AMWP) approach (roughly)
%   Make claims for AMWP in general and scalable TACC servers in particular:
%      1. better performance (compared to port or least-common-denominator
%         standards-compliant implementation) 
%      2. enables more features/behaviors (some of which would be roughly
%         impossible w/o AMWP).  Enables complex applications on very
%         meager clients - offloading complexity to proxy.
%      3. leverages existing infrastruc and serves legacy/thin
%         clients (really the same thing!)
%      4. can be cost effective if done right, because it can be (a)
%         generalizable and (b) economical to operate as a service

% \input{proxy}
% Client-proxy-server model [AF] - 1 pg [currently 1.75]
%         Middleware Philosophy: client/network variation
%         Examples of past middleware (TranSend, etc)
%         Building middleware apps with TACC (very brief)
%         Why a Web browser as a middleware app? (``horizontal'' vs
%            ``vertical'') 
%         Rough arch. of Wingman as a C-P-S app (general description only,
%            no details at this point; eg ``proxy transforms pages to
%            simple binary markup and serves them in simple ALF protocol'')
        
\input{impl}
% Detailed description/implementation [DL,AP] - 2.5 pgs
%         User's view of the client
%               screenshots, features, anecdotes, zip support, etc.
%         Interesting implementation details
%               ADU/ALF
%               2-bit hacks, aggregators
%               screenshots
%         Performance (and specs: code size, mem usage, etc)
%                 compare to other browsers on Pilot [claim: AMWP gives
%                         better performance]
%                 compare to desktop performance [claim: AMWP is a better
%                         way to support legacy clients, even over
%                         existing  low-bw]
%                 compare features to both desktop and Pilot browsers:
%                         transparent upgrades, weird file format
%                         capabilities, extrapolate to possible other
%                         features like Powerpoint browsing [claim: AMWP
%                         enables richer feature set, for lower cost]
%               report Tbmp-munger as upper bound on expected latency
%               compare Perl html vs C html
%         TACC cluster server brief descr  [AF] [currently 1 pg]
%                 scaling, F/T, availabilty; why important
%                 cost of operation [claim: cost effectiveness]
%                 BASE semantics; why good for this app [omit?]
%                 other TACC apps (1 paragraph) [claim: generalizable,
%                         means code can be re-used, etc]

\input{lessons}
% Lessons/Experience with Wingman [SG] - 2.5 pgs
%          Put stuff at the proxy whenever you can:
%               Prog env major limitations
%               Why ADU/ALF; app structure designed to make porting
%                       easy, with minimal assumptions about new clients
%               Image muncher upgrade & other upgrades
%               Ability to extend/support new datatypes; examples
%               Aggregator mechanism: ``shoot down and restart'' to add new
%               Version number hack for backward compat
%          the power of aggregators
%               as a backup for no forms support
%               as customized aggregational services
%               appearing soon in Spyglass Prism [those dicks]
%          back end performance; what is needed to run the backend of a
%               upness (describe overloaded process table phenomenon)
%               split app; synergy with clusters?  (distinguish from
%               naive method of replicated monolithic backends or
%               replicated backend context-per-user; how TACC enables;
%               distinguish from Spyglass-like approaches; mention
%               Spyglass numbers)
%          ``Build it and they will come'': strong grass-roots support
%               from Pilot user community; keeping it running is really
%               important  (TACC server technology helps w/this)
                              
\input{related}
% Related/Future work [SG] - 0.5
%         Wit, Newton browser
%         Middleware: various proxy refs
%         Protocol extensions for Mediaboard; a ``reference thin
%               client'' draw/render/interaction app for MB, Web,
%               Interactor controls (Todd), etc.
%         security - for this middleware in general and this app in particular
%               implications of proxy-based vs end-to-end security

\input{concl}
% Conclusions [AF] - 0.5 pgs
%        reiterate that we supported claims for AMWP, and that
%         scalable TACC server is a fine prog model and implementation
%         of such a AMWP.

\begin{small}
\bibliographystyle{agsm}
\bibliography{all}
\end{small}

\section{BIOGRAPHY}

\textbf{Armando Fox} received a BSEE from M.I.T. and an MSEE from the
University of Illinois, has worked as a CPU architect at Intel Corp., and
is currently completing his Ph.D. at the University of California,
Berkeley, as a researcher in the Daedalus/BARWAN and InfoPad projects.  He
will be an assistant professor at Stanford University starting in January
1999.  His primary interests are application-level support for adaptive
mobile computing, design of reliable distributed systems to support
infrastructural applications, and user interface issues related to mobile
computing.

\textbf{Ian Goldberg} is a Graduate Student Researcher and founding member
of the Internet Security, Applications, Authentication and Cryptography
(ISAAC) research group at UC Berkeley.  His research areas include
cryptography, security, privacy systems, and digital cash.  He holds a
B.Math.\ from the University of Waterloo, Canada, and a M.Sc.\ from UC
Berkeley, USA.

\textbf{Steven Gribble} received a combined Computer Science and Physics
B.Sc.\ from the University of British Columbia in 1995, and a Computer
Science M.Sc.\ from the University of California, Berkeley in 1997.  He is
currently pursuing his Ph.D.\ at Berkeley, and expects to graduate in May
of 2000.  His interests include application-level support for adaptive
mobile computing, and system and compiler support for scalable,
highly-available infrastructure services.

\textbf{David C. Lee} received a Bachelor of Science in Electrical Engineering
Computer Science from the University of California, Berkeley, in May 1998. 
Though currently working in industry, he plans to go to graduate school
within a few years. 

\textbf{Anthony Polito} received a Bachelor of Arts in Computer Science 
from the University of California, Berkeley in 1998.  He plans to go
to graduate school in 1999.

\textbf{Eric A. Brewer} is an Assistant Professor of Computer Science at
U.C.\ Berkeley, and received his Ph.D.\ in CS from MIT in 1994.  Interests
include mobile and wireless computing (the InfoPad and Daedalus projects);
scalable servers (the NOW, Inktomi, and TranSend projects); and
application- and system-level security (the ISAAC project).  Previous work
includes multiprocessor-network software and topologies, and
high-performance multiprocessor simulation.

\end{document}

@


1.28
log
@*** empty log message ***
@
text
@d9 1
a9 1
\affiliation{University of California at Berkeley}
d11 1
a11 1
\address{Soda Hall, UC Berkeley Campus \\
d135 9
a143 10

\textbf{Armando Fox} received a BSEE from M.I.T. and an MSEE from the University
of Illinois, has worked as a CPU architect at Intel Corp., and is
currently completing his Ph.D. at the University of California,
Berkeley, as a researcher in the Daedalus/BARWAN and InfoPad projects.
He will be an assistant professor at Stanford University starting in
January 1999.  His primary interests are application-level support for
adaptive mobile computing, design of reliable distributed systems to
support infrastructural applications, and user interface issues related
to mobile computing.  He can be reached at fox@@cs.berkeley.edu.
d153 6
a158 6
B.Sc.\ from the University of British Columbia (Vancouver, Canada) in 1995,
and a Computer Science M.Sc.\ from the University of California, Berkeley
in 1997.  He is currently pursuing his Ph.D.\ at Berkeley, and expects to
graduate in May of 2000.  His interests include application-level support
for adaptive mobile computing, and system and compiler support for
scalable, highly-available infrastructure services.
d167 1
a167 1
to graduate school starting in 1999.
d170 1
a170 1
U.C. Berkeley, and received his PhD in CS from MIT in 1994.  Interests
@


1.27
log
@OK, we're there.
@
text
@d135 10
a144 8
\textbf{Armando Fox} received a BSEE from M.I.T. and an MSEE from the
University of Illinois, has worked as a CPU architect at Intel Corp., and
is currently completing his Ph.D. at the University of California,
Berkeley, as a researcher in the Daedalus/BARWAN and InfoPad projects.  He
will be an assistant professor at Stanford University starting in January
1999.  His primary interests are application-level support for adaptive
mobile computing, multimedia networks for mobile computing, and user
interface issues related to mobile computing.
@


1.26
log
@Hacking away
@
text
@d144 6
a149 1
\textbf{Ian Goldberg} is...
d152 6
a157 7
Bachelor of Science degree from the University of British Columbia
(Vancouver, Canada) in 1995, and a Computer Science Master of Science
degree from the University of California, Berkeley in 1997.  He is
currently pursuing his Ph.D. at Berkeley, and expects to graduate in May of
2000.  His interests include application-level support for adaptive mobile
computing, and system and compiler support for scalable, highly-available
infrastructure services.
@


1.25
log
@changed my about thingy to read plans instead of hopes.  Cause god damnit
I'm gona be assertive.  I'm good enough.  I'm smart enough, and people
like me GOD DAMNIT!  (Also once again resisted the urge to append "unless
he drops out of life and becomes an acid casualty" the the end there.  Oh
it is SOOOOO tempting.)  (I wonder if anyone actually reads these revision
note thingies.)
@
text
@d128 1
d131 1
@


1.24
log
@uch a beautiful little about paragraph.  isn't it so KUTE?
@
text
@d159 1
a159 1
from the University of California, Berkeley in 1998.  He hopes to go
@


1.23
log
@argh
@
text
@d158 3
a160 1
\textbf{Anthony Polito} is ...
a170 1

@


1.22
log
@Much changes
@
text
@d146 6
a151 6
(Vancouver, Canada) in June of 1995, and a Computer Science Master of
Science degree from the University of California, Berkeley in December of
1997.  He is currently pursuing his Ph.D. at Berkeley, and expects to
graduate in May of 2000.  His interests include application-level support
for adaptive mobile computing, and system and compiler support for
scalable, available infrastructure services.
@


1.21
log
@Added "url.sty" file.
@
text
@d7 3
a9 4
\author{Armando Fox, Ian Goldberg, Steven D. Gribble,
David C. Lee, Anthony Polito, and Eric A. Brewer}
\affiliation{Computer Science Division, University of California at
Berkeley}
d11 2
a12 2
\address{Soda Hall \#1776, UC Berkeley Campus\\
         Berkeley, CA, USA 94720-1776\\
d133 8
a140 1
\textbf{Armando Fox} is...
d145 7
a151 4
Bachelor of Science degree from the University of British Columbia (Vancouver,
Canada) in June of 1995, and a Computer Science Master of Science degree from
the University of California, Berkeley in December of 1997.  He is currently
pursuing his Ph.D. at Berkeley, and expects to graduate in May of 2000.
d160 7
a166 1
\textbf{Eric A. Brewer} is ...
d169 1
@


1.20
log
@Added bios
@
text
@d5 1
@


1.19
log
@Many changes, related to the style the conference demands.  Much work on the bibliography will be necessary.
@
text
@d137 5
a141 1
\textbf{Steven Gribble} is...
d143 4
a146 1
\textbf{David C. Lee} is...
@


1.18
log
@Done!
@
text
@d1 1
a1 1
\documentclass[10pt,twocolumn]{article}
d3 2
d6 10
a15 36
\setlength{\textheight}{9.0in}
\setlength{\columnsep}{0.25in}
\setlength{\textwidth}{6.45in}
\setlength{\footskip}{0.0in}
\setlength{\topmargin}{0.0in}
\setlength{\headheight}{0.0in}
\setlength{\headsep}{0.0in}
\setlength{\oddsidemargin}{0in}
\setlength{\parindent}{1pc}

% started out with art10.sty and modified params to conform to IEEE format
% further mods to conform to Usenix standard

\makeatletter
%as Latex considers descenders in its calculation of interline spacing,
%to get 12 point spacing for normalsize text, must set it to 10 points
\def\@@normalsize{\@@setsize\normalsize{12pt}\xpt\@@xpt
\abovedisplayskip 10pt plus2pt minus5pt\belowdisplayskip \abovedisplayskip
\abovedisplayshortskip \z@@ plus3pt\belowdisplayshortskip 6pt plus3pt
minus3pt\let\@@listi\@@listI} 

%need a 12 pt font size for subsection and abstract headings
\def\subsize{\@@setsize\subsize{12pt}\xipt\@@xipt}


%make section titles bold and 12 point, 2 blank lines before, 1 after
\def\section{\@@startsection {section}{1}{\z@@}{24pt plus 2pt minus 2pt}
{12pt plus 2pt minus 2pt}{\large\bf}}

%make subsection titles bold and 11 point, 1 blank line before, 1 after
\def\subsection{\@@startsection {subsection}{2}{\z@@}{12pt plus 2pt minus 2pt}
{12pt plus 2pt minus 2pt}{\subsize\bf}}
\makeatother

% no page numbers
\pagestyle{empty}
d20 1
a20 5

%don't want date printed
\date{}

\title{Experience With Top Gun Wingman: A Proxy-Based Graphical Web
a21 16
\author{Armando Fox, Ian Goldberg, Steven D. Gribble, \\
David C. Lee, Anthony Polito, and Eric A. Brewer \\
Computer Science Division, University of California at Berkeley \\
{\em \{fox,iang,gribble,lcddave,aspolito,brewer\}@@cs.berkeley.edu} \\
\\
Primary contact: Steven D. Gribble \\
Address: 445 Soda Hall \#1776, UC Berkeley Campus, Berkeley, CA USA
94720-1776 \\
Telephone: (510) 643-9435 \\
FAX: (510) 642-5775 \\
Email: gribble@@cs.berkeley.edu \\
Nature of submission:  full-paper
}

\maketitle
\thispagestyle{empty}
d30 1
d128 1
a128 2
\begin{small}
\bibliographystyle{plain}
d130 14
a143 1
\end{small}
d146 1
@


1.17
log
@*** empty log message ***
@
text
@d43 2
d53 9
a61 1
{\em \{fox,iang,gribble,lcddave,aspolito,brewer\}@@cs.berkeley.edu}
@


1.16
log
@All there.  Complete draft.  woohoo.
@
text
@d61 1
a61 1
%         web/middleware integration
@


1.15
log
@*** empty log message ***
@
text
@d47 1
a47 1
Browser for the USR PalmPilot}
@


1.14
log
@*** empty log message ***
@
text
@d55 1
@


1.13
log
@More changes.
@
text
@d38 3
d49 1
a49 1
David C. Lee, Anthony Polito, and Professor Eric A. Brewer \\
@


1.12
log
@*** empty log message ***
@
text
@d45 5
a49 7
\author{Armando Fox 
        \and Ian Goldberg
        \and Steven D. Gribble
        \and David C. Lee
        \and Anthony Polito
        \and Eric A. Brewer \\
        {\em \{fox,iang,gribble,lcddave,aspolito,brewer\}@@cs.berkeley.edu}}
@


1.11
log
@*** empty log message ***
@
text
@d43 1
a43 1
\title{Experience With Top Gun Wingman, A Proxy-Based Graphical Web
d48 1
a49 1
        \and David C. Lee
d51 1
a51 1
        fox,iang,gribble,aspolito,lcddave,brewer@@cs.berkeley.edu}
@


1.10
log
@*** empty log message ***
@
text
@d79 1
a79 1
\input{proxy}
@


1.9
log
@*** empty log message ***
@
text
@d44 1
a44 1
Browser for the Palm Pilot PDA}
@


1.8
log
@*** empty log message ***
@
text
@d43 2
a44 1
\title{Experience With Top Gun Wingman \ldots}
d51 1
a51 1
        \{fox,iang,gribble,aspolito,lcddave,brewer\}@@cs.berkeley.edu}
d64 1
a64 1
% Motivation/goals of paper [AF] - 1 pg
d80 1
a80 1
% Client-proxy-server model [AF] - 1 pg
d111 1
a111 1
%         TACC cluster server brief descr  [AF]
@


1.7
log
@Slight mods
@
text
@a163 3


\end{document}
@


1.6
log
@*** empty log message ***
@
text
@d71 2
a72 1
%         impossible w/o AMWP)
d110 1
a110 1
%         TACC cluster server brief descr
@


1.5
log
@*** empty log message ***
@
text
@d55 1
a55 1
%% \input{abstract}
d62 1
d77 1
d88 1
d116 1
d141 1
a141 1

d151 1
a155 2

%% \input{concl}
@


1.4
log
@new crack at an outline
@
text
@d62 1
a62 1
% Motivation/goals of paper
d76 1
a76 1
% Client-proxy-server model
d86 7
a92 3
% Detailed description/implementation
%         Neat things about the client, screenshots, features, anecdotes
%         Interesting implementation details (2-bit hacks, aggregators)
d104 2
d113 1
a113 1
% Lessons/Experience with Wingman
d119 1
d122 4
d127 1
d130 3
a132 1
%               replicated backend context-per-user; how TACC enables)
d138 1
a138 1
% Related/Future work
d147 2
a148 1
% Conclusions - reiterate that we supported claims for AMWP, and that
@


1.3
log
@*** empty log message ***
@
text
@d61 24
a84 10
%   minor foci:  distributed systems aspects (BASE, FT, scal, etc)
%                (non-)comparison to Dcom, CORBA, other distributed object
%                systems

% ``This is not a port of desktop browser to PDA''

% TACC environment as middleware
%         Client-proxy-server model
%         Building middleware apps
%         Wingman as a TACC app (implementation...)
a85 7
% Distrib systems property of TACC
%         Why distrib cluster system for Internet apps
%         BASE semantics; why good for this app; comparison to other
%                 distrib sys
%         Scaling, F/T behavior
%         internal load bal

d87 1
a87 1
%       Neat things about the client, screenshots, features, anecdotes
d89 17
a105 2
%         Performance (and specs: code size, mem usage, etc; compare to
%                 other browsers on Pilot and to desktop browsers)
d107 2
a108 2
% Thin Client Lessons/implementation
%         Lessons: put stuff at the proxy whenever you can:
d119 8
a126 10
%                               

% Middleware Philosophy (Intro/Motivation from IEEE Adapt)
%         Client/network variation
%         Lessons from previous thin-client work (Charon, etc)
%         TranSend, proxy, general discussion of this area
%         security - for this middleware in general and this app in particular
%         implications of proxy-based vs end-to-end security
        
% Future work
d130 6
a135 8
%         Java client
%         Commercialization: forms, etc
%         ProActive

% Related work
%         Wit, Newton browser, other browsers that all suck
%         Middleware: proxy refs                
                
@


1.2
log
@*** empty log message ***
@
text
@d62 1
a62 1
%                comparison to Dcom, CORBA, other distributed object
d65 1
a65 4
% Middleware Philosophy (Intro/Motivation from IEEE Adapt)
%         Client/network variation
%         Lessons from previous thin-client work (Charon, etc)
%         TranSend, proxy, general discussion of this area
d79 6
d88 3
a90 2
%               Why ADU/ALF
%               Image muncher upgrade
d93 12
a104 3
%         Interesting implementation details (2-bit hacks, aggregators)
%         Performance (and specs: code size, mem usage, etc; compare to
%                 other browsers on Pilot and to desktop browsers)
@


1.1
log
@Initial revision
@
text
@d1 116
@


1.1.1.1
log
@Middleware 98 submission on Top Gun WIngman
@
text
@@

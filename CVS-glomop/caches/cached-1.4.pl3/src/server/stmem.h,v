head     1.1;
branch   1.1.1;
access   ;
symbols  caches-tag:1.1.1.1 caches-tag:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     97.08.11.05.36.03;  author gribble;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.08.11.05.36.03;  author gribble;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@
/* 
 *  $Id: stmem.h,v 1.1.1.1 1996/10/25 23:50:42 gribble Exp $
 *
 *  File:         stmem.h
 *  Description:  Store manager <-> memory manager interface
 *  Author:       Chuck Neerdaels, USC (chuckn@@rand.org)
 *  Created:      Tue Apr  5 16:51:26 1994
 *  Language:     C
 **********************************************************************
 *  Copyright (c) 1994, 1995.  All rights reserved.
 *  
 *    The Harvest software was developed by the Internet Research Task
 *    Force Research Group on Resource Discovery (IRTF-RD):
 *  
 *          Mic Bowman of Transarc Corporation.
 *          Peter Danzig of the University of Southern California.
 *          Darren R. Hardy of the University of Colorado at Boulder.
 *          Udi Manber of the University of Arizona.
 *          Michael F. Schwartz of the University of Colorado at Boulder.
 *          Duane Wessels of the University of Colorado at Boulder.
 *  
 *    This copyright notice applies to software in the Harvest
 *    ``src/'' directory only.  Users should consult the individual
 *    copyright notices in the ``components/'' subdirectories for
 *    copyright information about other software bundled with the
 *    Harvest source code distribution.
 *  
 *  TERMS OF USE
 *    
 *    The Harvest software may be used and re-distributed without
 *    charge, provided that the software origin and research team are
 *    cited in any use of the system.  Most commonly this is
 *    accomplished by including a link to the Harvest Home Page
 *    (http://harvest.cs.colorado.edu/) from the query page of any
 *    Broker you deploy, as well as in the query result pages.  These
 *    links are generated automatically by the standard Broker
 *    software distribution.
 *    
 *    The Harvest software is provided ``as is'', without express or
 *    implied warranty, and with no support nor obligation to assist
 *    in its use, correction, modification or enhancement.  We assume
 *    no liability with respect to the infringement of copyrights,
 *    trade secrets, or any patents, and are not responsible for
 *    consequential damages.  Proper use of the Harvest software is
 *    entirely the responsibility of the user.
 *  
 *  DERIVATIVE WORKS
 *  
 *    Users may make derivative works from the Harvest software, subject 
 *    to the following constraints:
 *  
 *      - You must include the above copyright notice and these 
 *        accompanying paragraphs in all forms of derivative works, 
 *        and any documentation and other materials related to such 
 *        distribution and use acknowledge that the software was 
 *        developed at the above institutions.
 *  
 *      - You must notify IRTF-RD regarding your distribution of 
 *        the derivative work.
 *  
 *      - You must clearly notify users that your are distributing 
 *        a modified version and not the original Harvest software.
 *  
 *      - Any derivative product is also subject to these copyright 
 *        and use restrictions.
 *  
 *    Note that the Harvest software is NOT in the public domain.  We
 *    retain copyright, as specified above.
 *  
 *  HISTORY OF FREE SOFTWARE STATUS
 *  
 *    Originally we required sites to license the software in cases
 *    where they were going to build commercial products/services
 *    around Harvest.  In June 1995 we changed this policy.  We now
 *    allow people to use the core Harvest software (the code found in
 *    the Harvest ``src/'' directory) for free.  We made this change
 *    in the interest of encouraging the widest possible deployment of
 *    the technology.  The Harvest software is really a reference
 *    implementation of a set of protocols and formats, some of which
 *    we intend to standardize.  We encourage commercial
 *    re-implementations of code complying to this set of standards.  
 *  
 *  
 */
#ifndef STMEM_H
#define STMEM_H

#include <stdio.h>
#include "debug.h"
#include "ansihelp.h"
#include "stack.h"

typedef struct mem_n *mem_node;
typedef struct mem_n {
    char *data;
    int len;
    mem_node next;
} Mem_Node;

typedef struct mem_hdr *mem_ptr;
typedef struct mem_hdr {
    mem_node head;
    mem_node tail;
    int origin_offset;
    void (*mem_free) _PARAMS((mem_ptr mem));
    void (*mem_free_data) _PARAMS((mem_ptr mem));
    int (*mem_free_data_upto) _PARAMS((mem_ptr mem, int target_offset));
    int (*mem_append) _PARAMS((mem_ptr mem, char *data, int len));
    int (*mem_copy) _PARAMS((mem_ptr mem, int offset, char *buf, int size));
    int (*mem_grep) _PARAMS((mem_ptr mem, char *string, int nbytes));
} Mem_Hdr;

/* To reduce memory fragmentation, we now store the memory version of an
 * object in fixed size blocks of size PAGE_SIZE and instead of calling 
 * malloc and free, we manage our own fixed block free list.   
 */

#define SM_PAGE_SIZE 4096
#define DISK_PAGE_SIZE  8192

/* Memory allocator routines for fixed size blocks */
typedef struct _stmem_stats {
    int total_pages_allocated;
    int page_size;
    int n_pages_free;
    int n_pages_in_use;
    Stack free_page_stack;
} stmem_stats;

stmem_stats sm_stats;
stmem_stats disk_stats;

char *get_free_4k_page();
void put_free_4k_page();

char *get_free_8k_page();
void put_free_8k_page();

extern mem_ptr memInit();
#endif
@


1.1.1.1
log
@Harvest and squid caches.
@
text
@@

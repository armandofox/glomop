head     1.1;
branch   1.1.1;
access   ;
symbols  caches-tag:1.1.1.1 caches-tag:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     97.08.11.05.36.00;  author gribble;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.08.11.05.36.00;  author gribble;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@# $Id: cached.conf,v 1.1.1.1 1996/10/25 23:50:37 gribble Exp $
#
#  NOTE: Upon installation, cached.conf is a symbolic link to this file,
#	 cached.conf.default.  If you want to change this file, please
#	 remove the symbolic link and copy cached.conf.default to
#	 cached.conf.  Then make your changes to cached.conf.
#
#
#  cached.conf - Harvest Object Cache configuration file
#
#	Host:           ???
#	Description:    ???
#
#	For more information about the Harvest Object Cache, refer to
#	http://harvest.cs.colorado.edu/harvest/doc.html
#

#  TAG: ascii_port
#	The port number where cached will listen for HTTP client
#	requests.  The default is 3128 (actually specified in
#	src/include/config.h).  For httpd-accel mode, use 80.  The value
#	given here may be overridden by using the -a command line
#	option.
#ascii_port 3128

#  TAG: udp_port
#	The port number where cached will listen for ICP requests from
#	neighbor caches.  The default is 3130 (actually specified in
#	src/include/config.h).  For httpd-accel mode, it can be disabled
#	with -1.  The value given here may be overridden by using the -u
#	command line option.
#udp_port 3130

#
#  TAG: httpd_accel 
#	If you want to run cached as an httpd accelerator, define the
#	host name and port number of the httpd server to which the
#	accelerator should forward requests that miss in the cache.  The
#	default is to disable the httpd accelerator mode.  If you
#	want to  run the cache as both an accelerator and a normal proxy
#	cache 'set httpd_accel_with_proxy on' below
#
#httpd_accel your.real.httpd.host your.real.httpd.port

#
#  TAG: cache_hot_vm_factor
#	This parameter is only used when the cache is running strictly
#	in httpd_accel mode.  In this case the cache keeps a number of
#	objects entirely in memory.  We keep 'hot_vm_factor' such
#	objects for each megabyte of cache_mem.  So, the number of
#	number of hot_vm objects is calculated as
#
#		hot_vm_count = cache_mem * hot_vm_factor / 1048576
#
#	The default is 0, which disables hot_vm objects.  The suggested
#	value for httpd_accel_mode is 12.5.
#
#cache_hot_vm_factor 0

#
#  TAG: httpd_accel_with_proxy
#	If you want to use cached as both a local httpd accelerator
#	and as a proxy, change this to 'on'.  The default is 'off'
#	which will generate an error message when you try to proxy
#	through the cache in httpd-accel mode.
#
#httpd_accel_with_proxy off


######################################################################
#  Parameters to define where the cache fits into the caching topology
######################################################################

#
#  TAG: cache_host 
#	To specify other caches in a hierarchy, use the format:
#
#	    hostname type ascii_port udp_port
#
#   For example,
#
#	#                                        proxy  udp
#	#          hostname             type     port   port  options
#	#          -------------------- -------- ----- -----  -----------
#	cache_host bigserver.usc.edu    parent    3128  3130  [proxy-only]
#	cache_host littleguy1.usc.edu   neighbor  3128  3130  [proxy-only]
#	cache_host littleguy1.usc.edu   neighbor  3128  3130  [proxy-only]
#
#	      type:  either 'parent' or 'neighbor'.
#
#	proxy_port:  The port number where the cache listens for proxy
#	             requests.
#
#	  udp_port:  Used for querying neighbor/parent caches about
#	             objects.  To have a non-Harvest neighbor/parent
#	             specify '7' for the udp port and make sure the
#	             neighbor/parent machine has the UDP echo port
#	             enabled in its /etc/inetd.conf file.
#
#	    options: use 'proxy-only' to specify that objects fetched
#		     from this cache should not be saved locally.
#
#	NOTE: when using a non-Harvest neighbor/parent, there is no
#	      difference between a neighbor and a parent.
#
#cache_host hostname type 3128 3130

#  TAG: cache_host_domain
#	Use to limit the domains for which a neighbor/parent cache
#	will be queried.  Usage:
#
#		cache_host_domain cache-host	domain [domain ...]
#		cache_host_domain cache-host	!domain
#
#	For example, specifying
#
#		cache_host_domain bigserver.usc.edu	.edu
#
#	has the effect such that UDP query packets are sent to
#	'bigserver' only when the requested object exists on a
#	server in the .edu domain.  Prefixing the domainname
#	with '!' means that the cache will be queried for objects
#	NOT in that domain.
#
#	NOTE:	* Any number of domains may be given for a cache-host,
#		  either on the same or separate lines.
#		* When multiple domains are given for a particular
#		  cache-host, the first matched domain is applied.
#		* Cache hosts with no domain restrictions are queried
#		  for all requests.
#		* There are no defaults.

#
#  TAG:	inside_firewall
#	This tag specifies a list of domains inside your Internet
#	firewall.
#
#	Usage: inside_firewall my.domain  [ my.other.domain ...]
#
#	The use of this tag affects the server selection algorithm in
#	two ways.  Objects which do not match any of the listed domains
#	will be considered "beyond the firewall."  For these:"
#		- There will be no DNS lookups for the URL-host.
#		- The object will always be fetched from one of
#		  the parent or neighbor caches.
#
#	As a special case you may specify the domain as 'none' to force
#	all requests to be fetched from neghbors and parents.
#
#inside_firewall topsecret.com

#
#  TAG:	local_domain
#	This tag specifies a list of domains local to your organization.
#
#	Usage: local_domain my.domain [ my.other.domain ...]
#
#	For URLs which are in one of the local domains, the object
#	is always fetched directly from the source and never from a
#	neighbor or parent.
#
#local_domain bigbucks.com

#
#  TAG: local_ip
#	This tag specifies a list of network addresses local to your
#	organization.
#
#	Usage: local_ip ip-address
#
#	This tag is similar to local_domain, except that the IP-address
#	of the URL-host is checked.  This requires that a DNS lookup
#	be done on the URL-host.  For this reason, local_domain is
#	preferred over local_ip.  By using local_domain it may be
#	possible to avoid the DNS lookup altogether and deliver the
#	object with less delay.
#
#local_ip 10.0.0.0
#local_ip 172.16.0.0

#  TAG:	single_parent_bypass
#	This tag specifies that it is okay to bypass the hierarchy
#	"Pinging" when there is only a single parent for a given URL.
#
#	Usage: single_parent_bypass on|off
#
#	Before actually sending ICP "ping" packets to parents and 
#	neighbors, we figure out which hosts would be pinged based
#	on the cache_host_domain rules, etc.  Often it may be the
#	case that only a single parent cache would be pinged.
#
#	Since there is only a single parent, there is a very good
#	chance that we will end up fetching the object from that
#	parent.  For this reason, it may be beneficial to avoid
#	the ping and just fetch the object anyway.
#
#	However, if we avoid the ping, we will be assuming that the
#	parent host is reachable and that the cache process is running.
#	By using the ping, we can be reasonably sure that the parent
#	host will be able to handle our request.  If the ping fails then
#	it may be possible to fetch the object directly from the source.
#
#	To favor the resiliency provided by the ping algorithm,
#	single_parent_bypass is 'off' by default.
#
#single_parent_bypass off

#
#  TAG: source_ping
#	If source_ping is enabled, then cached will include the source
#	provider site in its selection algorithm.  This is accomplished
#	by sending ICP "HIT" packets to the UDP echo port of the source
#	host.  Note that using source_ping may send a fair amount of UDP
#	traffic out on the Internet and may irritate paranoid network
#	administrators.
#
#	Note that source_ping is incompatible with inside_firewall.
#	For hosts beyond the firewall, source_ping packets will never
#	be sent.
#
#	By default, source_ping is off.
#
#source_ping off

#
#  TAG: neighbor_timeout (seconds)
#	This controls how long to wait for replies from neighbor caches.
#	If none of the parent or neighbor caches reply before this many
#	seconds (due to dropped packets or slow links), then the object
#	request will be satisfied from the default source.  The default
#	timeout is two seconds.
#
#neighbor_timeout 2

###################################################################
#  Parameters to tune the size, location, and TTLs of the cache
###################################################################

#
#  TAG: cache_mem (in megabytes)       
#	Maximum amout of virtual memory used to cache particularly hot
#	objects.  In a future release of Harvest this will correspond to
#	the maximum VM usage of the cache; for now, the cache VM images
#	will grow larger than this limit because other data are stored in
#	VM besides just hot objects.  The default is 16 MB.
#	
#cache_mem  16

#
#  TAG: cache_swap (in megabytes)
#	Maximum about of disk space used by the cache.  The default is
#	100 megabytes.  When the disk usage gets to this size, the cache
#	uses LRU replacement to evict objects as new objects are cached.
#	Note that cache_swap is set to: 
#	        max(cache_mem, cache_swap_specified) 
#	to guard against users' accidentally specifying a smaller
#	cache_swap than cache_mem size.
#	
#cache_swap 100

#
#  TAG: cache_swap_low  (percent, 0-100)
#  TAG: cache_swap_high (percent, 0-100)
#	The low- and high-water marks for cache LRU replacement.
#	LRU replacement begins when the high-water mark is reached
#	and ends when enough objects have been removed and the low-water
#	mark is reached.
#	
#cache_swap_low  60
#cache_swap_high 90

#
#  TAG: cache_dir 
#	Directory for on-disk cache storage.  The cache will change into
#	this directory when running.  The default is /tmp/cache.  
#
#	You can specify multiple cache_dir lines to spread the
#	cache among different disk partitions.
#
#cache_dir /tmp/cache

###################################################################
#  Parameters for defining cache server behaviour
###################################################################

#
#  TAG: http_stop, gopher_stop, ftp_stop 
#	Stoplist for URL's.  URL's which contain these strings will be
#	marked as un-cacheable.  NOTE, these objects are still proxied,
#	but not saved by the cache.
#
http_stop     /cgi-bin/
http_stop     ?
gopher_stop   ?

#
#  TAG: proxy_allow, proxy_deny
#	IP-based access control for proxy requests.  Allow or deny
#	clients based on IP number matching.  The order of the rules is
#	important, they are read and checked sequentially.  For example,
#	to allow only hosts on the Class C subnet 128.125.51 and the
#	Class B subnet 128.126.0 to access cached and deny all other
#	hosts, specify:
#	
#	proxy_allow    128.125.51.0
#	proxy_allow    128.126.0.0
#	proxy_deny     all
#
proxy_allow    all

#
#  TAG: accel_allow, accel_deny
#	IP-based access control for httpd_accel requsts.  Allow or deny
#	clients based on IP number matching.  The order of the rules is
#	important, they are read and checked sequentially.  For example,
#	to allow only hosts on the Class C subnet 128.125.51 and the
#	Class B subnet 128.126.0 to access cached and deny all other
#	hosts, specify:
#	
#	accel_allow    128.125.51.0
#	accel_allow    128.126.0.0
#	accel_deny     all
#
accel_allow    all

#
#  TAG: manager_allow, manager_deny
#	IP-based access control for cache manager interface.  
#	Allow or deny clients to access manager interface based on IP
#	number matching.  The order of the rules is important, they are
#	read and checked sequentially.  This list will be applied AFTER
#	general clients' IP access control list. Therefore, a client that
#	runs manager program must be qualified for BOTH list.
#	For example, to allow only a host with IP address 128.125.52.5
#	to access manager interface, specify:
#	
#	manager_allow    128.125.52.5
#	manager_deny     all
#
manager_allow    all

#
#  TAG: quick_abort
#	By default the cache continues to retrieve objects from
#	aborted requests.  This may be undesirable on slow (e.g. SLIP)
#	links and/or very busy caches.  Impatient users may tie up
#	file descriptors by repeatedly aborting and re-requesting
#	non-cachable objects.
#	
#quick_abort    off

#
#  TAG: bind_address
#	Use this to force the cache to listen on a specific IP address
#	(interface) instead of listening on all addresses.  Either
#	an IP address or hostname can be given.  For example:
#
#	    bind_address 172.16.1.1
#	    bind_address localhost
#	    bind_address www-slip.my.domain

###################################################################
#  Logging paramaters and files for the cache.  Refer to the Harvest 
#  User's Manual for information on the formats of these files.
###################################################################

#
#  TAG: cache_access_log 
#	Cache access logfile, which logs the hits/misses.  
#	The default is "cache.access.log" in the current directory.
#
#cache_access_log cache.access.log 

#
#  TAG: cache_log 
#	Cache logging file and log level -- 0=gross errors only,
#	1=useful feedback, ..., 10=maximal output. The default is to
#	write to "cache.log" in the current directory at level 0.
#
#cache_log cache.log 0

#
#  TAG: cache_hierarchy_log 
#	Hierachical caching access logfile.  It shows which parent,
#	neighbor, or source host a request is satisfied from.
#	The default filename is cache.hierarchy.log.
#
#cache_hierarchy_log cache.hierarchy.log 

#
#  TAG: emulate_httpd_log
#	The Cache can emulate the log file format which many 'httpd'
#	programs use.  To disable/enable this emulation, set 
#	emulate_httpd_log to 'off' or 'on'.  The default 
#	is to enable this emulation.
#
#emulate_httpd_log on

###################################################################
#  External programs needed by the cache
###################################################################

#
#  TAG: cache_ftp_program 
#	Where to find the 'ftpget' program that retrieves FTP data (HTTP
#	and Gopher protocol support are built into the cache).  The
#	default is ftpget, so the program must be in your PATH.
#
#cache_ftp_program ftpget

#
#  TAG: cache_ftp_options
#	A list of options for the 'ftpget' program.
#
#	        -c num[:delay]  Max connect attempts and retry delay
#	        -l num[:delay]  Max login attempts and retry delay
#	        -r num[:delay]  Max restart attempts and retry delay
#	        -t seconds      Idle timeout
#	        -n seconds      Negative TTL
#	        -p path         Icon URL prefix
#	        -s .ext         Icon URL suffix
#	        -h              Convert to HTTP
#	        -R              DON'T get README file
#	        -w chars        Filename width in directory listing
#	        -W              Wrap long filenames
#	        -Ddbg           Debug options
#	        -v              Print version and exit
#
#	Defaults:
#		-c 1:3
#		-l 1:30
#		-r 1:3
#		-t value for 'read_timeout'
#		-n value for 'negative_ttl'
#		-w 32
#		-h
#
#	Example:
#		cache_ftp_options -c 3:5 -t 600 -R -W
#
#cache_ftp_options

#
#  TAG: cache_dns_program 
#	Specify the location of the executable for dnslookup process.
#	The default is dnsserver, so the program must be in your PATH.
#
#cache_dns_program dnsserver

###################################################################
#  Parameters for tuning the cache
###################################################################

#
#  TAG: ftp, gopher, http
#	Object size limits (in MB) and default TTLs (in minutes) 
#	per access type.
#
#	You cannot have a max object size that is greater than
#	cache_mem.  We recommend that max object sizes are no greater
#	than (cache_mem / 4).
#
#	Objects greater than max-obj-size will be proxied, but not
#	cached.  
#
#	The defaults are:
#
# Access Type    Max Object Size    TTL (note: 10080 minute = 1 week)
# ---------      ----------------   -----------
#gopher                  4            10080 
#http                    4            10080 
#ftp                     4            10080 

#
#  TAG: ttl_pattern
#	Selection of TTL's based on URL regular expressions (syntax
#	is the POSIX standard).  There are no defaults.
#
#	The list of URL patterns are searched in the order listed here.
#	All patterns in the list are checked and the last match is used.
#	There are two ways to specify the TTL: an absolute value, and
#	as a percentage of the object's age.
#
#	The percentage factor is listed last on the line and may be
#	omitted.   If the value is positive (non-zero) and the object
#	metadata includes a last-modified timestamp, the TTL will be set as
#	the given percent of the difference between current time and
#	the last-modified time.  The number following the percentage
#	is an upper limit on the TTL.  The default is 43200 minutes, or
#	30 days.  This means that no object whose TTL is set by this
#	method will remain in the cache for longer than 30 days.
#
#	If the percentage factor is not used (for example when an object
#	has no last-modified timestamp) the absolute TTL value will
#	be checked instead.  If the absolute value is non-negative,
#	it will be used.
#
#	A negative absolute TTL value in conjunction with a positive
#	percentage factor has the effect that the TTL is set from 
#	the pattern match only if a last-modified timestamp is present.
#
#	If neither the absolute TTL or percentage factor result in a
#	TTL for the object, the default TTL from the preceeding section
#	will be used.
#
#	Examples:
#
#	                                              Calculate TTL as
#	                                Absolute      this percentage of
#	        Regular Expression      TTL in        the object's age
#	        matching URLs           minutes       %age   Max (minutes)
# ---------     ---------------------   -----------   ------ ------------
#ttl_pattern    ^http://                    1440        20%      43200
#ttl_pattern    ^ftp://                    10080        20%      43200
#ttl_pattern    \.gif$                      2880        50%      43200
#ttl_pattern    /cgi-bin/                      0         0%      43200

#
#  TAG: wais_relay
#	Relay WAIS request to host (1st arg) at port (2 arg).  
#	Third argument is max object size.
#
#	wais_relay is not supported by default.  To use this feature
#	add -DUSE_WAIS_RELAY to the DEFINES in src/server/Makefile
#
#wais_relay localhost 8000 4

#
#  TAG: negative_ttl (in minutes)         
#	Time-to-Live (TTL) for negative caching of retrieved objects.
#	The default is 5 minutes.  Note that this is different from
#	negative caching of DNS lookups.  See the Harvest User's Manual
#	for details.
#
#negative_ttl 5

#
#  TAG: cache_mem_high (in percent)
#	The high water mark for cache memory storage.  When the amount of
#	RAM used by the hot-object RAM cache reaches this point, the
#	cache starts throwing objects out of the RAM cache (but they
#	remain on disk).  The default is 90%.
#
#cache_mem_high 90

#
#  TAG: cache_mem_low (in percent)         
#	The low water mark for cache memory storage.  When the amount of
#	RAM used by the hot object cache reaches this point, the cache
#	stops throwing objects out of the cache.  The default is 60%.
#
#cache_mem_low 60

#
#  TAG: connect_timeout (in seconds)
#	Some systems (notably Linux) can not be relied upon to properly
#	time out connect(2) requests.  Therefore the cached process
#	enforces its own timeout on server connections.  This parameter
#	specifies how long to wait for the connect to complete.  The
#	default is two minutes (120 seconds).
#
#connect_timeout 120

#
#  TAG: read_timeout (in minutes)         
#	An active connection will be aborted after read_timeout minutes
#	of no activity on that connection (i.e., assume the remote server
#	or network connection died after the connection was established).
#	The default is 15 minutes.
#
#read_timeout 15

#
#  TAG: client_lifetime (in minutes)         
#	The maximum amount of time that a client (browser) is allowed to
#	remain connected to the cache process.  This protects the Cache
#	from having alot of sockets (and hence file descriptors) tied up
#	in a CLOSE_WAIT state from remote clients that go away without
#	properly shutting down (either because of a network failure or
#	because of a poor client implementation).  The default is three
#	hours, 20 minutes.
#
#	NOTE:  The default value is designed with low-speed client
#	connections in mind.  200 minutes should be plenty of time to
#	transfer a 10M file at 1k/sec.  If you have high-speed client
#	connectivity, or occasionally run out of file descriptors,
#	we suggest you lower this value appropriately.
#
#client_lifetime 200

#
#  TAG: clean_rate (in minutes)
#	How often to force a full garbage collection.   Garbage collection
#	involves checking the expire time of every object in the cache.
#
#	The cache will remove expired objects as space is needed for
#	new ones, so it should not be necessary to run full garbage
#	collections.  For very large caches, garbage collection 
#	may take a significant amount of time, during which it will
#	not process client requests.  By default garbage collection
#	is disabled.  If you want to force regular garbage collection
#	(perhaps to reclaim disk space) set this to a positive
#	value such as 30 minutes.
#
#clean_rate -1

#
#  TAG: append_domain 
#	Appends local domain name to hostnames without any dots in them.
#	append_domain must begin with a period.
#
#append_domain .yourdomain.com

#
#  TAG: dns_children
#	The number of processes spawn to service DNS name lookups.
#	For heavily loaded caches on large servers, you should 
#	probably increase this value to at least 10.  The maximum
#	is 32.  The default is 5.
#
#dns_children 5

###################################################################
#  Administrative parameters for the cache
###################################################################

#
#  TAG: cache_mgr 
#	Email-address of local cache manager who will receive
#	mail if the cache dies.  The default is not to send mail.
#
#cache_mgr your.name@@your.domain.com

#
#  TAG: cache_effective_user
#	If the cache is run as root, it will change its effective/real
#	UID/GID to the UID/GID specified below.  The default is not to
#	change UID/GID.
#
#cache_effective_user nobody nogroup

#
#  TAG: logfile_rotate #
#	Specifies the number of logfile rotations to make upon receiving
#	a HUP signal.  The default is 10, which will rotate with
#	extensions 0 through 9.  Setting logfile_rotate to 0 will
#	disable the rotation, but the logfiles are still closed and
#	re-opened.  This will enable you to rename the logfiles yourself
#	just before sending a HUP signal to the cached process.
#
#logfile_rotate 10



###################################################################
#  Parameters for the cache registration service
###################################################################
#
#	This section contains parameters for the (optional) cache
#	announcement service.  This service is provided to help Harvest
#	cache administrators locate one another in order to join or
#	create cache hierarchies.
#
#	An 'announcement' message is sent (via UDP) to the registration
#	service by the program 'send-announce'.  This program is called
#	in the RunCache script every time the cached process is started.
#	You may also run the 'send-announce' program manually, or from
#	cron if you like.  By default, the annoucement message is NOT
#	SENT unless you enable it with 'cache_announce' below.
#
#	The announcement message includes your hostname, plus the
#	following information from this configuration file:
#
#		ascii_port
#		udp_port
#		cache_mgr
#		announce_organization
#		announce_latitude
#		announce_longitude
#		announce_comment
#
#	All current information is processed regularly and made
#	available on the Web at http://www.nlanr.net/Cache/Tracker/.


# If this is 'on' then an announcment will be sent every time you
# start up your cache.  The default is 'off'
#
cache_announce off

# This is the hostname and portnumber where the registration message
# will be sent.  The default is 'sd.cache.nlanr.net:3131'
#
announce_to sd.cache.nlanr.net:3131

# Please enter a description for your organization here
#
announce_organization	Your Organization

# Please fill in your latitude and longitude coordinates.  This will
# allow maps to be produced for a graphical interface to browsing
# other caches.
#
# Enter latitude coordinates in this form:
#
#	 dd mm ss N|S
#
# Enter longitude coordinates in this form:
#
#	ddd mm ss E|W
#
# If you are in the US, you might be able to figure out your coordinates
# from one of the following services:
#
#	http://wings.buffalo.edu/geogw
#	http://tiger.census.gov/cgi-bin/gazetteer
#
#
#announce_latitude      dd mm ss N
#announce_longitude     ddd mm ss E

# Please include here any appropriate comments about your cache, network,
# configuration, or organization.  You may include more than one comment
# line.
#
#announce_comment
@


1.1.1.1
log
@Harvest and squid caches.
@
text
@@

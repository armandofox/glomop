head     1.1;
branch   1.1.1;
access   ;
symbols  caches-tag:1.1.1.1 caches-tag:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     97.08.11.05.36.13;  author gribble;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     97.08.11.05.36.13;  author gribble;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@# Generated automatically from Makefile.in by configure.
#
#  Makefile for the Squid Object Cache server
#
#  $Id: Makefile,v 1.2 1997/07/24 23:37:29 gribble Exp $
#
#  Uncomment and customize the following to suit your needs:
#
HOST_OPT	= # -DCACHEMGR_HOSTNAME="getfullhostname()"
AUTH_OPT	= # -DUSE_PROXY_AUTH=1
LOG_HDRS_OPT	= # -DLOG_FULL_HEADERS=1
ICMP_OPT	= # -DUSE_ICMP=1
DELAY_HACK      = # -DDELAY_HACK=1
USERAGENT_OPT	= # -DUSE_USERAGENT_LOG=1
KILL_PARENT_OPT	= # -DKILL_PARENT_OPT
USE_POLL_OPT    = # -DUSE_POLL
# do NOT define both USE_SPLAY_TREE and USE_BIN_TREE at the same time!
USE_SPLAY_TREE  = # -DUSE_SPLAY_TREE
USE_BIN_TREE    = # -DUSE_BIN_TREE

DEFINES         = $(HOST_OPT) $(AUTH_OPT) $(LOG_HDRS_OPT) \
                  $(ICMP_OPT) $(DELAY_HACK) $(USERAGENT_OPT) \
                  $(KILL_PARENT_OPT) $(USE_POLL_OPT) \
                  $(USE_SPLAY_TREE) $(USE_BIN_TREE)

prefix		= /home/tomorrow/b/grad/gribble/quid
exec_prefix	= ${prefix}
top_srcdir	= ..
bindir		= ${exec_prefix}/bin
libexecdir      = ${bindir}
sysconfdir	= ${prefix}/etc
localstatedir   = ${prefix}
srcdir		= .

DEFAULT_CONFIG_FILE     = $(sysconfdir)/squid.conf
DEFAULT_FTPGET          = $(libexecdir)/ftpget
DEFAULT_DNSSERVER       = $(libexecdir)/dnsserver
DEFAULT_CACHE_LOG       = $(localstatedir)/logs/cache.log
DEFAULT_ACCESS_LOG      = $(localstatedir)/logs/access.log
DEFAULT_STORE_LOG       = $(localstatedir)/logs/store.log
DEFAULT_PID_FILE        = $(localstatedir)/logs/squid.pid
DEFAULT_SWAP_DIR        = $(localstatedir)/cache
DEFAULT_PINGER		= $(libexecdir)/pinger
DEFAULT_UNLINKD		= $(libexecdir)/unlinkd

CC		= gcc
MAKEDEPEND	= /usr/sww/X11/bin/makedepend
INSTALL		= /usr/sww/bin/ginstall -c
INSTALL_BIN 	= ${INSTALL}
INSTALL_FILE 	= ${INSTALL} -m 644
INSTALL_SUID	= ${INSTALL} -o root -m 4755
RANLIB		= ranlib
LN_S		= ln -s
PERL            = /usr/sww/bin/perl
CRYPTLIB	= -lcrypt
REGEXLIB	= 
AC_CFLAGS	= -g -O2 -Wall
LDFLAGS		= -g
XTRA_LIBS	= -lm -lresolv -lsocket -lnsl 
XTRA_OBJS 	= 
MV		= /bin/mv
RM		= /bin/rm
SHELL		= /bin/sh


INCLUDE		= -I. -I../include -I$(srcdir)/../include
CFLAGS 		= $(AC_CFLAGS) $(INCLUDE) $(DEFINES)
SQUID_LIBS	= -L../lib $(CRYPTLIB) $(REGEXLIB) -lmiscutil $(XTRA_LIBS)
CLIENT_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)
DNSSERVER_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)
FTPGET_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)
PINGER_LIBS	= -L../lib -lmiscutil $(XTRA_LIBS)

PROGS           = squid client
UTILS           = dnsserver ftpget unlinkd
SUID_UTILS	= pinger
CGIPROGS	= cachemgr.cgi
OBJS	 	= \
		acl.o \
		cache_cf.o \
		client_db.o \
		client_side.o \
		comm.o \
		debug.o \
		disk.o \
		dns.o \
		errorpage.o \
		event.o \
		fdstat.o \
		filemap.o \
		fqdncache.o \
		ftp.o \
		gopher.o \
		hash.o \
		http.o \
		http-anon.o \
		icmp.o \
		icp.o \
		ident.o \
		ipcache.o \
		main.o \
		mime.o \
		neighbors.o \
		net_db.o \
		objcache.o \
		pass.o \
		proto.o \
		redirect.o \
		refresh.o \
		send-announce.o \
		ssl.o \
		stack.o \
		stat.o \
		stmem.o \
		store.o \
		store_clean.o \
		storetoString.o \
		tools.o \
		unlinkd.o \
		url.o \
		useragent.o \
		wais.o \
		$(XTRA_OBJS)

DEFAULTS        = \
	-DDEFAULT_CONFIG_FILE=\"$(DEFAULT_CONFIG_FILE)\" \
	-DDEFAULT_FTPGET=\"$(DEFAULT_FTPGET)\" \
	-DDEFAULT_DNSSERVER=\"$(DEFAULT_DNSSERVER)\" \
	-DDEFAULT_CACHE_LOG=\"$(DEFAULT_CACHE_LOG)\" \
	-DDEFAULT_ACCESS_LOG=\"$(DEFAULT_ACCESS_LOG)\" \
	-DDEFAULT_STORE_LOG=\"$(DEFAULT_STORE_LOG)\" \
	-DDEFAULT_PID_FILE=\"$(DEFAULT_PID_FILE)\" \
	-DDEFAULT_SWAP_DIR=\"$(DEFAULT_SWAP_DIR)\" \
	-DDEFAULT_PINGER=\"$(DEFAULT_PINGER)\" \
	-DDEFAULT_UNLINKD=\"$(DEFAULT_UNLINKD)\"

all:    squid.conf $(PROGS) $(UTILS) $(SUID_UTILS) $(CGIPROGS)

$(OBJS): ../include/version.h

squid:	$(OBJS)
	$(CC) -o $@@ $(LDFLAGS) $(OBJS) $(SQUID_LIBS)

cache_cf.o: cache_cf.c Makefile
	$(CC) -c $< $(CFLAGS) $(DEFAULTS)

client:	client.o
	$(CC) -o $@@ $(LDFLAGS) $@@.o $(CLIENT_LIBS)

dnsserver: dnsserver.o
	$(CC) -o $@@ $(LDFLAGS) $@@.o $(DNSSERVER_LIBS)

cachemgr.cgi:	cachemgr.o
	$(CC) -o $@@ $(LDFLAGS) cachemgr.o $(CLIENT_LIBS)

ftpget: ftpget.o
	$(CC) -o $@@ $(LDFLAGS) ftpget.o debug.o $(FTPGET_LIBS)

pinger: pinger.o
	$(CC) -o $@@ $(LDFLAGS) pinger.o debug.o $(PINGER_LIBS)

unlinkd: unlinkd.c
	$(CC) $(CFLAGS) -DUNLINK_DAEMON $(srcdir)/unlinkd.c -o $@@ $(LDFLAGS)

squid.conf: squid.conf.pre Makefile
	sed "\
	s%@@DEFAULT_CONFIG_FILE@@%$(DEFAULT_CONFIG_FILE)%g;\
	s%@@DEFAULT_FTPGET@@%$(DEFAULT_FTPGET)%g;\
	s%@@DEFAULT_DNSSERVER@@%$(DEFAULT_DNSSERVER)%g;\
	s%@@DEFAULT_UNLINKD@@%$(DEFAULT_UNLINKD)%g;\
	s%@@DEFAULT_PINGER@@%$(DEFAULT_PINGER)%g;\
	s%@@DEFAULT_CACHE_LOG@@%$(DEFAULT_CACHE_LOG)%g;\
	s%@@DEFAULT_ACCESS_LOG@@%$(DEFAULT_ACCESS_LOG)%g;\
	s%@@DEFAULT_STORE_LOG@@%$(DEFAULT_STORE_LOG)%g;\
	s%@@DEFAULT_PID_FILE@@%$(DEFAULT_PID_FILE)%g;\
	s%@@DEFAULT_SWAP_DIR@@%$(DEFAULT_SWAP_DIR)%g" < squid.conf.pre >$@@

install-mkdirs:
	-@@if test ! -d $(prefix); then \
		echo "mkdir $(prefix)"; \
		mkdir $(prefix); \
	fi
	-@@if test ! -d $(exec_prefix); then \
		echo "mkdir $(exec_prefix)"; \
		mkdir $(exec_prefix); \
	fi
	-@@if test ! -d $(bindir); then \
		echo "mkdir $(bindir)"; \
		mkdir $(bindir); \
	fi
	-@@if test ! -d $(libexecdir); then \
		echo "mkdir $(libexecdir)"; \
		mkdir $(libexecdir); \
	fi
	-@@if test ! -d $(sysconfdir); then \
		echo "mkdir $(sysconfdir)"; \
		mkdir $(sysconfdir); \
	fi
	-@@if test ! -d $(localstatedir); then \
		echo "mkdir $(localstatedir)"; \
		mkdir $(localstatedir); \
	fi
	-@@if test ! -d $(localstatedir)/logs; then \
		echo "mkdir $(localstatedir)/logs"; \
		mkdir $(localstatedir)/logs; \
	fi

# Michael Lupp <mike@@nemesis.saar.de> wants to know about additions
# to the install target.
install: all install-mkdirs
	@@for f in $(PROGS); do \
		if test -f $(bindir)/$$f; then \
			echo $(MV) $(bindir)/$$f $(bindir)/-$$f; \
			$(MV) $(bindir)/$$f $(bindir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(bindir); \
		$(INSTALL_BIN) $$f $(bindir); \
		if test -f $(bindir)/-$$f; then \
			echo $(RM) -f $(bindir)/-$$f; \
			$(RM) -f $(bindir)/-$$f; \
		fi; \
	done
	@@for f in $(UTILS); do \
		if test -f $(libexecdir)/$$f; then \
			echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
			$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(libexecdir); \
		$(INSTALL_BIN) $$f $(libexecdir); \
		if test -f $(libexecdir)/-$$f; then \
			echo $(RM) -f $(libexecdir)/-$$f; \
			$(RM) -f $(libexecdir)/-$$f; \
		fi; \
	done
	@@for f in $(CGIPROGS); do \
		if test -f $(libexecdir)/$$f; then \
			echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
			$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		fi; \
		echo $(INSTALL_BIN) $$f $(libexecdir); \
		$(INSTALL_BIN) $$f $(libexecdir); \
		if test -f $(libexecdir)/-$$f; then \
			echo $(RM) -f $(libexecdir)/-$$f; \
			$(RM) -f $(libexecdir)/-$$f; \
		fi; \
	done
	$(INSTALL_FILE) squid.conf $(sysconfdir)/squid.conf.default
	@@if test -f $(sysconfdir)/squid.conf ; then \
		echo "$@@ will not overwrite existing $(sysconfdir)/squid.conf" ; \
	else \
		echo "$(INSTALL_FILE) squid.conf $(sysconfdir)"; \
		$(INSTALL_FILE) squid.conf $(sysconfdir); \
	fi

install-pinger:
	@@f=pinger; \
	if test -f $(libexecdir)/$$f; then \
		echo $(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
		$(MV) $(libexecdir)/$$f $(libexecdir)/-$$f; \
	fi; \
	echo $(INSTALL_SUID) $$f $(libexecdir); \
	$(INSTALL_SUID) $$f $(libexecdir) || exit 1; \
	if test -f $(libexecdir)/-$$f; then \
		echo $(RM) -f $(libexecdir)/-$$f; \
		$(RM) -f $(libexecdir)/-$$f; \
	fi

clean: 
	-rm -rf *.o *pure_* core $(PROGS) $(UTILS) $(CGIPROGS) $(SUID_UTILS)

realclean:	clean
	-rm -f Makefile squid.conf squid.conf.pre

tags:
	ctags *.[ch] ../include/*.h ../lib/*.[ch]

depend:
	$(MAKEDEPEND) -I../include -I. -fMakefile *.c
@


1.1.1.1
log
@Harvest and squid caches.
@
text
@@

head	1.1;
branch	1.1.1;
access;
symbols
	V1_1_2:1.1.1.1
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.1
date	97.02.05.23.02.14;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.02.05.23.02.14;	author fox;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@DOCUMETNATION TBD

Common tasks:
       - how to add HTML tag behavior
       - how to see client prefs & user prefs from inside HTML parser
       - how to add/support a new user pref
       - how to add distillation & refinement for a new datatype
       - how to build a distiller using pythsvc
       - how to add a new client device, or new device characteristics

Design:
        - why no in-place refinement
        - forking issues: performance, max#conns, process table size

Open issues: known limitations/bugs and how to fix/workaround them
        - "addrss already in use"        
        - "in place" anchors (HREF="#foo") break with segmented pages...
        - how to tell if an imgmap is client-side-only or
        client-and-server-side? USEMAP tag occurs in both!!!!

Possible optimizations/extensions and how to do them:
         - redirect should be turned off for user-agent (ua->redirect_ok(0))
         - refining jpeg's doesn't work (same reason)
         - "sending headers only" is not a good idea
         - segmenting should use the cache mechanism, not its own

Code issues, many of which I will be fixing on an ongoing basis at UCB:
- a lot of redundancy in the params passed to forward_html and around in
  the parser.  resp should be able to substitute for url, etc.
- redundancy: send_html and html_wrap.
- optimize forward_via_pipeline - feed to popen when possible.  Need a
  "reads_stdin" (equivalent to "writes_stdout") to optimize this too.
- prefetch or somehow send-ahead image dimensions (would also allow
  omission of refinement tags where they are not appropriate)
- fetching an image standalone: should use the refinement mech., even
  though currently it bypasses it by design.
      
Drawbacks in current system that cannot easily be worked around:
- cache pollution
- "back" and "forward" semantics change with page segmentation
@


1.1.1.1
log
@New, distribution version of Pythia with a real directory structure and
real documentation
@
text
@@

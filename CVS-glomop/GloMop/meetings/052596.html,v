head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     98.01.29.19.46.24;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     98.01.29.19.46.24;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<head>
<title>GloMop: Week of 5/29</title>
</head>
<body>

<h2>Progress</h2>

<ul>
  <li> Experiments seem to show that the gm_sock abstraction can sustain
       between 600KB/s and 1MB/s on the same ethernet between solaris
       2.5 boxen, lower on HPUXen.  This is probably fast enough for the
       time being.  Looks like we may eventually have to move to C after
       all.
  <li> For web proxy: we can push all remote control to distillers.
       Pass client socket FH if distiller is on same machine
       (optimization), or give client a redirect while contacting remote
       distiller.  How can we play a similar trick with the modular
       proxy?
  <li> Chris Jones has made progress on a threaded Perl....
  <li> What should the "generic stateful segmentation" serivces module
       look like?  It needs to provide chunk storage, mapping URN's to
       stored chunks, and client retrieval of chunks.
  <li> Should the chunks
       be stored in some intermediate form?  Or opaquely in a specific
       form?  I.e. when we chunk up HTML, do we store the chunks as
       HTML, as ICAP, or as some other form?
  <li> Is it worth heavily modularizing the existing Web proxy?  or just
       cleaning it up and licensing it "as is"?
</UL>

<hr>
<address>fox@@cs.berkeley.edu</address>
</body></html>
@


1.1.1.1
log
@GloMOp bibliographies, meetings, etc, re-imported into GloMop CVS
archive on full-sail
@
text
@@

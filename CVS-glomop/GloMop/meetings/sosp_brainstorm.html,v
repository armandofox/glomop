head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     98.01.29.19.46.24;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     98.01.29.19.46.24;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<head>
<title>SOSP Things We'd Like to Say</title>
</head>

<body>
<h1>SOSP - &quot;Things We'd Like to Say&quot;</h1>

<H2>High Level</H2>
<ul>
     <li> it is cost effective to put cycles in the infrastructure (more
	  so than laying new wire)
     <li> mass customization is attainable and reasonable, and it helps
	  manage heterogeneity
     <li> the architechture is extensible
     <li> amortization to handle large burstiness (avg. load from one
	  user is very low)
     <li> goal is throughput, not response time - large number of
	  parallel tasks to handle largely I/O bound individual tasks
     <li> maximize utilization of system
     <li> grow/shrink dynamically to adapt to load, add additional random
	  resources to deal with bursts
     <li> composable modules, source/triangle route through system
     <li> view entire system as one entity (management, data visualization)
</ul>

<H2>Miscellaneous issues</h2>

<ul>
     <li> when do you throw stuff out of the cache?
     <li> what do you throw out (small vs. big, original vs. distilled,
	  old vs. new)
     <li> when do you recompute new distillation level vs. using one
	  that is close enough?
     <li> can you distill from an already distilled representation to save
	  time?
     <li> distillation cost largely irrelevant - cache miss time is the
	  most important cost in the system (not computation, not local
	  communication)
     <li> can we keep metadata on whether a server is fast or slow (to aid
	  with eviction decisions and predict end-to-end latency to client)?
     <li> what's the space of possible caching policies?
     <li> economic analysis to prove our model of internet service is cost
	  effective.
     <li> how do we deal with timeouts (harvest, front-end, ...)
</ul>

<hr>
<address><a href="http://www.cs.berkeley.edu/~gribble/">Steve
Gribble</a> / <i><a   
HREF="mailto:gribble@@cs.berkeley.edu">gribble@@cs.berkeley.edu</a></i></address>
<!-- hhmts start -->
Last modified: Mon Feb  3 19:46:51 1997
<!-- hhmts end -->
</body> </html>
@


1.1.1.1
log
@GloMOp bibliographies, meetings, etc, re-imported into GloMop CVS
archive on full-sail
@
text
@@

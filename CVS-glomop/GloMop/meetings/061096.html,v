head     1.1;
branch   1.1.1;
access   ;
symbols  initial:1.1.1.1 initial:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     98.01.29.19.46.24;  author fox;  state Exp;
branches 1.1.1.1;
next     ;

1.1.1.1
date     98.01.29.19.46.24;  author fox;  state Exp;
branches ;
next     ;


desc
@@



1.1
log
@Initial revision
@
text
@<html>
<head>
<title>GloMop: Week of 6/10</title>
</head>
<body>

<h2>Progress</h2>
<ul>
  <li> GloMop-to-proxy connection took its first breath today,
       end-to-end! (fetching and segmenting GIFs)
  <li> Tentative agreement to work part-time with GeoWorks, will pursue
       consultant position at Wink.
  <li> Discussion Monday: how to get a "threaded" libhttp for building a
       demuxer; will enable remote control of distillers.  Choices: get
       threaded libhttp, or subclass LWP::UserAgent into nonblocking and
       do a select-loop.  The W3C reference libhttp is thread-aware, but
       not threaded (it uses pseudo-threads with select as well).
       
</ul>

<hr><h2>Critical path</h2>

<ul>
  <li> Threaded I/O abstraction: try to subclass LWP::UserAgent to add
       asynchronous methods to it
  <li> Stateful chunking: interface for the Segmentation Manager
  <li> Refinement/prefs (UI on client side, specification on proxy side)
</ul>

<hr><h2>Short term plans</h2>

<ul>
  <li> Finish brainstorming about the role of evil twins vs. full GloMop
  <li> Define GloMop Lite and move forward with ICAP extension
</ul>

<hr>
<address>fox@@cs.berkeley.edu</address>
</body></html>
@


1.1.1.1
log
@GloMOp bibliographies, meetings, etc, re-imported into GloMop CVS
archive on full-sail
@
text
@@

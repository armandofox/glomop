head	1.2;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	96.12.03.03.16.30;	author fox;	state dead;
branches;
next	1.1;

1.1
date	96.11.27.21.34.54;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.11.27.21.34.54;	author fox;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@/* netmon.h: Contains message formats for the messages sent */
/* between the network link monitor and other people. */

#include <sys/types.h>
#include <netinet/in.h>

/* Constants */
#define NETMON_PORT 9542   /* Assumed to be UDP for now */

/* These indicate what the message is: */
/* For more details on what these commands mean, see the handoff */
/* working doc. */

#define WHATIS_CURRENT_PER 1
#define WHATIS_CURRENT_BANDWIDTH 2
#define WHATIS_CURRENT_LATENCY 3
#define WHATIS_POWER_TOSEND 4
#define WHATIS_POWER_TORECV 5
#define WHATIS_COST_TOSEND 6
#define WHATIS_COST_TORECV 7
#define WHATIS_POWER_TURNON 8
#define WHATIS_POWER_TURNOFF 9
#define WHATIS_MAX_PACKETSIZE 10
#define WHATIS_BEST_PACKETSIZE 11
#define REGISTER_BANDWIDTH_LESSTHAN 12
#define REGISTER_BANDWIDTH_MORETHAN 13
#define REGISTER_LATENCY_LESSTHAN 14
#define REGISTER_LATENCY_MORETHAN 15
#define REGISTER_PER_LESSTHAN 16
#define REGISTER_PER_MORETHAN 17

/* If the top bit is set, it's a reply */
#define REPLY_MASK (0x80)

/* So the message format is as follows:              */
/* ------------------------------------------------- */
/* |  client |  opcode |  age  | conf_intvl | data | */
/* ------------------------------------------------- */
/*   4 bytes   4 byte   4 bytes  4 bytes     4 bytes */

/* Client is the ip address of the mobile. */
/* All 4 byte entries have network byte ordering */
   
/* Age will be represented as seconds since the epoch, conf_intvl will */
/* be represented as a float, and data will be represented as a float. */

/* This means that the answer to the request is unknown */
/* We use infinity. */
#define UNKNOWN (1e250*1e250)

/* If the message is a request for data or a registration, the age, */
/* confidence interval, and data fields don't mean anything. */

/* Here is the data structure that can hold a network monitor message */
typedef struct _netmon_msg {
	in_addr client;
	u_long opcode;
	time_t age; /* How old the data is (when the last data point
				   that affected this metric was collected) */
	float confidence_interval; /* 95% confidence interval (+/- relative to data) */
	float data; /* The data of interest */
} netmon_msg;
		
	

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@cs294-7 DOLF (digital objects) project
@
text
@@

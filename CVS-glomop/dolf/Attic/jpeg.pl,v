head	1.2;
access;
symbols
	initial:1.1.1.1
	initial:1.1.1;
locks; strict;
comment	@# @;


1.2
date	96.12.03.03.16.27;	author fox;	state dead;
branches;
next	1.1;

1.1
date	96.11.27.21.34.53;	author fox;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.11.27.21.34.53;	author fox;	state Exp;
branches;
next	;


desc
@@


1.2
log
@*** empty log message ***
@
text
@#
#  Decision function for inline jpegs. Currently all it does is convert to GIF,
#  and possibly do some color quantization or graymapping.
#  $Id: jpeg.pl,v 1.1 1996/11/27 21:34:53 fox Exp fox $

package jpeg;

sub decide_distill {
    my($resp) = shift @@_;
    my(%prefs) = %{shift @@_};
    my(%client) = %{shift @@_};              # client characteristics

    my($data) = $resp->content;
    my($path) = shift @@_;
    my($arg) = shift @@_;
    if ($client{i} < length($data)) {
        my $gray = ($client{g} ? "-grayscale" : "");
        # if client has exactly 8 grays, quantize to jpeg.cmap.  otherwise, if
        # client has <256 colors, quant to that many.  Otherwise no quant.
        my $ncols = ( ($client{c} == 8 && $client{g})
                     ? "-map jpeg.cmap"
                     : ($client{c} < 256
                        ? "-quantize $client{c}"
                        : ""));
        return ("/bin/echo image/gif && %b/$path -gif -fast -scale 1/2 $gray $ncols %i");
    } elsif ($client{"g"}) {
        # at least grayscale conversion required
        return ("/bin/echo image/gif && %b/$path -gif -fast -grayscale %i | %b/cjpeg %i");
    } else {
        return undef;
    }
}

1;
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
#  $Id: jpeg.pl,v 1.5 1996/09/09 23:04:18 fox Exp $
@


1.1.1.1
log
@cs294-7 DOLF (digital objects) project
@
text
@@

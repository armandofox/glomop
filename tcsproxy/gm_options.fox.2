!---------------------------------------------------------------------
!  BEGIN SITE-SPECIFIC CONFIGURATION
!
!  You MUST modify these parameters to create a working installation.
!  You can do this before or after running configure.
!----------------------------------------------------------------------

! Full path to the directory in which you found this file (top level of
!  the distribution)
!
proxy.home:  /disks/barad-dur/sandbox1/tmp/fox/tcsproxy

! Location of LWP and MD5 Perl modules, if nonstandard.  Only needed
!   if you want to use the Perl-based HTML distiller (and/or write
!   additional Perl distillers)  *and* your LWP Perl module doesn't live
!   in a standard place.  See the README for more information.
!
proxy.perlmod: /disks/barad-dur/now/pythia/release/lib/perl-5.002

!
!  magic URL names:  these should generally point to the Web server that
!  hosts TranSend's "support pages".
!
frontend.webServerName: http://transend.CS.Berkeley.EDU
frontend.prefsFormDisplayUrl: http://www.CS.Berkeley.EDU/~fox/tmp/prefs.html
frontend.prefsFormSubmitUrl: http://www.CS.Berkeley.EDU/SetPrefs
frontend.getPrefsUrl: http://www.CS.Berkeley.EDU/GetPrefs.html

frontend.prefsChangeUrlString: http://www.CS.Berkeley.EDU/ChangePrefs
frontend.aggString: http://www.CS.Berkeley.EDU/agg/
                                    
!
! RExec initialization params
! rexec.rsh: name of the remote shell program; (use /usr/bin/rsh along with a 
!            .rhosts file rather than /usr/kerberos/bin/rsh, unless you can 
!            arrange to have kerberos tickets on all the machines on which the
!            frontend and the PTM could possibly be running) 
!            Leave the rexec.rsh entry blank to disable remote execution
! rexec.hosts: comma separated list of remote hosts
! rexec.rsh: /usr/bin/rsh
!

rexec.rsh: /usr/bin/rsh
rexec.args: -n
rexec.hosts: u20,u21,u22,u23,u24,u25,u26,u27,u28,u29,u30,u31,u32,u33,u34,u35,u36,u37,u38,u39,u40,u41,u42,u43,u44,u45,u46,u47,u48,u49,u50


!--------------------------------
! Cache subsystem configuration
!------------------------------
! A list of hosts running cache nodes; there must be at least 1.
! (port 3128 is assumed, since that's what Harvest uses)

cache.Partition: transend1 transend2 transend3 transend4

!------------------------------------------------------------
!   END SITE SPECIFIC CONFIGURATION
!------------------------------------------------------------

! For cache queries, what is the UDP timeout and # retries?
cache.UDP_timeout_sec: 0
cache.UDP_timeout_usec: 99000
cache.UDP_retries: 3

!------------------------------
!   Distiller configuration
!
! Each line in the distillers database has the following format:
!       dist.<distiller-type>: <executable-path> <ptm args>  -- <distiller-args>
!  All except distiller-type and executable-path are optional.
!------------------------------

dist.transend/text/html: sbin/perl_stub  5 3000 500 -- perl_dir/transend.text.html
dist.transend/text/x-big-html: sbin/html_munger
! dist.transend/image/gif: sbin/gif_munger
dist.transend/image/gif: sbin/giftojpg_munger 5 3000 500
dist.transend/image/jpeg: sbin/jpg_munger 5 3000 500
dist.wingman/*/*: sbin/perl_stub  5 3000 500 --  perl_dir/transend.text.piml
                         
dist.fox.text.html: sbin/perl_stub 5 3000 500 perl_dir/fox.text.html

dist.BayAreaCulture.agg: sbin/perl_stub 5 3000 500 perl_dir/BayAreaCulture.agg
dist.metasearch: sbin/perl_stub 5 3000 500 perl_dir/metasearch

!------------------------------
!  PTM configuration
!------------------------------
! location of the PTM executable
!
ptm.executable: sbin/ptm

!
! PTM beaconing channel: <multicast-ip-addr>/<port>[/<ttl>]
!
Monitor.listen: 228.9.10.8/8810/4
ptm.multicast: 224.9.10.8/9920/4
ptm.beacon_ms: 1000
ptm.lost_beacons: 3

!------------------------------ 
! Front end configuration
!------------------------------ 
! port to listen on
!
frontend.http_listen_port: 3339
frontend.wing_listen_port: 3338
!
! User prefs gdbm database
!
frontend.userprefs: uprefs.gdbm
!
! Number of worker threads
!
frontend.nthreads: 350
!
! Amount by which to boost priority of accept()'ing thread
!
frontend.acceptPrio: 30


!
!  Monitor X resources
!
!  The toplevel frame (containing the "Show" and "Kill" buttons and the
!  label displaying the unit's name) is called Top.
! *Top.show.background:
*Top.label.background: white
*Top.label.width: 25
*Top.host.background: white
*Top.host.width: 25
*Top.kill.foreground: red
*Top.rsh: rsh
!
! destroyondeath: yes => the toplevel window for the unit will be destroyed 
! when a death packet is received
!
*Top.destroyondeath: yes
!
! noicons: yes => hiding a toplevel will iconify it
!          no  => hiding a toplevel will withdraw it
!
*Top.noicons: yes
